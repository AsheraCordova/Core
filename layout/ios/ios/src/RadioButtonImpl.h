//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\ios_widget_library\src\main\java\com\ashera\layout\RadioButtonImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RadioButtonImpl")
#ifdef RESTRICT_RadioButtonImpl
#define INCLUDE_ALL_RadioButtonImpl 0
#else
#define INCLUDE_ALL_RadioButtonImpl 1
#endif
#undef RESTRICT_RadioButtonImpl

#if !defined (ASRadioButtonImpl_) && (INCLUDE_ALL_RadioButtonImpl || defined(INCLUDE_ASRadioButtonImpl))
#define ASRadioButtonImpl_

#define RESTRICT_BaseWidget 1
#define INCLUDE_ASBaseWidget 1
#include "BaseWidget.h"

#define RESTRICT_IsRadioButton 1
#define INCLUDE_ASIsRadioButton 1
#include "IsRadioButton.h"

#define RESTRICT_ICustomMeasureWidth 1
#define INCLUDE_ASICustomMeasureWidth 1
#include "ICustomMeasureWidth.h"

#define RESTRICT_FormElement 1
#define INCLUDE_ASFormElement 1
#include "FormElement.h"

@class ADRadioButton;
@class ASWidgetAttribute;
@class IOSClass;
@protocol ASIFragment;
@protocol ASILifeCycleDecorator;
@protocol ASIWidget;
@protocol JavaUtilMap;

@interface ASRadioButtonImpl : ASBaseWidget < ASIsRadioButton, ASICustomMeasureWidth, ASFormElement > {
 @public
  id uiView_;
  ADRadioButton *measurableView_;
}
@property id uiView;

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)localname;

- (instancetype)initWithNSString:(NSString *)groupName
                    withNSString:(NSString *)localname;

- (void)addCheckedListenerWithId:(id)listener
                    withNSString:(NSString *)id_;

- (id)asNativeWidget;

- (id)asWidget;

- (jboolean)checkIosVersionWithNSString:(NSString *)v;

- (void)createWithASIFragment:(id<ASIFragment>)fragment
              withJavaUtilMap:(id<JavaUtilMap>)params;

- (void)drawableStateChanged;

- (void)focus;

- (id)getAdjustsFontSizeToFitWidth;

- (id)getAllowsDefaultTighteningForTruncation;

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
              withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (jint)getBaseLine;

- (jint)getBorderPadding;

- (id)getHighlightedTextColor;

- (id)getIsEnabled;

- (id)getIsHighlighted;

- (id)getIsUserInteractionEnabled;

- (jint)getLineHeightPadding;

- (jint)getMaxEms;

- (jint)getMaxHeight;

- (jint)getMaxLines;

- (jint)getMaxWidth;

- (jint)getMinEms;

- (id)getMinimumScaleFactor;

- (jint)getMinLines;

- (id)getNumberOfLines;

- (id)getPreferredMaxLayoutWidth;

- (id)getShadowColor;

- (id)getText;

- (id)getTextColor;

- (NSString *)getTextEntered;

- (IOSClass *)getViewClass;

- (void)invalidate;

- (jboolean)isChecked;

- (jboolean)isViewVisible;

- (void)loadAttributesWithNSString:(NSString *)attributeName;

- (jint)measureWidth;

- (id<ASIWidget>)newInstance OBJC_METHOD_FAMILY_NONE;

- (void)onRtlPropertiesChangedWithInt:(jint)layoutDirection;

- (void)requestLayout;

- (void)resetError;

- (void)setAdjustsFontSizeToFitWidthWithId:(id)nativeWidget
                                    withId:(id)value;

- (void)setAllowsDefaultTighteningForTruncationWithId:(id)nativeWidget
                                               withId:(id)value;

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue
                withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (void)setCheckedWithBoolean:(jboolean)checked;

- (void)setErrorMessageWithNSString:(NSString *)message;

- (void)setHighlightedTextColorWithId:(id)nativeWidget
                               withId:(id)value;

- (void)setIdWithNSString:(NSString *)id_;

- (void)setIsEnabledWithId:(id)nativeWidget
                    withId:(id)value;

- (void)setIsHighlightedWithId:(id)nativeWidget
                        withId:(id)value;

- (void)setIsUserInteractionEnabledWithId:(id)nativeWidget
                                   withId:(id)value;

- (void)setMinimumScaleFactorWithId:(id)nativeWidget
                             withId:(id)value;

- (void)setNumberOfLinesWithId:(id)nativeWidget
                        withId:(id)value;

- (void)setPaddingWithId:(id)objValue;

- (void)setPaddingBottomWithId:(id)objValue;

- (void)setPaddingLeftWithId:(id)objValue;

- (void)setPaddingRightWithId:(id)objValue;

- (void)setPaddingTopWithId:(id)objValue;

- (void)setPreferredMaxLayoutWidthWithId:(id)nativeWidget
                                  withId:(id)value;

- (void)setShadowColorWithId:(id)nativeWidget
                      withId:(id)value;

- (void)setTextWithId:(id)nativeWidget
               withId:(id)value;

- (void)setTextColorWithId:(id)nativeWidget
                    withId:(id)value;

- (void)setVisibleWithBoolean:(jboolean)b;

- (void)showErrorWithNSString:(NSString *)message;

+ (NSString *)toUpperCaseWithNSString:(NSString *)text;

- (void)updatePadding;

#pragma mark Package-Private

@end

J2OBJC_STATIC_INIT(ASRadioButtonImpl)

J2OBJC_FIELD_SETTER(ASRadioButtonImpl, uiView_, id)
J2OBJC_FIELD_SETTER(ASRadioButtonImpl, measurableView_, ADRadioButton *)

inline NSString *ASRadioButtonImpl_get_LOCAL_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASRadioButtonImpl_LOCAL_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASRadioButtonImpl, LOCAL_NAME, NSString *)

inline NSString *ASRadioButtonImpl_get_GROUP_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASRadioButtonImpl_GROUP_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASRadioButtonImpl, GROUP_NAME, NSString *)

FOUNDATION_EXPORT void ASRadioButtonImpl_init(ASRadioButtonImpl *self);

FOUNDATION_EXPORT ASRadioButtonImpl *new_ASRadioButtonImpl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASRadioButtonImpl *create_ASRadioButtonImpl_init(void);

FOUNDATION_EXPORT void ASRadioButtonImpl_initWithNSString_(ASRadioButtonImpl *self, NSString *localname);

FOUNDATION_EXPORT ASRadioButtonImpl *new_ASRadioButtonImpl_initWithNSString_(NSString *localname) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASRadioButtonImpl *create_ASRadioButtonImpl_initWithNSString_(NSString *localname);

FOUNDATION_EXPORT void ASRadioButtonImpl_initWithNSString_withNSString_(ASRadioButtonImpl *self, NSString *groupName, NSString *localname);

FOUNDATION_EXPORT ASRadioButtonImpl *new_ASRadioButtonImpl_initWithNSString_withNSString_(NSString *groupName, NSString *localname) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASRadioButtonImpl *create_ASRadioButtonImpl_initWithNSString_withNSString_(NSString *groupName, NSString *localname);

FOUNDATION_EXPORT NSString *ASRadioButtonImpl_toUpperCaseWithNSString_(NSString *text);

J2OBJC_TYPE_LITERAL_HEADER(ASRadioButtonImpl)

@compatibility_alias ComAsheraLayoutRadioButtonImpl ASRadioButtonImpl;

#endif

#if !defined (ASRadioButtonImpl_ButtonTinttMode_) && (INCLUDE_ALL_RadioButtonImpl || defined(INCLUDE_ASRadioButtonImpl_ButtonTinttMode))
#define ASRadioButtonImpl_ButtonTinttMode_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASRadioButtonImpl_ButtonTinttMode : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASRadioButtonImpl_ButtonTinttMode)

FOUNDATION_EXPORT void ASRadioButtonImpl_ButtonTinttMode_init(ASRadioButtonImpl_ButtonTinttMode *self);

FOUNDATION_EXPORT ASRadioButtonImpl_ButtonTinttMode *new_ASRadioButtonImpl_ButtonTinttMode_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASRadioButtonImpl_ButtonTinttMode *create_ASRadioButtonImpl_ButtonTinttMode_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASRadioButtonImpl_ButtonTinttMode)

#endif

#if !defined (ASRadioButtonImpl_Ellipsize_) && (INCLUDE_ALL_RadioButtonImpl || defined(INCLUDE_ASRadioButtonImpl_Ellipsize))
#define ASRadioButtonImpl_Ellipsize_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASRadioButtonImpl_Ellipsize : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASRadioButtonImpl_Ellipsize)

FOUNDATION_EXPORT void ASRadioButtonImpl_Ellipsize_init(ASRadioButtonImpl_Ellipsize *self);

FOUNDATION_EXPORT ASRadioButtonImpl_Ellipsize *new_ASRadioButtonImpl_Ellipsize_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASRadioButtonImpl_Ellipsize *create_ASRadioButtonImpl_Ellipsize_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASRadioButtonImpl_Ellipsize)

#endif

#if !defined (ASRadioButtonImpl_MarqueeRepeatLimit_) && (INCLUDE_ALL_RadioButtonImpl || defined(INCLUDE_ASRadioButtonImpl_MarqueeRepeatLimit))
#define ASRadioButtonImpl_MarqueeRepeatLimit_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASRadioButtonImpl_MarqueeRepeatLimit : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

- (jboolean)supportsIntAlso;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASRadioButtonImpl_MarqueeRepeatLimit)

FOUNDATION_EXPORT void ASRadioButtonImpl_MarqueeRepeatLimit_init(ASRadioButtonImpl_MarqueeRepeatLimit *self);

FOUNDATION_EXPORT ASRadioButtonImpl_MarqueeRepeatLimit *new_ASRadioButtonImpl_MarqueeRepeatLimit_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASRadioButtonImpl_MarqueeRepeatLimit *create_ASRadioButtonImpl_MarqueeRepeatLimit_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASRadioButtonImpl_MarqueeRepeatLimit)

#endif

#if !defined (ASRadioButtonImpl_JustificationMode_) && (INCLUDE_ALL_RadioButtonImpl || defined(INCLUDE_ASRadioButtonImpl_JustificationMode))
#define ASRadioButtonImpl_JustificationMode_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASRadioButtonImpl_JustificationMode : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASRadioButtonImpl_JustificationMode)

FOUNDATION_EXPORT void ASRadioButtonImpl_JustificationMode_init(ASRadioButtonImpl_JustificationMode *self);

FOUNDATION_EXPORT ASRadioButtonImpl_JustificationMode *new_ASRadioButtonImpl_JustificationMode_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASRadioButtonImpl_JustificationMode *create_ASRadioButtonImpl_JustificationMode_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASRadioButtonImpl_JustificationMode)

#endif

#if !defined (ASRadioButtonImpl_Font_) && (INCLUDE_ALL_RadioButtonImpl || defined(INCLUDE_ASRadioButtonImpl_Font))
#define ASRadioButtonImpl_Font_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASRadioButtonImpl_Font : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASRadioButtonImpl_Font)

FOUNDATION_EXPORT void ASRadioButtonImpl_Font_init(ASRadioButtonImpl_Font *self);

FOUNDATION_EXPORT ASRadioButtonImpl_Font *new_ASRadioButtonImpl_Font_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASRadioButtonImpl_Font *create_ASRadioButtonImpl_Font_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASRadioButtonImpl_Font)

#endif

#if !defined (ASRadioButtonImpl_TextStyle_) && (INCLUDE_ALL_RadioButtonImpl || defined(INCLUDE_ASRadioButtonImpl_TextStyle))
#define ASRadioButtonImpl_TextStyle_

#define RESTRICT_AbstractBitFlagConverter 1
#define INCLUDE_ASAbstractBitFlagConverter 1
#include "AbstractBitFlagConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASRadioButtonImpl_TextStyle : ASAbstractBitFlagConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASRadioButtonImpl_TextStyle)

FOUNDATION_EXPORT void ASRadioButtonImpl_TextStyle_init(ASRadioButtonImpl_TextStyle *self);

FOUNDATION_EXPORT ASRadioButtonImpl_TextStyle *new_ASRadioButtonImpl_TextStyle_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASRadioButtonImpl_TextStyle *create_ASRadioButtonImpl_TextStyle_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASRadioButtonImpl_TextStyle)

#endif

#if !defined (ASRadioButtonImpl_DrawableTintMode_) && (INCLUDE_ALL_RadioButtonImpl || defined(INCLUDE_ASRadioButtonImpl_DrawableTintMode))
#define ASRadioButtonImpl_DrawableTintMode_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASRadioButtonImpl_DrawableTintMode : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASRadioButtonImpl_DrawableTintMode)

FOUNDATION_EXPORT void ASRadioButtonImpl_DrawableTintMode_init(ASRadioButtonImpl_DrawableTintMode *self);

FOUNDATION_EXPORT ASRadioButtonImpl_DrawableTintMode *new_ASRadioButtonImpl_DrawableTintMode_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASRadioButtonImpl_DrawableTintMode *create_ASRadioButtonImpl_DrawableTintMode_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASRadioButtonImpl_DrawableTintMode)

#endif

#if !defined (ASRadioButtonImpl_RadioButtonExt_) && (INCLUDE_ALL_RadioButtonImpl || defined(INCLUDE_ASRadioButtonImpl_RadioButtonExt))
#define ASRadioButtonImpl_RadioButtonExt_

#define RESTRICT_RadioButton 1
#define INCLUDE_ADRadioButton 1
#include "RadioButton.h"

#define RESTRICT_ILifeCycleDecorator 1
#define INCLUDE_ASILifeCycleDecorator 1
#include "ILifeCycleDecorator.h"

@class ADRect;
@class ADView;
@class ASRadioButtonImpl;
@class ASWidgetAttribute;
@class IOSIntArray;
@class IOSObjectArray;
@protocol ASIWidget;
@protocol JavaUtilList;

@interface ASRadioButtonImpl_RadioButtonExt : ADRadioButton < ASILifeCycleDecorator >

#pragma mark Public

- (instancetype)initWithASRadioButtonImpl:(ASRadioButtonImpl *)outer$;

- (jint)computeSizeWithFloat:(jfloat)width;

- (void)drawableStateChanged;

- (void)executeWithNSString:(NSString *)method
          withNSObjectArray:(IOSObjectArray *)canvas;

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute;

- (jint)getBorderPadding;

- (jint)getBorderWidth;

- (jint)getLineHeight;

- (jint)getLineHeightPadding;

- (void)getLocationOnScreenWithIntArray:(IOSIntArray *)appScreenLocation;

- (id<JavaUtilList>)getMethods;

- (NSString *)getText;

- (id<ASIWidget>)getWidget;

- (void)getWindowVisibleDisplayFrameWithADRect:(ADRect *)displayFrame;

- (ADView *)inflateViewWithNSString:(NSString *)layout;

- (void)initialized OBJC_METHOD_FAMILY_NONE;

- (jint)nativeMeasureHeightWithId:(id)uiView
                          withInt:(jint)width;

- (jint)nativeMeasureWidthWithId:(id)uiView;

- (id<ASILifeCycleDecorator>)newInstanceWithASIWidget:(id<ASIWidget>)widget OBJC_METHOD_FAMILY_NONE;

- (void)offsetLeftAndRightWithInt:(jint)offset;

- (void)offsetTopAndBottomWithInt:(jint)offset;

- (void)onMeasureWithInt:(jint)widthMeasureSpec
                 withInt:(jint)heightMeasureSpec;

- (void)remeasure;

- (void)removeFromParent;

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue;

- (void)setMyAttributeWithNSString:(NSString *)name
                            withId:(id)value;

- (void)setState0WithId:(id)value;

- (void)setState1WithId:(id)value;

- (void)setState2WithId:(id)value;

- (void)setState3WithId:(id)value;

- (void)setState4WithId:(id)value;

- (void)setVisibilityWithInt:(jint)visibility;

- (void)state0;

- (void)state1;

- (void)state2;

- (void)state3;

- (void)state4;

- (void)stateNo;

- (void)stateYes;

- (void)updateMeasuredDimensionWithInt:(jint)width
                               withInt:(jint)height;

#pragma mark Protected

- (void)onLayoutWithBoolean:(jboolean)changed
                    withInt:(jint)l
                    withInt:(jint)t
                    withInt:(jint)r
                    withInt:(jint)b;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithASIWidget:(id<ASIWidget>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASRadioButtonImpl_RadioButtonExt)

FOUNDATION_EXPORT void ASRadioButtonImpl_RadioButtonExt_initWithASRadioButtonImpl_(ASRadioButtonImpl_RadioButtonExt *self, ASRadioButtonImpl *outer$);

FOUNDATION_EXPORT ASRadioButtonImpl_RadioButtonExt *new_ASRadioButtonImpl_RadioButtonExt_initWithASRadioButtonImpl_(ASRadioButtonImpl *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASRadioButtonImpl_RadioButtonExt *create_ASRadioButtonImpl_RadioButtonExt_initWithASRadioButtonImpl_(ASRadioButtonImpl *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ASRadioButtonImpl_RadioButtonExt)

#endif

#if !defined (ASRadioButtonImpl_PostMeasureHandler_) && (INCLUDE_ALL_RadioButtonImpl || defined(INCLUDE_ASRadioButtonImpl_PostMeasureHandler))
#define ASRadioButtonImpl_PostMeasureHandler_

#define RESTRICT_EventBusHandler 1
#define INCLUDE_ASEventBusHandler 1
#include "EventBusHandler.h"

@class ASRadioButtonImpl;

@interface ASRadioButtonImpl_PostMeasureHandler : ASEventBusHandler

#pragma mark Public

- (instancetype)initWithASRadioButtonImpl:(ASRadioButtonImpl *)outer$
                             withNSString:(NSString *)type;

#pragma mark Protected

- (void)doPerformWithId:(id)payload;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASRadioButtonImpl_PostMeasureHandler)

FOUNDATION_EXPORT void ASRadioButtonImpl_PostMeasureHandler_initWithASRadioButtonImpl_withNSString_(ASRadioButtonImpl_PostMeasureHandler *self, ASRadioButtonImpl *outer$, NSString *type);

FOUNDATION_EXPORT ASRadioButtonImpl_PostMeasureHandler *new_ASRadioButtonImpl_PostMeasureHandler_initWithASRadioButtonImpl_withNSString_(ASRadioButtonImpl *outer$, NSString *type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASRadioButtonImpl_PostMeasureHandler *create_ASRadioButtonImpl_PostMeasureHandler_initWithASRadioButtonImpl_withNSString_(ASRadioButtonImpl *outer$, NSString *type);

J2OBJC_TYPE_LITERAL_HEADER(ASRadioButtonImpl_PostMeasureHandler)

#endif

#pragma pop_macro("INCLUDE_ALL_RadioButtonImpl")
