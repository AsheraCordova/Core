//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\ios_widget_library\src\main\java\com\ashera\layout\UITextViewLabelImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_UITextViewLabelImpl")
#ifdef RESTRICT_UITextViewLabelImpl
#define INCLUDE_ALL_UITextViewLabelImpl 0
#else
#define INCLUDE_ALL_UITextViewLabelImpl 1
#endif
#undef RESTRICT_UITextViewLabelImpl

#if !defined (ASUITextViewLabelImpl_) && (INCLUDE_ALL_UITextViewLabelImpl || defined(INCLUDE_ASUITextViewLabelImpl))
#define ASUITextViewLabelImpl_

#define RESTRICT_BaseWidget 1
#define INCLUDE_ASBaseWidget 1
#include "BaseWidget.h"

#define RESTRICT_ValidationErrorLabel 1
#define INCLUDE_ASValidationErrorLabel 1
#include "ValidationErrorLabel.h"

@class ADTextView;
@class ASWidgetAttribute;
@class IOSClass;
@protocol ASIFragment;
@protocol ASILifeCycleDecorator;
@protocol ASIWidget;
@protocol JavaUtilMap;

@interface ASUITextViewLabelImpl : ASBaseWidget < ASValidationErrorLabel > {
 @public
  id uiView_;
  ADTextView *measurableView_;
}
@property id uiView;

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)localname;

- (instancetype)initWithNSString:(NSString *)groupName
                    withNSString:(NSString *)localname;

- (id)asNativeWidget;

- (id)asWidget;

- (jboolean)checkIosVersionWithNSString:(NSString *)v;

- (void)createWithASIFragment:(id<ASIFragment>)fragment
              withJavaUtilMap:(id<JavaUtilMap>)params;

- (void)drawableStateChanged;

- (id)getAllowsEditingTextAttributes;

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
              withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (jint)getBaseLine;

- (jint)getBorderPadding;

- (id)getClearsOnInsertion;

- (id)getIsEditable;

- (id)getIsSelectable;

- (jint)getLineHeightPadding;

- (jint)getMaxEms;

- (jint)getMaxHeight;

- (jint)getMaxLines;

- (jint)getMaxWidth;

- (jint)getMinEms;

- (jint)getMinLines;

- (id)getPaddingBottom;

- (id)getPaddingLeft;

- (id)getPaddingRight;

- (id)getPaddingTop;

- (id)getText;

- (id)getTextColor;

- (id)getUsesStandardTextScaling;

- (IOSClass *)getViewClass;

- (void)invalidate;

- (void)loadAttributesWithNSString:(NSString *)attributeName;

- (id<ASIWidget>)newInstance OBJC_METHOD_FAMILY_NONE;

- (void)onRtlPropertiesChangedWithInt:(jint)layoutDirection;

- (void)requestLayout;

- (void)setAllowsEditingTextAttributesWithId:(id)nativeWidget
                                      withId:(id)value;

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue
                withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (void)setClearsOnInsertionWithId:(id)nativeWidget
                            withId:(id)value;

- (void)setErrorMessageWithNSString:(NSString *)message;

- (void)setIdWithNSString:(NSString *)id_;

- (void)setIsEditableWithId:(id)nativeWidget
                     withId:(id)value;

- (void)setIsSelectableWithId:(id)nativeWidget
                       withId:(id)value;

- (void)setPaddingBottomWithId:(id)paddingBottom;

- (void)setPaddingLeftWithId:(id)paddingLeft;

- (void)setPaddingRightWithId:(id)paddingRight;

- (void)setPaddingTopWithId:(id)paddingTop;

- (void)setTextWithId:(id)nativeWidget
               withId:(id)value;

- (void)setTextColorWithId:(id)nativeWidget
                    withId:(id)value;

- (void)setUsesStandardTextScalingWithId:(id)nativeWidget
                                  withId:(id)value;

- (void)setVisibleWithBoolean:(jboolean)b;

+ (NSString *)toUpperCaseWithNSString:(NSString *)text;

- (void)updatePadding;

#pragma mark Package-Private

@end

J2OBJC_STATIC_INIT(ASUITextViewLabelImpl)

J2OBJC_FIELD_SETTER(ASUITextViewLabelImpl, uiView_, id)
J2OBJC_FIELD_SETTER(ASUITextViewLabelImpl, measurableView_, ADTextView *)

inline NSString *ASUITextViewLabelImpl_get_LOCAL_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASUITextViewLabelImpl_LOCAL_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASUITextViewLabelImpl, LOCAL_NAME, NSString *)

inline NSString *ASUITextViewLabelImpl_get_GROUP_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASUITextViewLabelImpl_GROUP_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASUITextViewLabelImpl, GROUP_NAME, NSString *)

FOUNDATION_EXPORT void ASUITextViewLabelImpl_init(ASUITextViewLabelImpl *self);

FOUNDATION_EXPORT ASUITextViewLabelImpl *new_ASUITextViewLabelImpl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewLabelImpl *create_ASUITextViewLabelImpl_init(void);

FOUNDATION_EXPORT void ASUITextViewLabelImpl_initWithNSString_(ASUITextViewLabelImpl *self, NSString *localname);

FOUNDATION_EXPORT ASUITextViewLabelImpl *new_ASUITextViewLabelImpl_initWithNSString_(NSString *localname) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewLabelImpl *create_ASUITextViewLabelImpl_initWithNSString_(NSString *localname);

FOUNDATION_EXPORT void ASUITextViewLabelImpl_initWithNSString_withNSString_(ASUITextViewLabelImpl *self, NSString *groupName, NSString *localname);

FOUNDATION_EXPORT ASUITextViewLabelImpl *new_ASUITextViewLabelImpl_initWithNSString_withNSString_(NSString *groupName, NSString *localname) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewLabelImpl *create_ASUITextViewLabelImpl_initWithNSString_withNSString_(NSString *groupName, NSString *localname);

FOUNDATION_EXPORT NSString *ASUITextViewLabelImpl_toUpperCaseWithNSString_(NSString *text);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewLabelImpl)

@compatibility_alias ComAsheraLayoutUITextViewLabelImpl ASUITextViewLabelImpl;

#endif

#if !defined (ASUITextViewLabelImpl_AutoSizeTextType_) && (INCLUDE_ALL_UITextViewLabelImpl || defined(INCLUDE_ASUITextViewLabelImpl_AutoSizeTextType))
#define ASUITextViewLabelImpl_AutoSizeTextType_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASUITextViewLabelImpl_AutoSizeTextType : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUITextViewLabelImpl_AutoSizeTextType)

FOUNDATION_EXPORT void ASUITextViewLabelImpl_AutoSizeTextType_init(ASUITextViewLabelImpl_AutoSizeTextType *self);

FOUNDATION_EXPORT ASUITextViewLabelImpl_AutoSizeTextType *new_ASUITextViewLabelImpl_AutoSizeTextType_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewLabelImpl_AutoSizeTextType *create_ASUITextViewLabelImpl_AutoSizeTextType_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewLabelImpl_AutoSizeTextType)

#endif

#if !defined (ASUITextViewLabelImpl_Ellipsize_) && (INCLUDE_ALL_UITextViewLabelImpl || defined(INCLUDE_ASUITextViewLabelImpl_Ellipsize))
#define ASUITextViewLabelImpl_Ellipsize_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASUITextViewLabelImpl_Ellipsize : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUITextViewLabelImpl_Ellipsize)

FOUNDATION_EXPORT void ASUITextViewLabelImpl_Ellipsize_init(ASUITextViewLabelImpl_Ellipsize *self);

FOUNDATION_EXPORT ASUITextViewLabelImpl_Ellipsize *new_ASUITextViewLabelImpl_Ellipsize_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewLabelImpl_Ellipsize *create_ASUITextViewLabelImpl_Ellipsize_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewLabelImpl_Ellipsize)

#endif

#if !defined (ASUITextViewLabelImpl_MarqueeRepeatLimit_) && (INCLUDE_ALL_UITextViewLabelImpl || defined(INCLUDE_ASUITextViewLabelImpl_MarqueeRepeatLimit))
#define ASUITextViewLabelImpl_MarqueeRepeatLimit_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASUITextViewLabelImpl_MarqueeRepeatLimit : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

- (jboolean)supportsIntAlso;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUITextViewLabelImpl_MarqueeRepeatLimit)

FOUNDATION_EXPORT void ASUITextViewLabelImpl_MarqueeRepeatLimit_init(ASUITextViewLabelImpl_MarqueeRepeatLimit *self);

FOUNDATION_EXPORT ASUITextViewLabelImpl_MarqueeRepeatLimit *new_ASUITextViewLabelImpl_MarqueeRepeatLimit_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewLabelImpl_MarqueeRepeatLimit *create_ASUITextViewLabelImpl_MarqueeRepeatLimit_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewLabelImpl_MarqueeRepeatLimit)

#endif

#if !defined (ASUITextViewLabelImpl_JustificationMode_) && (INCLUDE_ALL_UITextViewLabelImpl || defined(INCLUDE_ASUITextViewLabelImpl_JustificationMode))
#define ASUITextViewLabelImpl_JustificationMode_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASUITextViewLabelImpl_JustificationMode : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUITextViewLabelImpl_JustificationMode)

FOUNDATION_EXPORT void ASUITextViewLabelImpl_JustificationMode_init(ASUITextViewLabelImpl_JustificationMode *self);

FOUNDATION_EXPORT ASUITextViewLabelImpl_JustificationMode *new_ASUITextViewLabelImpl_JustificationMode_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewLabelImpl_JustificationMode *create_ASUITextViewLabelImpl_JustificationMode_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewLabelImpl_JustificationMode)

#endif

#if !defined (ASUITextViewLabelImpl_AutoLink_) && (INCLUDE_ALL_UITextViewLabelImpl || defined(INCLUDE_ASUITextViewLabelImpl_AutoLink))
#define ASUITextViewLabelImpl_AutoLink_

#define RESTRICT_AbstractBitFlagConverter 1
#define INCLUDE_ASAbstractBitFlagConverter 1
#include "AbstractBitFlagConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASUITextViewLabelImpl_AutoLink : ASAbstractBitFlagConverter

#pragma mark Public

- (NSString *)getAllOption;

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUITextViewLabelImpl_AutoLink)

FOUNDATION_EXPORT void ASUITextViewLabelImpl_AutoLink_init(ASUITextViewLabelImpl_AutoLink *self);

FOUNDATION_EXPORT ASUITextViewLabelImpl_AutoLink *new_ASUITextViewLabelImpl_AutoLink_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewLabelImpl_AutoLink *create_ASUITextViewLabelImpl_AutoLink_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewLabelImpl_AutoLink)

#endif

#if !defined (ASUITextViewLabelImpl_Font_) && (INCLUDE_ALL_UITextViewLabelImpl || defined(INCLUDE_ASUITextViewLabelImpl_Font))
#define ASUITextViewLabelImpl_Font_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASUITextViewLabelImpl_Font : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUITextViewLabelImpl_Font)

FOUNDATION_EXPORT void ASUITextViewLabelImpl_Font_init(ASUITextViewLabelImpl_Font *self);

FOUNDATION_EXPORT ASUITextViewLabelImpl_Font *new_ASUITextViewLabelImpl_Font_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewLabelImpl_Font *create_ASUITextViewLabelImpl_Font_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewLabelImpl_Font)

#endif

#if !defined (ASUITextViewLabelImpl_TextStyle_) && (INCLUDE_ALL_UITextViewLabelImpl || defined(INCLUDE_ASUITextViewLabelImpl_TextStyle))
#define ASUITextViewLabelImpl_TextStyle_

#define RESTRICT_AbstractBitFlagConverter 1
#define INCLUDE_ASAbstractBitFlagConverter 1
#include "AbstractBitFlagConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASUITextViewLabelImpl_TextStyle : ASAbstractBitFlagConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUITextViewLabelImpl_TextStyle)

FOUNDATION_EXPORT void ASUITextViewLabelImpl_TextStyle_init(ASUITextViewLabelImpl_TextStyle *self);

FOUNDATION_EXPORT ASUITextViewLabelImpl_TextStyle *new_ASUITextViewLabelImpl_TextStyle_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewLabelImpl_TextStyle *create_ASUITextViewLabelImpl_TextStyle_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewLabelImpl_TextStyle)

#endif

#if !defined (ASUITextViewLabelImpl_DrawableTintMode_) && (INCLUDE_ALL_UITextViewLabelImpl || defined(INCLUDE_ASUITextViewLabelImpl_DrawableTintMode))
#define ASUITextViewLabelImpl_DrawableTintMode_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASUITextViewLabelImpl_DrawableTintMode : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUITextViewLabelImpl_DrawableTintMode)

FOUNDATION_EXPORT void ASUITextViewLabelImpl_DrawableTintMode_init(ASUITextViewLabelImpl_DrawableTintMode *self);

FOUNDATION_EXPORT ASUITextViewLabelImpl_DrawableTintMode *new_ASUITextViewLabelImpl_DrawableTintMode_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewLabelImpl_DrawableTintMode *create_ASUITextViewLabelImpl_DrawableTintMode_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewLabelImpl_DrawableTintMode)

#endif

#if !defined (ASUITextViewLabelImpl_UITextViewLabelExt_) && (INCLUDE_ALL_UITextViewLabelImpl || defined(INCLUDE_ASUITextViewLabelImpl_UITextViewLabelExt))
#define ASUITextViewLabelImpl_UITextViewLabelExt_

#define RESTRICT_TextView 1
#define INCLUDE_ADTextView 1
#include "TextView.h"

#define RESTRICT_ILifeCycleDecorator 1
#define INCLUDE_ASILifeCycleDecorator 1
#include "ILifeCycleDecorator.h"

@class ADRect;
@class ADView;
@class ASUITextViewLabelImpl;
@class ASWidgetAttribute;
@class IOSIntArray;
@class IOSObjectArray;
@protocol ASIWidget;
@protocol JavaUtilList;

@interface ASUITextViewLabelImpl_UITextViewLabelExt : ADTextView < ASILifeCycleDecorator >

#pragma mark Public

- (instancetype)initWithASUITextViewLabelImpl:(ASUITextViewLabelImpl *)outer$;

- (jint)computeSizeWithFloat:(jfloat)width;

- (void)drawableStateChanged;

- (void)executeWithNSString:(NSString *)method
          withNSObjectArray:(IOSObjectArray *)canvas;

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute;

- (jint)getBorderPadding;

- (jint)getBorderWidth;

- (jint)getLineHeight;

- (jint)getLineHeightPadding;

- (void)getLocationOnScreenWithIntArray:(IOSIntArray *)appScreenLocation;

- (id<JavaUtilList>)getMethods;

- (NSString *)getText;

- (id<ASIWidget>)getWidget;

- (void)getWindowVisibleDisplayFrameWithADRect:(ADRect *)displayFrame;

- (ADView *)inflateViewWithNSString:(NSString *)layout;

- (void)initialized OBJC_METHOD_FAMILY_NONE;

- (jint)nativeMeasureHeightWithId:(id)uiView
                          withInt:(jint)width;

- (jint)nativeMeasureWidthWithId:(id)uiView;

- (id<ASILifeCycleDecorator>)newInstanceWithASIWidget:(id<ASIWidget>)widget OBJC_METHOD_FAMILY_NONE;

- (void)offsetLeftAndRightWithInt:(jint)offset;

- (void)offsetTopAndBottomWithInt:(jint)offset;

- (void)onMeasureWithInt:(jint)widthMeasureSpec
                 withInt:(jint)heightMeasureSpec;

- (void)onRtlPropertiesChangedWithInt:(jint)layoutDirection;

- (void)remeasure;

- (void)removeFromParent;

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue;

- (void)setMyAttributeWithNSString:(NSString *)name
                            withId:(id)value;

- (void)setState0WithId:(id)value;

- (void)setState1WithId:(id)value;

- (void)setState2WithId:(id)value;

- (void)setState3WithId:(id)value;

- (void)setState4WithId:(id)value;

- (void)setVisibilityWithInt:(jint)visibility;

- (void)state0;

- (void)state1;

- (void)state2;

- (void)state3;

- (void)state4;

- (void)stateNo;

- (void)stateYes;

- (void)updateMeasuredDimensionWithInt:(jint)width
                               withInt:(jint)height;

#pragma mark Protected

- (void)onLayoutWithBoolean:(jboolean)changed
                    withInt:(jint)l
                    withInt:(jint)t
                    withInt:(jint)r
                    withInt:(jint)b;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithASIWidget:(id<ASIWidget>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUITextViewLabelImpl_UITextViewLabelExt)

FOUNDATION_EXPORT void ASUITextViewLabelImpl_UITextViewLabelExt_initWithASUITextViewLabelImpl_(ASUITextViewLabelImpl_UITextViewLabelExt *self, ASUITextViewLabelImpl *outer$);

FOUNDATION_EXPORT ASUITextViewLabelImpl_UITextViewLabelExt *new_ASUITextViewLabelImpl_UITextViewLabelExt_initWithASUITextViewLabelImpl_(ASUITextViewLabelImpl *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewLabelImpl_UITextViewLabelExt *create_ASUITextViewLabelImpl_UITextViewLabelExt_initWithASUITextViewLabelImpl_(ASUITextViewLabelImpl *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewLabelImpl_UITextViewLabelExt)

#endif

#if !defined (ASUITextViewLabelImpl_PostMeasureHandler_) && (INCLUDE_ALL_UITextViewLabelImpl || defined(INCLUDE_ASUITextViewLabelImpl_PostMeasureHandler))
#define ASUITextViewLabelImpl_PostMeasureHandler_

#define RESTRICT_EventBusHandler 1
#define INCLUDE_ASEventBusHandler 1
#include "EventBusHandler.h"

@class ASUITextViewLabelImpl;

@interface ASUITextViewLabelImpl_PostMeasureHandler : ASEventBusHandler

#pragma mark Public

- (instancetype)initWithASUITextViewLabelImpl:(ASUITextViewLabelImpl *)outer$
                                 withNSString:(NSString *)type;

#pragma mark Protected

- (void)doPerformWithId:(id)payload;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUITextViewLabelImpl_PostMeasureHandler)

FOUNDATION_EXPORT void ASUITextViewLabelImpl_PostMeasureHandler_initWithASUITextViewLabelImpl_withNSString_(ASUITextViewLabelImpl_PostMeasureHandler *self, ASUITextViewLabelImpl *outer$, NSString *type);

FOUNDATION_EXPORT ASUITextViewLabelImpl_PostMeasureHandler *new_ASUITextViewLabelImpl_PostMeasureHandler_initWithASUITextViewLabelImpl_withNSString_(ASUITextViewLabelImpl *outer$, NSString *type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewLabelImpl_PostMeasureHandler *create_ASUITextViewLabelImpl_PostMeasureHandler_initWithASUITextViewLabelImpl_withNSString_(ASUITextViewLabelImpl *outer$, NSString *type);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewLabelImpl_PostMeasureHandler)

#endif

#pragma pop_macro("INCLUDE_ALL_UITextViewLabelImpl")
