//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\ios_widget_library\src\main\java\com\ashera\layout\ViewGroupModelImpl.java
//

#define J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION 1




#include "HasWidgets.h"
#include "ILifeCycleDecorator.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IWidget.h"
#include "J2ObjC_source.h"
#include "PluginInvoker.h"
#include "SimpleWrapableView.h"
#include "ViewGroupModelImpl.h"
#include "ViewImpl.h"
#include "WidgetAttribute.h"
#include "WidgetFactory.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/util/Map.h"


@class NSString;


#pragma clang diagnostic error "-Wreturn-type"
#pragma clang diagnostic ignored "-Wswitch"


@interface ASViewGroupModelImpl ()

- (instancetype)init;

+ (void)setMyAttributeWithASIWidget:(id<ASIWidget>)w
              withASWidgetAttribute:(ASWidgetAttribute *)key
                       withNSString:(NSString *)strValue
                             withId:(id)objValue
          withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

+ (void)setMyAttributeWithASIWidget:(id<ASIWidget>)w
                             withId:(id)nativeWidget
              withASWidgetAttribute:(ASWidgetAttribute *)key
                       withNSString:(NSString *)strValue
                             withId:(id)objValue
          withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

+ (void)removeModelAtIndexWithASIWidget:(id<ASIWidget>)w
                                 withId:(id)objValue;

+ (void)addModelByIndexWithASIWidget:(id<ASIWidget>)w
                              withId:(id)objValue;

+ (void)addModelWithASIWidget:(id<ASIWidget>)w
                       withId:(id)objValue;

+ (void)removeModelByIdWithASIWidget:(id<ASIWidget>)w
                              withId:(id)objValue;

+ (void)setModelForWithASIWidget:(id<ASIWidget>)w
                          withId:(id)objValue;

+ (void)setModelIdPathWithASIWidget:(id<ASIWidget>)w
                       withNSString:(NSString *)strValue
                             withId:(id)objValue;

+ (id)getModelIdPathWithASIWidget:(id<ASIWidget>)w;

+ (void)addAllModelWithASIWidget:(id<ASIWidget>)w
                          withId:(id)objValue;

+ (void)setModelDescPathWithASIWidget:(id<ASIWidget>)w
                         withNSString:(NSString *)strValue
                               withId:(id)objValue;

+ (id)getModelDescPathWithASIWidget:(id<ASIWidget>)w;

@end

__attribute__((unused)) static void ASViewGroupModelImpl_init(ASViewGroupModelImpl *self);

__attribute__((unused)) static ASViewGroupModelImpl *new_ASViewGroupModelImpl_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ASViewGroupModelImpl *create_ASViewGroupModelImpl_init(void);

__attribute__((unused)) static void ASViewGroupModelImpl_setMyAttributeWithASIWidget_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(id<ASIWidget> w, ASWidgetAttribute *key, NSString *strValue, id objValue, id<ASILifeCycleDecorator> decorator);

__attribute__((unused)) static void ASViewGroupModelImpl_setMyAttributeWithASIWidget_withId_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(id<ASIWidget> w, id nativeWidget, ASWidgetAttribute *key, NSString *strValue, id objValue, id<ASILifeCycleDecorator> decorator);

__attribute__((unused)) static void ASViewGroupModelImpl_removeModelAtIndexWithASIWidget_withId_(id<ASIWidget> w, id objValue);

__attribute__((unused)) static void ASViewGroupModelImpl_addModelByIndexWithASIWidget_withId_(id<ASIWidget> w, id objValue);

__attribute__((unused)) static void ASViewGroupModelImpl_addModelWithASIWidget_withId_(id<ASIWidget> w, id objValue);

__attribute__((unused)) static void ASViewGroupModelImpl_removeModelByIdWithASIWidget_withId_(id<ASIWidget> w, id objValue);

__attribute__((unused)) static void ASViewGroupModelImpl_setModelForWithASIWidget_withId_(id<ASIWidget> w, id objValue);

__attribute__((unused)) static void ASViewGroupModelImpl_setModelIdPathWithASIWidget_withNSString_withId_(id<ASIWidget> w, NSString *strValue, id objValue);

__attribute__((unused)) static id ASViewGroupModelImpl_getModelIdPathWithASIWidget_(id<ASIWidget> w);

__attribute__((unused)) static void ASViewGroupModelImpl_addAllModelWithASIWidget_withId_(id<ASIWidget> w, id objValue);

__attribute__((unused)) static void ASViewGroupModelImpl_setModelDescPathWithASIWidget_withNSString_withId_(id<ASIWidget> w, NSString *strValue, id objValue);

__attribute__((unused)) static id ASViewGroupModelImpl_getModelDescPathWithASIWidget_(id<ASIWidget> w);

@implementation ASViewGroupModelImpl

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASViewGroupModelImpl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)register__WithNSString:(NSString *)localName {
  ASViewGroupModelImpl_register__WithNSString_(localName);
}

+ (void)setAttributeWithASIWidget:(id<ASIWidget>)w
         withASSimpleWrapableView:(ASSimpleWrapableView *)wrapperView
            withASWidgetAttribute:(ASWidgetAttribute *)key
                     withNSString:(NSString *)strValue
                           withId:(id)objValue
        withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator {
  ASViewGroupModelImpl_setAttributeWithASIWidget_withASSimpleWrapableView_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(w, wrapperView, key, strValue, objValue, decorator);
}

+ (void)setAttributeWithASIWidget:(id<ASIWidget>)w
            withASWidgetAttribute:(ASWidgetAttribute *)key
                     withNSString:(NSString *)strValue
                           withId:(id)objValue
        withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator {
  ASViewGroupModelImpl_setAttributeWithASIWidget_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(w, key, strValue, objValue, decorator);
}

+ (void)setMyAttributeWithASIWidget:(id<ASIWidget>)w
              withASWidgetAttribute:(ASWidgetAttribute *)key
                       withNSString:(NSString *)strValue
                             withId:(id)objValue
          withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator {
  ASViewGroupModelImpl_setMyAttributeWithASIWidget_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(w, key, strValue, objValue, decorator);
}

+ (void)setMyAttributeWithASIWidget:(id<ASIWidget>)w
                             withId:(id)nativeWidget
              withASWidgetAttribute:(ASWidgetAttribute *)key
                       withNSString:(NSString *)strValue
                             withId:(id)objValue
          withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator {
  ASViewGroupModelImpl_setMyAttributeWithASIWidget_withId_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(w, nativeWidget, key, strValue, objValue, decorator);
}

+ (void)setChildAttributeWithASIWidget:(id<ASIWidget>)w
                 withASWidgetAttribute:(ASWidgetAttribute *)key
                                withId:(id)objValue
                                withId:(id)layoutParams {
  ASViewGroupModelImpl_setChildAttributeWithASIWidget_withASWidgetAttribute_withId_withId_(w, key, objValue, layoutParams);
}

+ (id)getAttributeWithASIWidget:(id<ASIWidget>)w
          withASWidgetAttribute:(ASWidgetAttribute *)key
      withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator {
  return ASViewGroupModelImpl_getAttributeWithASIWidget_withASWidgetAttribute_withASILifeCycleDecorator_(w, key, decorator);
}

+ (id)getChildAttributeWithASIWidget:(id<ASIWidget>)w
               withASWidgetAttribute:(ASWidgetAttribute *)key {
  return ASViewGroupModelImpl_getChildAttributeWithASIWidget_withASWidgetAttribute_(w, key);
}

+ (void)removeModelAtIndexWithASIWidget:(id<ASIWidget>)w
                                 withId:(id)objValue {
  ASViewGroupModelImpl_removeModelAtIndexWithASIWidget_withId_(w, objValue);
}

+ (void)addModelByIndexWithASIWidget:(id<ASIWidget>)w
                              withId:(id)objValue {
  ASViewGroupModelImpl_addModelByIndexWithASIWidget_withId_(w, objValue);
}

+ (void)addModelWithASIWidget:(id<ASIWidget>)w
                       withId:(id)objValue {
  ASViewGroupModelImpl_addModelWithASIWidget_withId_(w, objValue);
}

+ (void)removeModelByIdWithASIWidget:(id<ASIWidget>)w
                              withId:(id)objValue {
  ASViewGroupModelImpl_removeModelByIdWithASIWidget_withId_(w, objValue);
}

+ (void)setModelForWithASIWidget:(id<ASIWidget>)w
                          withId:(id)objValue {
  ASViewGroupModelImpl_setModelForWithASIWidget_withId_(w, objValue);
}

+ (void)setModelIdPathWithASIWidget:(id<ASIWidget>)w
                       withNSString:(NSString *)strValue
                             withId:(id)objValue {
  ASViewGroupModelImpl_setModelIdPathWithASIWidget_withNSString_withId_(w, strValue, objValue);
}

+ (id)getModelIdPathWithASIWidget:(id<ASIWidget>)w {
  return ASViewGroupModelImpl_getModelIdPathWithASIWidget_(w);
}

+ (void)addAllModelWithASIWidget:(id<ASIWidget>)w
                          withId:(id)objValue {
  ASViewGroupModelImpl_addAllModelWithASIWidget_withId_(w, objValue);
}

+ (void)setModelDescPathWithASIWidget:(id<ASIWidget>)w
                         withNSString:(NSString *)strValue
                               withId:(id)objValue {
  ASViewGroupModelImpl_setModelDescPathWithASIWidget_withNSString_withId_(w, strValue, objValue);
}

+ (id)getModelDescPathWithASIWidget:(id<ASIWidget>)w {
  return ASViewGroupModelImpl_getModelDescPathWithASIWidget_(w);
}

+ (bool)isAttributeSupportedWithASWidgetAttribute:(ASWidgetAttribute *)key {
  return ASViewGroupModelImpl_isAttributeSupportedWithASWidgetAttribute_(key);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 4, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 5, 4, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 9, 10, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 15, 14, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 16, 14, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 17, 14, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 18, 14, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 19, 20, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0xa, 21, 22, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 23, 14, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 24, 20, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0xa, 25, 22, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 26, 27, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(register__WithNSString:);
  methods[2].selector = @selector(setAttributeWithASIWidget:withASSimpleWrapableView:withASWidgetAttribute:withNSString:withId:withASILifeCycleDecorator:);
  methods[3].selector = @selector(setAttributeWithASIWidget:withASWidgetAttribute:withNSString:withId:withASILifeCycleDecorator:);
  methods[4].selector = @selector(setMyAttributeWithASIWidget:withASWidgetAttribute:withNSString:withId:withASILifeCycleDecorator:);
  methods[5].selector = @selector(setMyAttributeWithASIWidget:withId:withASWidgetAttribute:withNSString:withId:withASILifeCycleDecorator:);
  methods[6].selector = @selector(setChildAttributeWithASIWidget:withASWidgetAttribute:withId:withId:);
  methods[7].selector = @selector(getAttributeWithASIWidget:withASWidgetAttribute:withASILifeCycleDecorator:);
  methods[8].selector = @selector(getChildAttributeWithASIWidget:withASWidgetAttribute:);
  methods[9].selector = @selector(removeModelAtIndexWithASIWidget:withId:);
  methods[10].selector = @selector(addModelByIndexWithASIWidget:withId:);
  methods[11].selector = @selector(addModelWithASIWidget:withId:);
  methods[12].selector = @selector(removeModelByIdWithASIWidget:withId:);
  methods[13].selector = @selector(setModelForWithASIWidget:withId:);
  methods[14].selector = @selector(setModelIdPathWithASIWidget:withNSString:withId:);
  methods[15].selector = @selector(getModelIdPathWithASIWidget:);
  methods[16].selector = @selector(addAllModelWithASIWidget:withId:);
  methods[17].selector = @selector(setModelDescPathWithASIWidget:withNSString:withId:);
  methods[18].selector = @selector(getModelDescPathWithASIWidget:);
  methods[19].selector = @selector(isAttributeSupportedWithASWidgetAttribute:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "register", "LNSString;", "setAttribute", "LASIWidget;LASSimpleWrapableView;LASWidgetAttribute;LNSString;LNSObject;LASILifeCycleDecorator;", "LASIWidget;LASWidgetAttribute;LNSString;LNSObject;LASILifeCycleDecorator;", "setMyAttribute", "LASIWidget;LNSObject;LASWidgetAttribute;LNSString;LNSObject;LASILifeCycleDecorator;", "setChildAttribute", "LASIWidget;LASWidgetAttribute;LNSObject;LNSObject;", "getAttribute", "LASIWidget;LASWidgetAttribute;LASILifeCycleDecorator;", "getChildAttribute", "LASIWidget;LASWidgetAttribute;", "removeModelAtIndex", "LASIWidget;LNSObject;", "addModelByIndex", "addModel", "removeModelById", "setModelFor", "setModelIdPath", "LASIWidget;LNSString;LNSObject;", "getModelIdPath", "LASIWidget;", "addAllModel", "setModelDescPath", "getModelDescPath", "isAttributeSupported", "LASWidgetAttribute;" };
  static const J2ObjcClassInfo _ASViewGroupModelImpl = { "ViewGroupModelImpl", "com.ashera.layout", ptrTable, methods, NULL, 7, 0x1, 20, 0, -1, -1, -1, -1, -1 };
  return &_ASViewGroupModelImpl;
}

@end

void ASViewGroupModelImpl_init(ASViewGroupModelImpl *self) {
  NSObject_init(self);
}

ASViewGroupModelImpl *new_ASViewGroupModelImpl_init() {
  J2OBJC_NEW_IMPL(ASViewGroupModelImpl, init)
}

ASViewGroupModelImpl *create_ASViewGroupModelImpl_init() {
  J2OBJC_CREATE_IMPL(ASViewGroupModelImpl, init)
}

void ASViewGroupModelImpl_register__WithNSString_(NSString *localName) {
  ASViewGroupModelImpl_initialize();
  ASViewImpl_register__WithNSString_(localName);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"addModel"])) withTypeWithNSString:@"object"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"addAllModel"])) withTypeWithNSString:@"object"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"addModelByIndex"])) withTypeWithNSString:@"object"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"removeModelAtIndex"])) withTypeWithNSString:@"int"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"removeModelById"])) withTypeWithNSString:@"string"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"modelFor"])) withTypeWithNSString:@"string"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"modelIdPath"])) withTypeWithNSString:@"string"]);
  ASWidgetFactory_registerAttributeWithNSString_withASWidgetAttribute_Builder_(localName, [((ASWidgetAttribute_Builder *) nil_chk([((ASWidgetAttribute_Builder *) nil_chk([new_ASWidgetAttribute_Builder_init() withNameWithNSString:@"modelDescPath"])) withTypeWithNSString:@"string"])) withOrderWithInt:-1]);
}

void ASViewGroupModelImpl_setAttributeWithASIWidget_withASSimpleWrapableView_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(id<ASIWidget> w, ASSimpleWrapableView *wrapperView, ASWidgetAttribute *key, NSString *strValue, id objValue, id<ASILifeCycleDecorator> decorator) {
  ASViewGroupModelImpl_initialize();
  ASViewImpl_setAttributeWithASIWidget_withASSimpleWrapableView_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(w, wrapperView, key, strValue, objValue, decorator);
  if ([((ASSimpleWrapableView *) nil_chk(wrapperView)) isViewWrapped] && [((ASWidgetAttribute *) nil_chk(key)) getSimpleWrapableViewStrategy] != 0) {
    if (([((ASWidgetAttribute *) nil_chk(key)) getSimpleWrapableViewStrategy] & ASIWidget_APPLY_TO_VIEW_WRAPPER) != 0) {
      ASViewGroupModelImpl_setMyAttributeWithASIWidget_withId_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(w, [wrapperView getWrappedView], key, strValue, objValue, decorator);
    }
    if (([key getSimpleWrapableViewStrategy] & ASIWidget_APPLY_TO_VIEW_HOLDER) != 0) {
      ASViewGroupModelImpl_setMyAttributeWithASIWidget_withId_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(w, [wrapperView getWrapperViewHolder], key, strValue, objValue, decorator);
    }
    if ((([key getSimpleWrapableViewStrategy] & ASIWidget_APPLY_TO_FOREGROUND) != 0) && [wrapperView getForeground] != nil) {
      ASViewGroupModelImpl_setMyAttributeWithASIWidget_withId_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(w, [wrapperView getForeground], key, strValue, objValue, decorator);
    }
  }
  else {
    ASViewGroupModelImpl_setMyAttributeWithASIWidget_withId_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(w, [((id<ASIWidget>) nil_chk(w)) asNativeWidget], key, strValue, objValue, decorator);
  }
}

void ASViewGroupModelImpl_setAttributeWithASIWidget_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(id<ASIWidget> w, ASWidgetAttribute *key, NSString *strValue, id objValue, id<ASILifeCycleDecorator> decorator) {
  ASViewGroupModelImpl_initialize();
  ASViewImpl_setAttributeWithASIWidget_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(w, key, strValue, objValue, decorator);
  ASViewGroupModelImpl_setMyAttributeWithASIWidget_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(w, key, strValue, objValue, decorator);
}

void ASViewGroupModelImpl_setMyAttributeWithASIWidget_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(id<ASIWidget> w, ASWidgetAttribute *key, NSString *strValue, id objValue, id<ASILifeCycleDecorator> decorator) {
  ASViewGroupModelImpl_initialize();
  ASViewGroupModelImpl_setMyAttributeWithASIWidget_withId_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(w, [((id<ASIWidget>) nil_chk(w)) asNativeWidget], key, strValue, objValue, decorator);
}

void ASViewGroupModelImpl_setMyAttributeWithASIWidget_withId_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(id<ASIWidget> w, id nativeWidget, ASWidgetAttribute *key, NSString *strValue, id objValue, id<ASILifeCycleDecorator> decorator) {
  ASViewGroupModelImpl_initialize();
  switch (JreIndexOfStr([((ASWidgetAttribute *) nil_chk(key)) getAttributeName], (id[]){ @"addModel", @"addAllModel", @"addModelByIndex", @"removeModelAtIndex", @"removeModelById", @"modelFor", @"modelIdPath", @"modelDescPath" }, 8)) {
    case 0:
    {
      ASViewGroupModelImpl_addModelWithASIWidget_withId_(w, objValue);
    }
    break;
    case 1:
    {
      ASViewGroupModelImpl_addAllModelWithASIWidget_withId_(w, objValue);
    }
    break;
    case 2:
    {
      ASViewGroupModelImpl_addModelByIndexWithASIWidget_withId_(w, objValue);
    }
    break;
    case 3:
    {
      ASViewGroupModelImpl_removeModelAtIndexWithASIWidget_withId_(w, objValue);
    }
    break;
    case 4:
    {
      ASViewGroupModelImpl_removeModelByIdWithASIWidget_withId_(w, objValue);
    }
    break;
    case 5:
    {
      ASViewGroupModelImpl_setModelForWithASIWidget_withId_(w, objValue);
    }
    break;
    case 6:
    {
      ASViewGroupModelImpl_setModelIdPathWithASIWidget_withNSString_withId_(w, strValue, objValue);
    }
    break;
    case 7:
    {
      ASViewGroupModelImpl_setModelDescPathWithASIWidget_withNSString_withId_(w, strValue, objValue);
    }
    break;
    default:
    break;
  }
}

void ASViewGroupModelImpl_setChildAttributeWithASIWidget_withASWidgetAttribute_withId_withId_(id<ASIWidget> w, ASWidgetAttribute *key, id objValue, id layoutParams) {
  ASViewGroupModelImpl_initialize();
}

id ASViewGroupModelImpl_getAttributeWithASIWidget_withASWidgetAttribute_withASILifeCycleDecorator_(id<ASIWidget> w, ASWidgetAttribute *key, id<ASILifeCycleDecorator> decorator) {
  ASViewGroupModelImpl_initialize();
  id attributeValue = ASViewImpl_getAttributeWithASIWidget_withASWidgetAttribute_withASILifeCycleDecorator_(w, key, decorator);
  if (attributeValue != nil) {
    return attributeValue;
  }
  switch (JreIndexOfStr([((ASWidgetAttribute *) nil_chk(key)) getAttributeName], (id[]){ @"modelIdPath", @"modelDescPath" }, 2)) {
    case 0:
    {
      return ASViewGroupModelImpl_getModelIdPathWithASIWidget_(w);
    }
    case 1:
    {
      return ASViewGroupModelImpl_getModelDescPathWithASIWidget_(w);
    }
  }
  return nil;
}

id ASViewGroupModelImpl_getChildAttributeWithASIWidget_withASWidgetAttribute_(id<ASIWidget> w, ASWidgetAttribute *key) {
  ASViewGroupModelImpl_initialize();
  return nil;
}

void ASViewGroupModelImpl_removeModelAtIndexWithASIWidget_withId_(id<ASIWidget> w, id objValue) {
  ASViewGroupModelImpl_initialize();
  [((id<ASHasWidgets>) nil_chk(((id<ASHasWidgets>) cast_check(w, ASHasWidgets_class_())))) removeModelAtIndexWithInt:[((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(objValue, [JavaLangInteger class]))) intValue]];
}

void ASViewGroupModelImpl_addModelByIndexWithASIWidget_withId_(id<ASIWidget> w, id objValue) {
  ASViewGroupModelImpl_initialize();
  id<JavaUtilMap> model = ASPluginInvoker_getMapWithId_(objValue);
  int32_t index = [((JavaLangInteger *) nil_chk(ASPluginInvoker_getIntWithId_([((id<JavaUtilMap>) nil_chk(model)) getWithId:@"index"]))) intValue];
  [((id<ASHasWidgets>) nil_chk(((id<ASHasWidgets>) cast_check(w, ASHasWidgets_class_())))) addModelWithId:[model getWithId:@"data"] withInt:index];
}

void ASViewGroupModelImpl_addModelWithASIWidget_withId_(id<ASIWidget> w, id objValue) {
  ASViewGroupModelImpl_initialize();
  [((id<ASHasWidgets>) nil_chk(((id<ASHasWidgets>) cast_check(w, ASHasWidgets_class_())))) addModelWithId:objValue];
}

void ASViewGroupModelImpl_removeModelByIdWithASIWidget_withId_(id<ASIWidget> w, id objValue) {
  ASViewGroupModelImpl_initialize();
  [((id<ASHasWidgets>) nil_chk(((id<ASHasWidgets>) cast_check(w, ASHasWidgets_class_())))) removeModelByIdWithNSString:ASPluginInvoker_getStringWithId_(objValue)];
}

void ASViewGroupModelImpl_setModelForWithASIWidget_withId_(id<ASIWidget> w, id objValue) {
  ASViewGroupModelImpl_initialize();
  [((id<ASHasWidgets>) nil_chk(((id<ASHasWidgets>) cast_check(w, ASHasWidgets_class_())))) setModelForWithNSString:(NSString *) cast_chk(objValue, [NSString class])];
}

void ASViewGroupModelImpl_setModelIdPathWithASIWidget_withNSString_withId_(id<ASIWidget> w, NSString *strValue, id objValue) {
  ASViewGroupModelImpl_initialize();
  [((id<ASIWidget>) nil_chk(w)) setModelIdPathWithNSString:(NSString *) cast_chk(objValue, [NSString class])];
}

id ASViewGroupModelImpl_getModelIdPathWithASIWidget_(id<ASIWidget> w) {
  ASViewGroupModelImpl_initialize();
  return [((id<ASIWidget>) nil_chk(w)) getModelIdPath];
}

void ASViewGroupModelImpl_addAllModelWithASIWidget_withId_(id<ASIWidget> w, id objValue) {
  ASViewGroupModelImpl_initialize();
  [((id<ASHasWidgets>) nil_chk(((id<ASHasWidgets>) cast_check(w, ASHasWidgets_class_())))) addAllModelWithId:objValue];
}

void ASViewGroupModelImpl_setModelDescPathWithASIWidget_withNSString_withId_(id<ASIWidget> w, NSString *strValue, id objValue) {
  ASViewGroupModelImpl_initialize();
  [((id<ASHasWidgets>) nil_chk(((id<ASHasWidgets>) cast_check(w, ASHasWidgets_class_())))) setModelDescPathWithNSString:(NSString *) cast_chk(objValue, [NSString class])];
}

id ASViewGroupModelImpl_getModelDescPathWithASIWidget_(id<ASIWidget> w) {
  ASViewGroupModelImpl_initialize();
  return [((id<ASHasWidgets>) nil_chk(((id<ASHasWidgets>) cast_check(w, ASHasWidgets_class_())))) getModelDescPath];
}

bool ASViewGroupModelImpl_isAttributeSupportedWithASWidgetAttribute_(ASWidgetAttribute *key) {
  ASViewGroupModelImpl_initialize();
  switch (JreIndexOfStr([((ASWidgetAttribute *) nil_chk(key)) getAttributeName], (id[]){ @"addModel", @"addAllModel", @"addModelByIndex", @"removeModelAtIndex", @"removeModelById", @"modelFor", @"modelIdPath", @"modelDescPath" }, 8)) {
    case 0:
    {
      return true;
    }
    case 1:
    {
      return true;
    }
    case 2:
    {
      return true;
    }
    case 3:
    {
      return true;
    }
    case 4:
    {
      return true;
    }
    case 5:
    {
      return true;
    }
    case 6:
    {
      return true;
    }
    case 7:
    {
      return true;
    }
    default:
    break;
  }
  return false;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASViewGroupModelImpl)

J2OBJC_NAME_MAPPING(ASViewGroupModelImpl, "com.ashera.layout", "AS")
