//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\ios_widget_library\src\main\java\com\ashera\layout\WebViewImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_WebViewImpl")
#ifdef RESTRICT_WebViewImpl
#define INCLUDE_ALL_WebViewImpl 0
#else
#define INCLUDE_ALL_WebViewImpl 1
#endif
#undef RESTRICT_WebViewImpl

#if !defined (ASWebViewImpl_) && (INCLUDE_ALL_WebViewImpl || defined(INCLUDE_ASWebViewImpl))
#define ASWebViewImpl_

#define RESTRICT_BaseWidget 1
#define INCLUDE_ASBaseWidget 1
#include "BaseWidget.h"

@class ADWebView;
@class ASWidgetAttribute;
@class IOSClass;
@protocol ASIFragment;
@protocol ASILifeCycleDecorator;
@protocol ASIWidget;
@protocol JavaUtilMap;

@interface ASWebViewImpl : ASBaseWidget {
 @public
  id uiView_;
  ADWebView *measurableView_;
}
@property id uiView;

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)localname;

- (instancetype)initWithNSString:(NSString *)groupName
                    withNSString:(NSString *)localname;

- (id)asNativeWidget;

- (id)asWidget;

- (jboolean)checkIosVersionWithNSString:(NSString *)v;

- (void)createWithASIFragment:(id<ASIFragment>)fragment
              withJavaUtilMap:(id<JavaUtilMap>)params;

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
              withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (IOSClass *)getViewClass;

- (void)invalidate;

- (void)loadAttributesWithNSString:(NSString *)attributeName;

- (void)nativeCreateWithJavaUtilMap:(id<JavaUtilMap>)params;

- (id<ASIWidget>)newInstance OBJC_METHOD_FAMILY_NONE;

- (void)requestLayout;

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue
                withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (void)setIdWithNSString:(NSString *)id_;

- (void)setVisibleWithBoolean:(jboolean)b;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(ASWebViewImpl)

J2OBJC_FIELD_SETTER(ASWebViewImpl, uiView_, id)
J2OBJC_FIELD_SETTER(ASWebViewImpl, measurableView_, ADWebView *)

inline NSString *ASWebViewImpl_get_LOCAL_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASWebViewImpl_LOCAL_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASWebViewImpl, LOCAL_NAME, NSString *)

inline NSString *ASWebViewImpl_get_GROUP_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASWebViewImpl_GROUP_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASWebViewImpl, GROUP_NAME, NSString *)

FOUNDATION_EXPORT void ASWebViewImpl_init(ASWebViewImpl *self);

FOUNDATION_EXPORT ASWebViewImpl *new_ASWebViewImpl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASWebViewImpl *create_ASWebViewImpl_init(void);

FOUNDATION_EXPORT void ASWebViewImpl_initWithNSString_(ASWebViewImpl *self, NSString *localname);

FOUNDATION_EXPORT ASWebViewImpl *new_ASWebViewImpl_initWithNSString_(NSString *localname) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASWebViewImpl *create_ASWebViewImpl_initWithNSString_(NSString *localname);

FOUNDATION_EXPORT void ASWebViewImpl_initWithNSString_withNSString_(ASWebViewImpl *self, NSString *groupName, NSString *localname);

FOUNDATION_EXPORT ASWebViewImpl *new_ASWebViewImpl_initWithNSString_withNSString_(NSString *groupName, NSString *localname) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASWebViewImpl *create_ASWebViewImpl_initWithNSString_withNSString_(NSString *groupName, NSString *localname);

J2OBJC_TYPE_LITERAL_HEADER(ASWebViewImpl)

@compatibility_alias ComAsheraLayoutWebViewImpl ASWebViewImpl;

#endif

#if !defined (ASWebViewImpl_WebViewExt_) && (INCLUDE_ALL_WebViewImpl || defined(INCLUDE_ASWebViewImpl_WebViewExt))
#define ASWebViewImpl_WebViewExt_

#define RESTRICT_WebView 1
#define INCLUDE_ADWebView 1
#include "WebView.h"

#define RESTRICT_ILifeCycleDecorator 1
#define INCLUDE_ASILifeCycleDecorator 1
#include "ILifeCycleDecorator.h"

#define RESTRICT_IMaxDimension 1
#define INCLUDE_ASIMaxDimension 1
#include "IMaxDimension.h"

@class ADAttributeSet;
@class ADContext;
@class ADRect;
@class ADView;
@class ASWebViewImpl;
@class ASWidgetAttribute;
@class IOSIntArray;
@class IOSObjectArray;
@protocol ASIWidget;
@protocol JavaUtilList;

@interface ASWebViewImpl_WebViewExt : ADWebView < ASILifeCycleDecorator, ASIMaxDimension >

#pragma mark Public

- (instancetype)initWithASWebViewImpl:(ASWebViewImpl *)outer$;

- (void)drawableStateChanged;

- (void)executeWithNSString:(NSString *)method
          withNSObjectArray:(IOSObjectArray *)canvas;

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute;

- (void)getLocationOnScreenWithIntArray:(IOSIntArray *)appScreenLocation;

- (jint)getMaxHeight;

- (jint)getMaxWidth;

- (id<JavaUtilList>)getMethods;

- (id<ASIWidget>)getWidget;

- (void)getWindowVisibleDisplayFrameWithADRect:(ADRect *)displayFrame;

- (ADView *)inflateViewWithNSString:(NSString *)layout;

- (void)initialized OBJC_METHOD_FAMILY_NONE;

- (id<ASILifeCycleDecorator>)newInstanceWithASIWidget:(id<ASIWidget>)widget OBJC_METHOD_FAMILY_NONE;

- (void)offsetLeftAndRightWithInt:(jint)offset;

- (void)offsetTopAndBottomWithInt:(jint)offset;

- (void)onMeasureWithInt:(jint)widthMeasureSpec
                 withInt:(jint)heightMeasureSpec;

- (void)remeasure;

- (void)removeFromParent;

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue;

- (void)setMaxHeightWithInt:(jint)height;

- (void)setMaxWidthWithInt:(jint)width;

- (void)setMyAttributeWithNSString:(NSString *)name
                            withId:(id)value;

- (void)setState0WithId:(id)value;

- (void)setState1WithId:(id)value;

- (void)setState2WithId:(id)value;

- (void)setState3WithId:(id)value;

- (void)setState4WithId:(id)value;

- (void)setVisibilityWithInt:(jint)visibility;

- (void)state0;

- (void)state1;

- (void)state2;

- (void)state3;

- (void)state4;

- (void)stateNo;

- (void)stateYes;

- (void)updateMeasuredDimensionWithInt:(jint)width
                               withInt:(jint)height;

#pragma mark Protected

- (void)onLayoutWithBoolean:(jboolean)changed
                    withInt:(jint)l
                    withInt:(jint)t
                    withInt:(jint)r
                    withInt:(jint)b;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithADContext:(ADContext *)arg0
               withADAttributeSet:(ADAttributeSet *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASWebViewImpl_WebViewExt)

FOUNDATION_EXPORT void ASWebViewImpl_WebViewExt_initWithASWebViewImpl_(ASWebViewImpl_WebViewExt *self, ASWebViewImpl *outer$);

FOUNDATION_EXPORT ASWebViewImpl_WebViewExt *new_ASWebViewImpl_WebViewExt_initWithASWebViewImpl_(ASWebViewImpl *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASWebViewImpl_WebViewExt *create_ASWebViewImpl_WebViewExt_initWithASWebViewImpl_(ASWebViewImpl *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ASWebViewImpl_WebViewExt)

#endif

#if !defined (ASWebViewImpl_Loader_) && (INCLUDE_ALL_WebViewImpl || defined(INCLUDE_ASWebViewImpl_Loader))
#define ASWebViewImpl_Loader_

@interface ASWebViewImpl_Loader : NSObject

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASWebViewImpl_Loader)

FOUNDATION_EXPORT void ASWebViewImpl_Loader_init(ASWebViewImpl_Loader *self);

FOUNDATION_EXPORT ASWebViewImpl_Loader *new_ASWebViewImpl_Loader_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASWebViewImpl_Loader *create_ASWebViewImpl_Loader_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASWebViewImpl_Loader)

#endif

#if !defined (ASWebViewImpl_Loader_WebViewLoadingListener_) && (INCLUDE_ALL_WebViewImpl || defined(INCLUDE_ASWebViewImpl_Loader_WebViewLoadingListener))
#define ASWebViewImpl_Loader_WebViewLoadingListener_

@class ADView;

@protocol ASWebViewImpl_Loader_WebViewLoadingListener < JavaObject >

- (void)onPageStartedWithADView:(ADView *)view;

@end

J2OBJC_EMPTY_STATIC_INIT(ASWebViewImpl_Loader_WebViewLoadingListener)

J2OBJC_TYPE_LITERAL_HEADER(ASWebViewImpl_Loader_WebViewLoadingListener)

#endif

#if !defined (ASWebViewImpl_Loader_WebViewLoadedListener_) && (INCLUDE_ALL_WebViewImpl || defined(INCLUDE_ASWebViewImpl_Loader_WebViewLoadedListener))
#define ASWebViewImpl_Loader_WebViewLoadedListener_

@class ADView;

@protocol ASWebViewImpl_Loader_WebViewLoadedListener < JavaObject >

- (void)onPageFinishedWithADView:(ADView *)view;

@end

J2OBJC_EMPTY_STATIC_INIT(ASWebViewImpl_Loader_WebViewLoadedListener)

J2OBJC_TYPE_LITERAL_HEADER(ASWebViewImpl_Loader_WebViewLoadedListener)

#endif

#if !defined (ASWebViewImpl_Loader_WebViewErrorListener_) && (INCLUDE_ALL_WebViewImpl || defined(INCLUDE_ASWebViewImpl_Loader_WebViewErrorListener))
#define ASWebViewImpl_Loader_WebViewErrorListener_

@class ADView;

@protocol ASWebViewImpl_Loader_WebViewErrorListener < JavaObject >

- (void)onReceivedErrorWithADView:(ADView *)view
                     withNSString:(NSString *)error;

@end

J2OBJC_EMPTY_STATIC_INIT(ASWebViewImpl_Loader_WebViewErrorListener)

J2OBJC_TYPE_LITERAL_HEADER(ASWebViewImpl_Loader_WebViewErrorListener)

#endif

#pragma pop_macro("INCLUDE_ALL_WebViewImpl")
