//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\ios_widget_library\src\main\java\com\ashera\layout\ButtonImpl.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ButtonImpl")
#ifdef RESTRICT_ButtonImpl
#define INCLUDE_ALL_ButtonImpl 0
#else
#define INCLUDE_ALL_ButtonImpl 1
#endif
#undef RESTRICT_ButtonImpl

#if !defined (ASButtonImpl_) && (INCLUDE_ALL_ButtonImpl || defined(INCLUDE_ASButtonImpl))
#define ASButtonImpl_

#define RESTRICT_BaseWidget 1
#define INCLUDE_ASBaseWidget 1
#include "BaseWidget.h"

#define RESTRICT_ICustomMeasureHeight 1
#define INCLUDE_ASICustomMeasureHeight 1
#include "ICustomMeasureHeight.h"

#define RESTRICT_ICustomMeasureWidth 1
#define INCLUDE_ASICustomMeasureWidth 1
#include "ICustomMeasureWidth.h"

@class ADButton;
@class ASWidgetAttribute;
@class IOSClass;
@class JavaLangBoolean;
@class JavaLangInteger;
@class NSString;
@protocol ASIFragment;
@protocol ASILifeCycleDecorator;
@protocol ASIWidget;
@protocol JavaUtilMap;

@interface ASButtonImpl : ASBaseWidget < ASICustomMeasureHeight, ASICustomMeasureWidth > {
 @public
  id uiView_;
  ADButton *measurableView_;
}
@property id uiView;

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)localname;

- (instancetype)initWithNSString:(NSString *)groupName
                    withNSString:(NSString *)localname;

- (id)asNativeWidget;

- (id)asWidget;

- (bool)checkIosVersionWithNSString:(NSString *)v;

- (void)createWithASIFragment:(id<ASIFragment>)fragment
              withJavaUtilMap:(id<JavaUtilMap>)params;

- (void)drawableStateChanged;

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
              withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (int32_t)getBorderPadding;

- (int32_t)getLineHeightPadding;

- (int32_t)getMaxEms;

- (int32_t)getMaxHeight;

- (int32_t)getMaxLines;

- (int32_t)getMaxWidth;

- (int32_t)getMinEms;

- (int32_t)getMinLines;

- (id)getPaddingBottom;

- (id)getPaddingLeft;

- (id)getPaddingRight;

- (id)getPaddingTop;

- (IOSClass *)getViewClass;

- (void)invalidate;

- (void)loadAttributesWithNSString:(NSString *)attributeName;

- (int32_t)measureHeightWithInt:(int32_t)width;

- (int32_t)measureWidth;

- (id<ASIWidget>)newInstance OBJC_METHOD_FAMILY_NONE;

- (void)onRtlPropertiesChangedWithInt:(int32_t)layoutDirection;

- (void)requestLayout;

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue
                withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (void)setIdWithNSString:(NSString *)id_;

- (void)setMyTextWithId:(id)text;

- (void)setPaddingBottomWithId:(id)paddingBottom;

- (void)setPaddingLeftWithId:(id)paddingLeft;

- (void)setPaddingRightWithId:(id)paddingRight;

- (void)setPaddingTopWithId:(id)paddingTop;

- (void)setVisibleWithBoolean:(bool)b;

- (void)updatePadding;

#pragma mark Package-Private

@end

J2OBJC_STATIC_INIT(ASButtonImpl)

J2OBJC_FIELD_SETTER(ASButtonImpl, uiView_, id)
J2OBJC_FIELD_SETTER(ASButtonImpl, measurableView_, ADButton *)

inline NSString *ASButtonImpl_get_LOCAL_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASButtonImpl_LOCAL_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASButtonImpl, LOCAL_NAME, NSString *)

inline NSString *ASButtonImpl_get_GROUP_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASButtonImpl_GROUP_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASButtonImpl, GROUP_NAME, NSString *)

FOUNDATION_EXPORT void ASButtonImpl_init(ASButtonImpl *self);

FOUNDATION_EXPORT ASButtonImpl *new_ASButtonImpl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASButtonImpl *create_ASButtonImpl_init(void);

FOUNDATION_EXPORT void ASButtonImpl_initWithNSString_(ASButtonImpl *self, NSString *localname);

FOUNDATION_EXPORT ASButtonImpl *new_ASButtonImpl_initWithNSString_(NSString *localname) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASButtonImpl *create_ASButtonImpl_initWithNSString_(NSString *localname);

FOUNDATION_EXPORT void ASButtonImpl_initWithNSString_withNSString_(ASButtonImpl *self, NSString *groupName, NSString *localname);

FOUNDATION_EXPORT ASButtonImpl *new_ASButtonImpl_initWithNSString_withNSString_(NSString *groupName, NSString *localname) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASButtonImpl *create_ASButtonImpl_initWithNSString_withNSString_(NSString *groupName, NSString *localname);

J2OBJC_TYPE_LITERAL_HEADER(ASButtonImpl)

@compatibility_alias ComAsheraLayoutButtonImpl ASButtonImpl;


#endif

#if !defined (ASButtonImpl_DrawableTintMode_) && (INCLUDE_ALL_ButtonImpl || defined(INCLUDE_ASButtonImpl_DrawableTintMode))
#define ASButtonImpl_DrawableTintMode_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASButtonImpl_DrawableTintMode : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASButtonImpl_DrawableTintMode)

FOUNDATION_EXPORT void ASButtonImpl_DrawableTintMode_init(ASButtonImpl_DrawableTintMode *self);

FOUNDATION_EXPORT ASButtonImpl_DrawableTintMode *new_ASButtonImpl_DrawableTintMode_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASButtonImpl_DrawableTintMode *create_ASButtonImpl_DrawableTintMode_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASButtonImpl_DrawableTintMode)


#endif

#if !defined (ASButtonImpl_MarqueeRepeatLimit_) && (INCLUDE_ALL_ButtonImpl || defined(INCLUDE_ASButtonImpl_MarqueeRepeatLimit))
#define ASButtonImpl_MarqueeRepeatLimit_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangBoolean;
@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASButtonImpl_MarqueeRepeatLimit : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

- (bool)supportsIntAlso;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASButtonImpl_MarqueeRepeatLimit)

FOUNDATION_EXPORT void ASButtonImpl_MarqueeRepeatLimit_init(ASButtonImpl_MarqueeRepeatLimit *self);

FOUNDATION_EXPORT ASButtonImpl_MarqueeRepeatLimit *new_ASButtonImpl_MarqueeRepeatLimit_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASButtonImpl_MarqueeRepeatLimit *create_ASButtonImpl_MarqueeRepeatLimit_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASButtonImpl_MarqueeRepeatLimit)


#endif

#if !defined (ASButtonImpl_Font_) && (INCLUDE_ALL_ButtonImpl || defined(INCLUDE_ASButtonImpl_Font))
#define ASButtonImpl_Font_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASButtonImpl_Font : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASButtonImpl_Font)

FOUNDATION_EXPORT void ASButtonImpl_Font_init(ASButtonImpl_Font *self);

FOUNDATION_EXPORT ASButtonImpl_Font *new_ASButtonImpl_Font_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASButtonImpl_Font *create_ASButtonImpl_Font_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASButtonImpl_Font)


#endif

#if !defined (ASButtonImpl_TextStyle_) && (INCLUDE_ALL_ButtonImpl || defined(INCLUDE_ASButtonImpl_TextStyle))
#define ASButtonImpl_TextStyle_

#define RESTRICT_AbstractBitFlagConverter 1
#define INCLUDE_ASAbstractBitFlagConverter 1
#include "AbstractBitFlagConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASButtonImpl_TextStyle : ASAbstractBitFlagConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASButtonImpl_TextStyle)

FOUNDATION_EXPORT void ASButtonImpl_TextStyle_init(ASButtonImpl_TextStyle *self);

FOUNDATION_EXPORT ASButtonImpl_TextStyle *new_ASButtonImpl_TextStyle_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASButtonImpl_TextStyle *create_ASButtonImpl_TextStyle_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASButtonImpl_TextStyle)


#endif

#if !defined (ASButtonImpl_Ellipsize_) && (INCLUDE_ALL_ButtonImpl || defined(INCLUDE_ASButtonImpl_Ellipsize))
#define ASButtonImpl_Ellipsize_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASButtonImpl_Ellipsize : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASButtonImpl_Ellipsize)

FOUNDATION_EXPORT void ASButtonImpl_Ellipsize_init(ASButtonImpl_Ellipsize *self);

FOUNDATION_EXPORT ASButtonImpl_Ellipsize *new_ASButtonImpl_Ellipsize_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASButtonImpl_Ellipsize *create_ASButtonImpl_Ellipsize_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASButtonImpl_Ellipsize)


#endif

#if !defined (ASButtonImpl_JustificationMode_) && (INCLUDE_ALL_ButtonImpl || defined(INCLUDE_ASButtonImpl_JustificationMode))
#define ASButtonImpl_JustificationMode_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASButtonImpl_JustificationMode : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASButtonImpl_JustificationMode)

FOUNDATION_EXPORT void ASButtonImpl_JustificationMode_init(ASButtonImpl_JustificationMode *self);

FOUNDATION_EXPORT ASButtonImpl_JustificationMode *new_ASButtonImpl_JustificationMode_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASButtonImpl_JustificationMode *create_ASButtonImpl_JustificationMode_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASButtonImpl_JustificationMode)


#endif

#if !defined (ASButtonImpl_ButtonExt_) && (INCLUDE_ALL_ButtonImpl || defined(INCLUDE_ASButtonImpl_ButtonExt))
#define ASButtonImpl_ButtonExt_

#define RESTRICT_Button 1
#define INCLUDE_ADButton 1
#include "Button.h"

#define RESTRICT_ILifeCycleDecorator 1
#define INCLUDE_ASILifeCycleDecorator 1
#include "ILifeCycleDecorator.h"

@class ADRect;
@class ADView;
@class ASButtonImpl;
@class ASWidgetAttribute;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangFloat;
@class JavaLangInteger;
@class NSString;
@protocol ASIWidget;
@protocol JavaUtilList;

@interface ASButtonImpl_ButtonExt : ADButton < ASILifeCycleDecorator >

#pragma mark Public

- (instancetype)initWithASButtonImpl:(ASButtonImpl *)outer$;

- (int32_t)computeSizeWithFloat:(float)width;

- (void)drawableStateChanged;

- (void)executeWithNSString:(NSString *)method
          withNSObjectArray:(IOSObjectArray *)canvas;

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute;

- (int32_t)getBorderPadding;

- (int32_t)getBorderWidth;

- (int32_t)getLineHeight;

- (int32_t)getLineHeightPadding;

- (void)getLocationOnScreenWithIntArray:(IOSIntArray *)appScreenLocation;

- (id<JavaUtilList>)getMethods;

- (NSString *)getText;

- (id<ASIWidget>)getWidget;

- (void)getWindowVisibleDisplayFrameWithADRect:(ADRect *)displayFrame;

- (ADView *)inflateViewWithNSString:(NSString *)layout;

- (void)initialized OBJC_METHOD_FAMILY_NONE;

- (int32_t)nativeMeasureHeightWithId:(id)uiView
                             withInt:(int32_t)width;

- (int32_t)nativeMeasureWidthWithId:(id)uiView;

- (id<ASILifeCycleDecorator>)newInstanceWithASIWidget:(id<ASIWidget>)widget OBJC_METHOD_FAMILY_NONE;

- (void)offsetLeftAndRightWithInt:(int32_t)offset;

- (void)offsetTopAndBottomWithInt:(int32_t)offset;

- (void)onMeasureWithInt:(int32_t)widthMeasureSpec
                 withInt:(int32_t)heightMeasureSpec;

- (void)remeasure;

- (void)removeFromParent;

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue;

- (void)setMyAttributeWithNSString:(NSString *)name
                            withId:(id)value;

- (void)setState0WithId:(id)value;

- (void)setState1WithId:(id)value;

- (void)setState2WithId:(id)value;

- (void)setState3WithId:(id)value;

- (void)setState4WithId:(id)value;

- (void)setVisibilityWithInt:(int32_t)visibility;

- (void)state0;

- (void)state1;

- (void)state2;

- (void)state3;

- (void)state4;

- (void)stateNo;

- (void)stateYes;

- (void)updateMeasuredDimensionWithInt:(int32_t)width
                               withInt:(int32_t)height;

#pragma mark Protected

- (void)onLayoutWithBoolean:(bool)changed
                    withInt:(int32_t)l
                    withInt:(int32_t)t
                    withInt:(int32_t)r
                    withInt:(int32_t)b;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithASIWidget:(id<ASIWidget>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASButtonImpl_ButtonExt)

FOUNDATION_EXPORT void ASButtonImpl_ButtonExt_initWithASButtonImpl_(ASButtonImpl_ButtonExt *self, ASButtonImpl *outer$);

FOUNDATION_EXPORT ASButtonImpl_ButtonExt *new_ASButtonImpl_ButtonExt_initWithASButtonImpl_(ASButtonImpl *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASButtonImpl_ButtonExt *create_ASButtonImpl_ButtonExt_initWithASButtonImpl_(ASButtonImpl *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ASButtonImpl_ButtonExt)


#endif

#pragma pop_macro("INCLUDE_ALL_ButtonImpl")
