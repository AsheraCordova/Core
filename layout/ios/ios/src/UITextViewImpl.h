//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\ios_widget_library\src\main\java\com\ashera\layout\UITextViewImpl.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_UITextViewImpl")
#ifdef RESTRICT_UITextViewImpl
#define INCLUDE_ALL_UITextViewImpl 0
#else
#define INCLUDE_ALL_UITextViewImpl 1
#endif
#undef RESTRICT_UITextViewImpl

#if !defined (ASUITextViewImpl_) && (INCLUDE_ALL_UITextViewImpl || defined(INCLUDE_ASUITextViewImpl))
#define ASUITextViewImpl_

#define RESTRICT_BaseWidget 1
#define INCLUDE_ASBaseWidget 1
#include "BaseWidget.h"

#define RESTRICT_ICustomMeasureHeight 1
#define INCLUDE_ASICustomMeasureHeight 1
#include "ICustomMeasureHeight.h"

#define RESTRICT_ICustomMeasureWidth 1
#define INCLUDE_ASICustomMeasureWidth 1
#include "ICustomMeasureWidth.h"

#define RESTRICT_FormElement 1
#define INCLUDE_ASFormElement 1
#include "FormElement.h"

@class ADTextView;
@class ASWidgetAttribute;
@class IOSClass;
@class JavaLangBoolean;
@class JavaLangInteger;
@class NSString;
@protocol ASIFragment;
@protocol ASILifeCycleDecorator;
@protocol ASIWidget;
@protocol JavaUtilMap;

@interface ASUITextViewImpl : ASBaseWidget < ASICustomMeasureHeight, ASICustomMeasureWidth, ASFormElement > {
 @public
  id uiView_;
  ADTextView *measurableView_;
  id hintColor_;
}
@property id uiView;

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)localname;

- (instancetype)initWithNSString:(NSString *)groupName
                    withNSString:(NSString *)localname;

- (void)addForegroundIfNeeded;

- (id)asNativeWidget;

- (id)asWidget;

- (bool)checkIosVersionWithNSString:(NSString *)v;

- (void)createWithASIFragment:(id<ASIFragment>)fragment
              withJavaUtilMap:(id<JavaUtilMap>)params;

- (id)createWrapperViewWithId:(id)wrapperParent
                      withInt:(int32_t)viewtype;

- (id)createWrapperViewHolderWithInt:(int32_t)viewType;

- (id)createWrapperViewHolderNativeWithInt:(int32_t)viewType;

- (void)drawableStateChanged;

- (void)focus;

- (id)getAllowsEditingTextAttributes;

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
              withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (int32_t)getBorderPadding;

- (id)getClearsOnInsertion;

- (id)getForeground;

- (id)getIsEditable;

- (id)getIsSelectable;

- (int32_t)getLineHeightPadding;

- (int32_t)getMaxEms;

- (int32_t)getMaxHeight;

- (int32_t)getMaxLines;

- (int32_t)getMaxWidth;

- (int32_t)getMinEms;

- (int32_t)getMinLines;

- (id)getPaddingBottom;

- (id)getPaddingLeft;

- (id)getPaddingRight;

- (id)getPaddingTop;

- (id)getText;

- (id)getTextColor;

- (NSString *)getTextEntered;

- (id)getUsesStandardTextScaling;

- (IOSClass *)getViewClass;

- (void)invalidate;

- (bool)isViewVisible;

- (void)loadAttributesWithNSString:(NSString *)attributeName;

- (int32_t)measureHeightWithInt:(int32_t)width;

- (int32_t)measureWidth;

- (id)nativeAddForeGroundWithASIWidget:(id<ASIWidget>)w;

- (id<ASIWidget>)newInstance OBJC_METHOD_FAMILY_NONE;

- (void)onRtlPropertiesChangedWithInt:(int32_t)layoutDirection;

- (void)requestLayout;

- (void)resetError;

- (void)setAllowsEditingTextAttributesWithId:(id)nativeWidget
                                      withId:(id)value;

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue
                withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (void)setClearsOnInsertionWithId:(id)nativeWidget
                            withId:(id)value;

- (void)setEnabledWithId:(id)objValue;

- (void)setIdWithNSString:(NSString *)id_;

- (void)setIsEditableWithId:(id)nativeWidget
                     withId:(id)value;

- (void)setIsSelectableWithId:(id)nativeWidget
                       withId:(id)value;

- (void)setMyTextWithId:(id)text;

- (void)setPaddingBottomWithId:(id)paddingBottom;

- (void)setPaddingLeftWithId:(id)paddingLeft;

- (void)setPaddingRightWithId:(id)paddingRight;

- (void)setPaddingTopWithId:(id)paddingTop;

- (void)setTextWithId:(id)nativeWidget
               withId:(id)value;

- (void)setTextColorWithId:(id)nativeWidget
                    withId:(id)value;

- (void)setUsesStandardTextScalingWithId:(id)nativeWidget
                                  withId:(id)value;

- (void)setVisibleWithBoolean:(bool)b;

- (void)showErrorWithNSString:(NSString *)message;

- (void)updatePadding;

#pragma mark Package-Private

@end

J2OBJC_STATIC_INIT(ASUITextViewImpl)

J2OBJC_FIELD_SETTER(ASUITextViewImpl, uiView_, id)
J2OBJC_FIELD_SETTER(ASUITextViewImpl, measurableView_, ADTextView *)
J2OBJC_FIELD_SETTER(ASUITextViewImpl, hintColor_, id)

inline NSString *ASUITextViewImpl_get_LOCAL_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASUITextViewImpl_LOCAL_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASUITextViewImpl, LOCAL_NAME, NSString *)

inline NSString *ASUITextViewImpl_get_GROUP_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASUITextViewImpl_GROUP_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASUITextViewImpl, GROUP_NAME, NSString *)

FOUNDATION_EXPORT void ASUITextViewImpl_init(ASUITextViewImpl *self);

FOUNDATION_EXPORT ASUITextViewImpl *new_ASUITextViewImpl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewImpl *create_ASUITextViewImpl_init(void);

FOUNDATION_EXPORT void ASUITextViewImpl_initWithNSString_(ASUITextViewImpl *self, NSString *localname);

FOUNDATION_EXPORT ASUITextViewImpl *new_ASUITextViewImpl_initWithNSString_(NSString *localname) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewImpl *create_ASUITextViewImpl_initWithNSString_(NSString *localname);

FOUNDATION_EXPORT void ASUITextViewImpl_initWithNSString_withNSString_(ASUITextViewImpl *self, NSString *groupName, NSString *localname);

FOUNDATION_EXPORT ASUITextViewImpl *new_ASUITextViewImpl_initWithNSString_withNSString_(NSString *groupName, NSString *localname) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewImpl *create_ASUITextViewImpl_initWithNSString_withNSString_(NSString *groupName, NSString *localname);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewImpl)

@compatibility_alias ComAsheraLayoutUITextViewImpl ASUITextViewImpl;


#endif

#if !defined (ASUITextViewImpl_DrawableTintMode_) && (INCLUDE_ALL_UITextViewImpl || defined(INCLUDE_ASUITextViewImpl_DrawableTintMode))
#define ASUITextViewImpl_DrawableTintMode_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASUITextViewImpl_DrawableTintMode : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUITextViewImpl_DrawableTintMode)

FOUNDATION_EXPORT void ASUITextViewImpl_DrawableTintMode_init(ASUITextViewImpl_DrawableTintMode *self);

FOUNDATION_EXPORT ASUITextViewImpl_DrawableTintMode *new_ASUITextViewImpl_DrawableTintMode_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewImpl_DrawableTintMode *create_ASUITextViewImpl_DrawableTintMode_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewImpl_DrawableTintMode)


#endif

#if !defined (ASUITextViewImpl_Font_) && (INCLUDE_ALL_UITextViewImpl || defined(INCLUDE_ASUITextViewImpl_Font))
#define ASUITextViewImpl_Font_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASUITextViewImpl_Font : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUITextViewImpl_Font)

FOUNDATION_EXPORT void ASUITextViewImpl_Font_init(ASUITextViewImpl_Font *self);

FOUNDATION_EXPORT ASUITextViewImpl_Font *new_ASUITextViewImpl_Font_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewImpl_Font *create_ASUITextViewImpl_Font_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewImpl_Font)


#endif

#if !defined (ASUITextViewImpl_TextStyle_) && (INCLUDE_ALL_UITextViewImpl || defined(INCLUDE_ASUITextViewImpl_TextStyle))
#define ASUITextViewImpl_TextStyle_

#define RESTRICT_AbstractBitFlagConverter 1
#define INCLUDE_ASAbstractBitFlagConverter 1
#include "AbstractBitFlagConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASUITextViewImpl_TextStyle : ASAbstractBitFlagConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUITextViewImpl_TextStyle)

FOUNDATION_EXPORT void ASUITextViewImpl_TextStyle_init(ASUITextViewImpl_TextStyle *self);

FOUNDATION_EXPORT ASUITextViewImpl_TextStyle *new_ASUITextViewImpl_TextStyle_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewImpl_TextStyle *create_ASUITextViewImpl_TextStyle_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewImpl_TextStyle)


#endif

#if !defined (ASUITextViewImpl_Capitalize_) && (INCLUDE_ALL_UITextViewImpl || defined(INCLUDE_ASUITextViewImpl_Capitalize))
#define ASUITextViewImpl_Capitalize_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASUITextViewImpl_Capitalize : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUITextViewImpl_Capitalize)

FOUNDATION_EXPORT void ASUITextViewImpl_Capitalize_init(ASUITextViewImpl_Capitalize *self);

FOUNDATION_EXPORT ASUITextViewImpl_Capitalize *new_ASUITextViewImpl_Capitalize_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewImpl_Capitalize *create_ASUITextViewImpl_Capitalize_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewImpl_Capitalize)


#endif

#if !defined (ASUITextViewImpl_Numeric_) && (INCLUDE_ALL_UITextViewImpl || defined(INCLUDE_ASUITextViewImpl_Numeric))
#define ASUITextViewImpl_Numeric_

#define RESTRICT_AbstractBitFlagConverter 1
#define INCLUDE_ASAbstractBitFlagConverter 1
#include "AbstractBitFlagConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASUITextViewImpl_Numeric : ASAbstractBitFlagConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUITextViewImpl_Numeric)

FOUNDATION_EXPORT void ASUITextViewImpl_Numeric_init(ASUITextViewImpl_Numeric *self);

FOUNDATION_EXPORT ASUITextViewImpl_Numeric *new_ASUITextViewImpl_Numeric_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewImpl_Numeric *create_ASUITextViewImpl_Numeric_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewImpl_Numeric)


#endif

#if !defined (ASUITextViewImpl_InputType_) && (INCLUDE_ALL_UITextViewImpl || defined(INCLUDE_ASUITextViewImpl_InputType))
#define ASUITextViewImpl_InputType_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASUITextViewImpl_InputType : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUITextViewImpl_InputType)

FOUNDATION_EXPORT void ASUITextViewImpl_InputType_init(ASUITextViewImpl_InputType *self);

FOUNDATION_EXPORT ASUITextViewImpl_InputType *new_ASUITextViewImpl_InputType_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewImpl_InputType *create_ASUITextViewImpl_InputType_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewImpl_InputType)


#endif

#if !defined (ASUITextViewImpl_ImeOptions_) && (INCLUDE_ALL_UITextViewImpl || defined(INCLUDE_ASUITextViewImpl_ImeOptions))
#define ASUITextViewImpl_ImeOptions_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASUITextViewImpl_ImeOptions : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUITextViewImpl_ImeOptions)

FOUNDATION_EXPORT void ASUITextViewImpl_ImeOptions_init(ASUITextViewImpl_ImeOptions *self);

FOUNDATION_EXPORT ASUITextViewImpl_ImeOptions *new_ASUITextViewImpl_ImeOptions_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewImpl_ImeOptions *create_ASUITextViewImpl_ImeOptions_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewImpl_ImeOptions)


#endif

#if !defined (ASUITextViewImpl_InputView_) && (INCLUDE_ALL_UITextViewImpl || defined(INCLUDE_ASUITextViewImpl_InputView))
#define ASUITextViewImpl_InputView_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASUITextViewImpl_InputView : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUITextViewImpl_InputView)

FOUNDATION_EXPORT void ASUITextViewImpl_InputView_init(ASUITextViewImpl_InputView *self);

FOUNDATION_EXPORT ASUITextViewImpl_InputView *new_ASUITextViewImpl_InputView_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewImpl_InputView *create_ASUITextViewImpl_InputView_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewImpl_InputView)


#endif

#if !defined (ASUITextViewImpl_UITextViewExt_) && (INCLUDE_ALL_UITextViewImpl || defined(INCLUDE_ASUITextViewImpl_UITextViewExt))
#define ASUITextViewImpl_UITextViewExt_

#define RESTRICT_TextView 1
#define INCLUDE_ADTextView 1
#include "TextView.h"

#define RESTRICT_ILifeCycleDecorator 1
#define INCLUDE_ASILifeCycleDecorator 1
#include "ILifeCycleDecorator.h"

@class ADRect;
@class ADView;
@class ASUITextViewImpl;
@class ASWidgetAttribute;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangFloat;
@class JavaLangInteger;
@class NSString;
@protocol ASIWidget;
@protocol JavaUtilList;

@interface ASUITextViewImpl_UITextViewExt : ADTextView < ASILifeCycleDecorator >

#pragma mark Public

- (instancetype)initWithASUITextViewImpl:(ASUITextViewImpl *)outer$;

- (int32_t)computeSizeWithFloat:(float)width;

- (void)drawableStateChanged;

- (void)executeWithNSString:(NSString *)method
          withNSObjectArray:(IOSObjectArray *)canvas;

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute;

- (int32_t)getBorderPadding;

- (int32_t)getBorderWidth;

- (int32_t)getLineHeight;

- (int32_t)getLineHeightPadding;

- (void)getLocationOnScreenWithIntArray:(IOSIntArray *)appScreenLocation;

- (id<JavaUtilList>)getMethods;

- (NSString *)getText;

- (id<ASIWidget>)getWidget;

- (void)getWindowVisibleDisplayFrameWithADRect:(ADRect *)displayFrame;

- (ADView *)inflateViewWithNSString:(NSString *)layout;

- (void)initialized OBJC_METHOD_FAMILY_NONE;

- (int32_t)nativeMeasureHeightWithId:(id)uiView
                             withInt:(int32_t)width;

- (int32_t)nativeMeasureWidthWithId:(id)uiView;

- (id<ASILifeCycleDecorator>)newInstanceWithASIWidget:(id<ASIWidget>)widget OBJC_METHOD_FAMILY_NONE;

- (void)offsetLeftAndRightWithInt:(int32_t)offset;

- (void)offsetTopAndBottomWithInt:(int32_t)offset;

- (void)onMeasureWithInt:(int32_t)widthMeasureSpec
                 withInt:(int32_t)heightMeasureSpec;

- (void)remeasure;

- (void)removeFromParent;

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue;

- (void)setMyAttributeWithNSString:(NSString *)name
                            withId:(id)value;

- (void)setState0WithId:(id)value;

- (void)setState1WithId:(id)value;

- (void)setState2WithId:(id)value;

- (void)setState3WithId:(id)value;

- (void)setState4WithId:(id)value;

- (void)setVisibilityWithInt:(int32_t)visibility;

- (void)state0;

- (void)state1;

- (void)state2;

- (void)state3;

- (void)state4;

- (void)stateNo;

- (void)stateYes;

- (void)updateMeasuredDimensionWithInt:(int32_t)width
                               withInt:(int32_t)height;

#pragma mark Protected

- (void)onLayoutWithBoolean:(bool)changed
                    withInt:(int32_t)l
                    withInt:(int32_t)t
                    withInt:(int32_t)r
                    withInt:(int32_t)b;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithASIWidget:(id<ASIWidget>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUITextViewImpl_UITextViewExt)

FOUNDATION_EXPORT void ASUITextViewImpl_UITextViewExt_initWithASUITextViewImpl_(ASUITextViewImpl_UITextViewExt *self, ASUITextViewImpl *outer$);

FOUNDATION_EXPORT ASUITextViewImpl_UITextViewExt *new_ASUITextViewImpl_UITextViewExt_initWithASUITextViewImpl_(ASUITextViewImpl *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUITextViewImpl_UITextViewExt *create_ASUITextViewImpl_UITextViewExt_initWithASUITextViewImpl_(ASUITextViewImpl *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ASUITextViewImpl_UITextViewExt)


#endif

#pragma pop_macro("INCLUDE_ALL_UITextViewImpl")
