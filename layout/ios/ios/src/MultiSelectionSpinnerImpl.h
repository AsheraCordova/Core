//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\ios_widget_library\src\main\java\com\ashera\layout\MultiSelectionSpinnerImpl.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_MultiSelectionSpinnerImpl")
#ifdef RESTRICT_MultiSelectionSpinnerImpl
#define INCLUDE_ALL_MultiSelectionSpinnerImpl 0
#else
#define INCLUDE_ALL_MultiSelectionSpinnerImpl 1
#endif
#undef RESTRICT_MultiSelectionSpinnerImpl

#if !defined (ASMultiSelectionSpinnerImpl_) && (INCLUDE_ALL_MultiSelectionSpinnerImpl || defined(INCLUDE_ASMultiSelectionSpinnerImpl))
#define ASMultiSelectionSpinnerImpl_

#define RESTRICT_BaseHasWidgets 1
#define INCLUDE_ASBaseHasWidgets 1
#include "BaseHasWidgets.h"

#define RESTRICT_ICustomMeasureHeight 1
#define INCLUDE_ASICustomMeasureHeight 1
#include "ICustomMeasureHeight.h"

#define RESTRICT_ICustomMeasureWidth 1
#define INCLUDE_ASICustomMeasureWidth 1
#include "ICustomMeasureWidth.h"

#define RESTRICT_FormElement 1
#define INCLUDE_ASFormElement 1
#include "FormElement.h"

@class ADSpinner;
@class ASLoopParam;
@class ASWidgetAttribute;
@class IOSClass;
@class JavaLangBoolean;
@class JavaLangInteger;
@class NSString;
@protocol ASIFragment;
@protocol ASILifeCycleDecorator;
@protocol ASIWidget;
@protocol JavaUtilMap;

@interface ASMultiSelectionSpinnerImpl : ASBaseHasWidgets < ASICustomMeasureHeight, ASICustomMeasureWidth, ASFormElement > {
 @public
  id uiView_;
  ADSpinner *measurableView_;
}
@property id uiView;
@property id<JavaUtilList> selectedItem;

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)localname;

- (instancetype)initWithNSString:(NSString *)groupName
                    withNSString:(NSString *)localname;

- (id)asNativeWidget;

- (id)asWidget;

- (bool)checkIosVersionWithNSString:(NSString *)v;

- (void)createWithASIFragment:(id<ASIFragment>)fragment
              withJavaUtilMap:(id<JavaUtilMap>)params;

- (void)drawableStateChanged;

- (void)focus;

- (id)getAdjustsFontSizeToFitWidth;

- (id)getAllowsEditingTextAttributes;

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
              withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (id)getBackground;

- (int32_t)getBorderPadding;

- (id)getChildAttributeWithASIWidget:(id<ASIWidget>)w
               withASWidgetAttribute:(ASWidgetAttribute *)key;

- (id)getClearsOnBeginEditing;

- (id)getClearsOnInsertion;

- (id)getDisabledBackground;

- (id)getIsEditing;

- (int32_t)getLineHeightPadding;

- (id)getMinimumFontSize;

- (id)getPlaceholder;

- (id)getText;

- (id)getTextColor;

- (NSString *)getTextEntered;

- (IOSClass *)getViewClass;

- (void)initialized OBJC_METHOD_FAMILY_NONE;

- (void)invalidate;

- (bool)isViewVisible;

- (void)loadAttributesWithNSString:(NSString *)attributeName;

- (int32_t)measureHeightWithInt:(int32_t)width;

- (int32_t)measureWidth;

- (void)nativeSetEnabledWithBoolean:(bool)value;

- (id<ASIWidget>)newInstance OBJC_METHOD_FAMILY_NONE;

- (void)onRtlPropertiesChangedWithInt:(int32_t)layoutDirection;

- (void)requestLayout;

- (void)resetError;

- (void)setAdjustsFontSizeToFitWidthWithId:(id)nativeWidget
                                    withId:(id)value;

- (void)setAllowsEditingTextAttributesWithId:(id)nativeWidget
                                      withId:(id)value;

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue
                withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (void)setBackgroundWithId:(id)nativeWidget
                     withId:(id)value;

- (void)setChildAttributeWithASIWidget:(id<ASIWidget>)widget
                 withASWidgetAttribute:(ASWidgetAttribute *)key
                          withNSString:(NSString *)strValue
                                withId:(id)value;

- (void)setClearsOnBeginEditingWithId:(id)nativeWidget
                               withId:(id)value;

- (void)setClearsOnInsertionWithId:(id)nativeWidget
                            withId:(id)value;

- (void)setDisabledBackgroundWithId:(id)nativeWidget
                             withId:(id)value;

- (void)setEnabledWithId:(id)objValue;

- (void)setIdWithNSString:(NSString *)id_;

- (void)setMinimumFontSizeWithId:(id)nativeWidget
                          withId:(id)value;

- (void)setPaddingWithId:(id)objValue;

- (void)setPaddingBottomWithId:(id)objValue;

- (void)setPaddingLeftWithId:(id)objValue;

- (void)setPaddingRightWithId:(id)objValue;

- (void)setPaddingTopWithId:(id)objValue;

- (void)setPlaceholderWithId:(id)nativeWidget
                      withId:(id)value;

- (void)setTextWithId:(id)nativeWidget
               withId:(id)value;

- (void)setTextColorWithId:(id)nativeWidget
                    withId:(id)value;

- (void)setVisibleWithBoolean:(bool)b;

- (void)showErrorWithNSString:(NSString *)message;

#pragma mark Protected

- (void)addItemToParentWithInt:(int32_t)index
                  withNSString:(NSString *)id_
               withASLoopParam:(ASLoopParam *)loopParam;

#pragma mark Package-Private

@end

J2OBJC_STATIC_INIT(ASMultiSelectionSpinnerImpl)

J2OBJC_FIELD_SETTER(ASMultiSelectionSpinnerImpl, uiView_, id)
J2OBJC_FIELD_SETTER(ASMultiSelectionSpinnerImpl, measurableView_, ADSpinner *)

inline NSString *ASMultiSelectionSpinnerImpl_get_LOCAL_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASMultiSelectionSpinnerImpl_LOCAL_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASMultiSelectionSpinnerImpl, LOCAL_NAME, NSString *)

inline NSString *ASMultiSelectionSpinnerImpl_get_GROUP_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASMultiSelectionSpinnerImpl_GROUP_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASMultiSelectionSpinnerImpl, GROUP_NAME, NSString *)

FOUNDATION_EXPORT void ASMultiSelectionSpinnerImpl_init(ASMultiSelectionSpinnerImpl *self);

FOUNDATION_EXPORT ASMultiSelectionSpinnerImpl *new_ASMultiSelectionSpinnerImpl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASMultiSelectionSpinnerImpl *create_ASMultiSelectionSpinnerImpl_init(void);

FOUNDATION_EXPORT void ASMultiSelectionSpinnerImpl_initWithNSString_(ASMultiSelectionSpinnerImpl *self, NSString *localname);

FOUNDATION_EXPORT ASMultiSelectionSpinnerImpl *new_ASMultiSelectionSpinnerImpl_initWithNSString_(NSString *localname) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASMultiSelectionSpinnerImpl *create_ASMultiSelectionSpinnerImpl_initWithNSString_(NSString *localname);

FOUNDATION_EXPORT void ASMultiSelectionSpinnerImpl_initWithNSString_withNSString_(ASMultiSelectionSpinnerImpl *self, NSString *groupName, NSString *localname);

FOUNDATION_EXPORT ASMultiSelectionSpinnerImpl *new_ASMultiSelectionSpinnerImpl_initWithNSString_withNSString_(NSString *groupName, NSString *localname) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASMultiSelectionSpinnerImpl *create_ASMultiSelectionSpinnerImpl_initWithNSString_withNSString_(NSString *groupName, NSString *localname);

J2OBJC_TYPE_LITERAL_HEADER(ASMultiSelectionSpinnerImpl)

@compatibility_alias ComAsheraLayoutMultiSelectionSpinnerImpl ASMultiSelectionSpinnerImpl;


#endif

#if !defined (ASMultiSelectionSpinnerImpl_DrawableTintMode_) && (INCLUDE_ALL_MultiSelectionSpinnerImpl || defined(INCLUDE_ASMultiSelectionSpinnerImpl_DrawableTintMode))
#define ASMultiSelectionSpinnerImpl_DrawableTintMode_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASMultiSelectionSpinnerImpl_DrawableTintMode : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASMultiSelectionSpinnerImpl_DrawableTintMode)

FOUNDATION_EXPORT void ASMultiSelectionSpinnerImpl_DrawableTintMode_init(ASMultiSelectionSpinnerImpl_DrawableTintMode *self);

FOUNDATION_EXPORT ASMultiSelectionSpinnerImpl_DrawableTintMode *new_ASMultiSelectionSpinnerImpl_DrawableTintMode_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASMultiSelectionSpinnerImpl_DrawableTintMode *create_ASMultiSelectionSpinnerImpl_DrawableTintMode_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASMultiSelectionSpinnerImpl_DrawableTintMode)


#endif

#if !defined (ASMultiSelectionSpinnerImpl_Font_) && (INCLUDE_ALL_MultiSelectionSpinnerImpl || defined(INCLUDE_ASMultiSelectionSpinnerImpl_Font))
#define ASMultiSelectionSpinnerImpl_Font_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASMultiSelectionSpinnerImpl_Font : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASMultiSelectionSpinnerImpl_Font)

FOUNDATION_EXPORT void ASMultiSelectionSpinnerImpl_Font_init(ASMultiSelectionSpinnerImpl_Font *self);

FOUNDATION_EXPORT ASMultiSelectionSpinnerImpl_Font *new_ASMultiSelectionSpinnerImpl_Font_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASMultiSelectionSpinnerImpl_Font *create_ASMultiSelectionSpinnerImpl_Font_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASMultiSelectionSpinnerImpl_Font)


#endif

#if !defined (ASMultiSelectionSpinnerImpl_TextStyle_) && (INCLUDE_ALL_MultiSelectionSpinnerImpl || defined(INCLUDE_ASMultiSelectionSpinnerImpl_TextStyle))
#define ASMultiSelectionSpinnerImpl_TextStyle_

#define RESTRICT_AbstractBitFlagConverter 1
#define INCLUDE_ASAbstractBitFlagConverter 1
#include "AbstractBitFlagConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASMultiSelectionSpinnerImpl_TextStyle : ASAbstractBitFlagConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASMultiSelectionSpinnerImpl_TextStyle)

FOUNDATION_EXPORT void ASMultiSelectionSpinnerImpl_TextStyle_init(ASMultiSelectionSpinnerImpl_TextStyle *self);

FOUNDATION_EXPORT ASMultiSelectionSpinnerImpl_TextStyle *new_ASMultiSelectionSpinnerImpl_TextStyle_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASMultiSelectionSpinnerImpl_TextStyle *create_ASMultiSelectionSpinnerImpl_TextStyle_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASMultiSelectionSpinnerImpl_TextStyle)


#endif

#if !defined (ASMultiSelectionSpinnerImpl_MultiSelectionSpinnerExt_) && (INCLUDE_ALL_MultiSelectionSpinnerImpl || defined(INCLUDE_ASMultiSelectionSpinnerImpl_MultiSelectionSpinnerExt))
#define ASMultiSelectionSpinnerImpl_MultiSelectionSpinnerExt_

#define RESTRICT_Spinner 1
#define INCLUDE_ADSpinner 1
#include "Spinner.h"

#define RESTRICT_ILifeCycleDecorator 1
#define INCLUDE_ASILifeCycleDecorator 1
#include "ILifeCycleDecorator.h"

#define RESTRICT_IMaxDimension 1
#define INCLUDE_ASIMaxDimension 1
#include "IMaxDimension.h"

@class ADRect;
@class ADView;
@class ASMultiSelectionSpinnerImpl;
@class ASWidgetAttribute;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@class NSString;
@protocol ASIWidget;
@protocol JavaUtilList;

@interface ASMultiSelectionSpinnerImpl_MultiSelectionSpinnerExt : ADSpinner < ASILifeCycleDecorator, ASIMaxDimension >

#pragma mark Public

- (instancetype)initWithASMultiSelectionSpinnerImpl:(ASMultiSelectionSpinnerImpl *)outer$;

- (void)drawableStateChanged;

- (void)executeWithNSString:(NSString *)method
          withNSObjectArray:(IOSObjectArray *)canvas;

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute;

- (void)getLocationOnScreenWithIntArray:(IOSIntArray *)appScreenLocation;

- (int32_t)getMaxHeight;

- (int32_t)getMaxWidth;

- (id<JavaUtilList>)getMethods;

- (id<ASIWidget>)getWidget;

- (void)getWindowVisibleDisplayFrameWithADRect:(ADRect *)displayFrame;

- (ADView *)inflateViewWithNSString:(NSString *)layout;

- (void)initialized OBJC_METHOD_FAMILY_NONE;

- (int32_t)nativeMeasureHeightWithId:(id)uiView
                             withInt:(int32_t)width;

- (int32_t)nativeMeasureWidthWithId:(id)uiView;

- (id<ASILifeCycleDecorator>)newInstanceWithASIWidget:(id<ASIWidget>)widget OBJC_METHOD_FAMILY_NONE;

- (void)offsetLeftAndRightWithInt:(int32_t)offset;

- (void)offsetTopAndBottomWithInt:(int32_t)offset;

- (void)onMeasureWithInt:(int32_t)widthMeasureSpec
                 withInt:(int32_t)heightMeasureSpec;

- (void)remeasure;

- (void)removeFromParent;

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue;

- (void)setMaxHeightWithInt:(int32_t)height;

- (void)setMaxWidthWithInt:(int32_t)width;

- (void)setMyAttributeWithNSString:(NSString *)name
                            withId:(id)value;

- (void)setState0WithId:(id)value;

- (void)setState1WithId:(id)value;

- (void)setState2WithId:(id)value;

- (void)setState3WithId:(id)value;

- (void)setState4WithId:(id)value;

- (void)setVisibilityWithInt:(int32_t)visibility;

- (void)state0;

- (void)state1;

- (void)state2;

- (void)state3;

- (void)state4;

- (void)stateNo;

- (void)stateYes;

- (void)updateMeasuredDimensionWithInt:(int32_t)width
                               withInt:(int32_t)height;

#pragma mark Protected

- (void)onLayoutWithBoolean:(bool)changed
                    withInt:(int32_t)l
                    withInt:(int32_t)t
                    withInt:(int32_t)r
                    withInt:(int32_t)b;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithASIWidget:(id<ASIWidget>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASMultiSelectionSpinnerImpl_MultiSelectionSpinnerExt)

FOUNDATION_EXPORT void ASMultiSelectionSpinnerImpl_MultiSelectionSpinnerExt_initWithASMultiSelectionSpinnerImpl_(ASMultiSelectionSpinnerImpl_MultiSelectionSpinnerExt *self, ASMultiSelectionSpinnerImpl *outer$);

FOUNDATION_EXPORT ASMultiSelectionSpinnerImpl_MultiSelectionSpinnerExt *new_ASMultiSelectionSpinnerImpl_MultiSelectionSpinnerExt_initWithASMultiSelectionSpinnerImpl_(ASMultiSelectionSpinnerImpl *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASMultiSelectionSpinnerImpl_MultiSelectionSpinnerExt *create_ASMultiSelectionSpinnerImpl_MultiSelectionSpinnerExt_initWithASMultiSelectionSpinnerImpl_(ASMultiSelectionSpinnerImpl *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ASMultiSelectionSpinnerImpl_MultiSelectionSpinnerExt)


#endif

#if !defined (ASMultiSelectionSpinnerImpl_MultiSelectionSpinner_) && (INCLUDE_ALL_MultiSelectionSpinnerImpl || defined(INCLUDE_ASMultiSelectionSpinnerImpl_MultiSelectionSpinner))
#define ASMultiSelectionSpinnerImpl_MultiSelectionSpinner_

@interface ASMultiSelectionSpinnerImpl_MultiSelectionSpinner : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASMultiSelectionSpinnerImpl_MultiSelectionSpinner)

FOUNDATION_EXPORT void ASMultiSelectionSpinnerImpl_MultiSelectionSpinner_init(ASMultiSelectionSpinnerImpl_MultiSelectionSpinner *self);

FOUNDATION_EXPORT ASMultiSelectionSpinnerImpl_MultiSelectionSpinner *new_ASMultiSelectionSpinnerImpl_MultiSelectionSpinner_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASMultiSelectionSpinnerImpl_MultiSelectionSpinner *create_ASMultiSelectionSpinnerImpl_MultiSelectionSpinner_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASMultiSelectionSpinnerImpl_MultiSelectionSpinner)


#endif

#if !defined (ASMultiSelectionSpinnerImpl_MultiSelectionSpinner_OnMultiItemSelectedListener_) && (INCLUDE_ALL_MultiSelectionSpinnerImpl || defined(INCLUDE_ASMultiSelectionSpinnerImpl_MultiSelectionSpinner_OnMultiItemSelectedListener))
#define ASMultiSelectionSpinnerImpl_MultiSelectionSpinner_OnMultiItemSelectedListener_

@class ADView;
@protocol JavaUtilList;

/*!
 @brief Interface definition for a callback to be invoked when
  an item in this view has been selected.
 */
@protocol ASMultiSelectionSpinnerImpl_MultiSelectionSpinner_OnMultiItemSelectedListener < JavaObject >

/*!
 @brief <p>Callback method to be invoked when an item in this view has been
  selected.This callback is invoked only when the newly selected
  position is different from the previously selected position or if
  there was no selected item.
 </p>
  Impelmenters can call getItemAtPosition(position) if they need to access the
  data associated with the selected item.
 @param view The view within the AdapterView that was clicked
 @param positions The position of the view in the adapter
 */
- (void)onItemSelectedWithADView:(ADView *)view
                withJavaUtilList:(id<JavaUtilList>)positions;

/*!
 @brief Callback method to be invoked when the selection disappears from this
  view.The selection can disappear for instance when touch is activated
  or when the adapter becomes empty.
 @param view The view within the AdapterView that was clicked
 @param positions The position of the view in the adapter
 */
- (void)onNothingSelectedWithADView:(ADView *)view
                   withJavaUtilList:(id<JavaUtilList>)positions;

@end

J2OBJC_EMPTY_STATIC_INIT(ASMultiSelectionSpinnerImpl_MultiSelectionSpinner_OnMultiItemSelectedListener)

J2OBJC_TYPE_LITERAL_HEADER(ASMultiSelectionSpinnerImpl_MultiSelectionSpinner_OnMultiItemSelectedListener)


#endif

#pragma pop_macro("INCLUDE_ALL_MultiSelectionSpinnerImpl")
