//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\ios_widget_library\src\main\java\com\ashera\layout\ViewGroupImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ViewGroupImpl")
#ifdef RESTRICT_ViewGroupImpl
#define INCLUDE_ALL_ViewGroupImpl 0
#else
#define INCLUDE_ALL_ViewGroupImpl 1
#endif
#undef RESTRICT_ViewGroupImpl

#if !defined (ASViewGroupImpl_) && (INCLUDE_ALL_ViewGroupImpl || defined(INCLUDE_ASViewGroupImpl))
#define ASViewGroupImpl_

@class ASSimpleWrapableView;
@class ASWidgetAttribute;
@protocol ASILifeCycleDecorator;
@protocol ASIWidget;

@interface ASViewGroupImpl : NSObject

#pragma mark Public

+ (id)getAttributeWithASIWidget:(id<ASIWidget>)w
          withASWidgetAttribute:(ASWidgetAttribute *)key
      withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

+ (id)getChildAttributeWithASIWidget:(id<ASIWidget>)w
               withASWidgetAttribute:(ASWidgetAttribute *)key;

+ (jboolean)isAttributeSupportedWithASWidgetAttribute:(ASWidgetAttribute *)key;

+ (void)nativeAddViewWithId:(id)uiView
                     withId:(id)w;

+ (void)nativeRemoveViewWithASIWidget:(id<ASIWidget>)widget;

+ (void)register__WithNSString:(NSString *)localName;

+ (void)registerCommandConveterWithASIWidget:(id<ASIWidget>)widget;

+ (void)removeViewWithId:(id)view;

+ (void)setAttributeWithASIWidget:(id<ASIWidget>)w
         withASSimpleWrapableView:(ASSimpleWrapableView *)wrapperView
            withASWidgetAttribute:(ASWidgetAttribute *)key
                     withNSString:(NSString *)strValue
                           withId:(id)objValue
        withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

+ (void)setAttributeWithASIWidget:(id<ASIWidget>)w
            withASWidgetAttribute:(ASWidgetAttribute *)key
                     withNSString:(NSString *)strValue
                           withId:(id)objValue
        withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

+ (void)setBottomMarginWithId:(id)objValue
                       withId:(id)layoutParams;

+ (void)setChildAttributeWithASIWidget:(id<ASIWidget>)w
                 withASWidgetAttribute:(ASWidgetAttribute *)key
                                withId:(id)objValue
                                withId:(id)layoutParams;

+ (void)setEndMarginWithId:(id)objValue
                    withId:(id)layoutParams
             withASIWidget:(id<ASIWidget>)w;

+ (void)setLeftMarginWithId:(id)objValue
                     withId:(id)layoutParams
              withASIWidget:(id<ASIWidget>)w;

+ (void)setMarginWithId:(id)objValue
                 withId:(id)layoutParams
          withASIWidget:(id<ASIWidget>)w;

+ (void)setRightMarginWithId:(id)objValue
                      withId:(id)layoutParams
               withASIWidget:(id<ASIWidget>)w;

+ (void)setStartMarginWithId:(id)objValue
                      withId:(id)layoutParams
               withASIWidget:(id<ASIWidget>)w;

+ (void)setTopMarginWithId:(id)objValue
                    withId:(id)layoutParams;

@end

J2OBJC_EMPTY_STATIC_INIT(ASViewGroupImpl)

FOUNDATION_EXPORT void ASViewGroupImpl_register__WithNSString_(NSString *localName);

FOUNDATION_EXPORT void ASViewGroupImpl_setAttributeWithASIWidget_withASSimpleWrapableView_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(id<ASIWidget> w, ASSimpleWrapableView *wrapperView, ASWidgetAttribute *key, NSString *strValue, id objValue, id<ASILifeCycleDecorator> decorator);

FOUNDATION_EXPORT void ASViewGroupImpl_setAttributeWithASIWidget_withASWidgetAttribute_withNSString_withId_withASILifeCycleDecorator_(id<ASIWidget> w, ASWidgetAttribute *key, NSString *strValue, id objValue, id<ASILifeCycleDecorator> decorator);

FOUNDATION_EXPORT void ASViewGroupImpl_setChildAttributeWithASIWidget_withASWidgetAttribute_withId_withId_(id<ASIWidget> w, ASWidgetAttribute *key, id objValue, id layoutParams);

FOUNDATION_EXPORT id ASViewGroupImpl_getAttributeWithASIWidget_withASWidgetAttribute_withASILifeCycleDecorator_(id<ASIWidget> w, ASWidgetAttribute *key, id<ASILifeCycleDecorator> decorator);

FOUNDATION_EXPORT id ASViewGroupImpl_getChildAttributeWithASIWidget_withASWidgetAttribute_(id<ASIWidget> w, ASWidgetAttribute *key);

FOUNDATION_EXPORT void ASViewGroupImpl_setMarginWithId_withId_withASIWidget_(id objValue, id layoutParams, id<ASIWidget> w);

FOUNDATION_EXPORT void ASViewGroupImpl_setBottomMarginWithId_withId_(id objValue, id layoutParams);

FOUNDATION_EXPORT void ASViewGroupImpl_setTopMarginWithId_withId_(id objValue, id layoutParams);

FOUNDATION_EXPORT void ASViewGroupImpl_setLeftMarginWithId_withId_withASIWidget_(id objValue, id layoutParams, id<ASIWidget> w);

FOUNDATION_EXPORT void ASViewGroupImpl_setRightMarginWithId_withId_withASIWidget_(id objValue, id layoutParams, id<ASIWidget> w);

FOUNDATION_EXPORT void ASViewGroupImpl_setEndMarginWithId_withId_withASIWidget_(id objValue, id layoutParams, id<ASIWidget> w);

FOUNDATION_EXPORT void ASViewGroupImpl_setStartMarginWithId_withId_withASIWidget_(id objValue, id layoutParams, id<ASIWidget> w);

FOUNDATION_EXPORT jboolean ASViewGroupImpl_isAttributeSupportedWithASWidgetAttribute_(ASWidgetAttribute *key);

FOUNDATION_EXPORT void ASViewGroupImpl_registerCommandConveterWithASIWidget_(id<ASIWidget> widget);

FOUNDATION_EXPORT void ASViewGroupImpl_nativeRemoveViewWithASIWidget_(id<ASIWidget> widget);

FOUNDATION_EXPORT void ASViewGroupImpl_removeViewWithId_(id view);

FOUNDATION_EXPORT void ASViewGroupImpl_nativeAddViewWithId_withId_(id uiView, id w);

J2OBJC_TYPE_LITERAL_HEADER(ASViewGroupImpl)

@compatibility_alias ComAsheraLayoutViewGroupImpl ASViewGroupImpl;

#endif

#if !defined (ASViewGroupImpl_LayoutTransition_) && (INCLUDE_ALL_ViewGroupImpl || defined(INCLUDE_ASViewGroupImpl_LayoutTransition))
#define ASViewGroupImpl_LayoutTransition_

#define RESTRICT_AbstractBitFlagConverter 1
#define INCLUDE_ASAbstractBitFlagConverter 1
#include "AbstractBitFlagConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASViewGroupImpl_LayoutTransition : ASAbstractBitFlagConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASViewGroupImpl_LayoutTransition)

FOUNDATION_EXPORT void ASViewGroupImpl_LayoutTransition_init(ASViewGroupImpl_LayoutTransition *self);

FOUNDATION_EXPORT ASViewGroupImpl_LayoutTransition *new_ASViewGroupImpl_LayoutTransition_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASViewGroupImpl_LayoutTransition *create_ASViewGroupImpl_LayoutTransition_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASViewGroupImpl_LayoutTransition)

#endif

#if !defined (ASViewGroupImpl_LayoutMode_) && (INCLUDE_ALL_ViewGroupImpl || defined(INCLUDE_ASViewGroupImpl_LayoutMode))
#define ASViewGroupImpl_LayoutMode_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASViewGroupImpl_LayoutMode : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASViewGroupImpl_LayoutMode)

FOUNDATION_EXPORT void ASViewGroupImpl_LayoutMode_init(ASViewGroupImpl_LayoutMode *self);

FOUNDATION_EXPORT ASViewGroupImpl_LayoutMode *new_ASViewGroupImpl_LayoutMode_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASViewGroupImpl_LayoutMode *create_ASViewGroupImpl_LayoutMode_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASViewGroupImpl_LayoutMode)

#endif

#if !defined (ASViewGroupImpl_ClipPaddingMaskCommand_) && (INCLUDE_ALL_ViewGroupImpl || defined(INCLUDE_ASViewGroupImpl_ClipPaddingMaskCommand))
#define ASViewGroupImpl_ClipPaddingMaskCommand_

#define RESTRICT_BaseAttributeCommand 1
#define INCLUDE_ASBaseAttributeCommand 1
#include "BaseAttributeCommand.h"

@class IOSObjectArray;
@protocol ASAttributeCommand;
@protocol ASIWidget;

@interface ASViewGroupImpl_ClipPaddingMaskCommand : ASBaseAttributeCommand

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)id_;

- (jboolean)executeAfterPostMeasure;

- (id)modifyValueWithASIWidget:(id<ASIWidget>)widget
                        withId:(id)nativeView
                  withNSString:(NSString *)phase
                  withNSString:(NSString *)attributeName
                        withId:(id)value;

- (id<ASAttributeCommand>)newInstanceWithNSObjectArray:(IOSObjectArray *)args OBJC_METHOD_FAMILY_NONE;

- (void)updateArgsWithNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_EMPTY_STATIC_INIT(ASViewGroupImpl_ClipPaddingMaskCommand)

FOUNDATION_EXPORT void ASViewGroupImpl_ClipPaddingMaskCommand_initWithNSString_(ASViewGroupImpl_ClipPaddingMaskCommand *self, NSString *id_);

FOUNDATION_EXPORT ASViewGroupImpl_ClipPaddingMaskCommand *new_ASViewGroupImpl_ClipPaddingMaskCommand_initWithNSString_(NSString *id_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASViewGroupImpl_ClipPaddingMaskCommand *create_ASViewGroupImpl_ClipPaddingMaskCommand_initWithNSString_(NSString *id_);

J2OBJC_TYPE_LITERAL_HEADER(ASViewGroupImpl_ClipPaddingMaskCommand)

#endif

#pragma pop_macro("INCLUDE_ALL_ViewGroupImpl")
