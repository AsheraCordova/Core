//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\ios_widget_library\src\main\java\com\ashera\layout\ToggleButtonImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ToggleButtonImpl")
#ifdef RESTRICT_ToggleButtonImpl
#define INCLUDE_ALL_ToggleButtonImpl 0
#else
#define INCLUDE_ALL_ToggleButtonImpl 1
#endif
#undef RESTRICT_ToggleButtonImpl

#if !defined (ASToggleButtonImpl_) && (INCLUDE_ALL_ToggleButtonImpl || defined(INCLUDE_ASToggleButtonImpl))
#define ASToggleButtonImpl_

#define RESTRICT_BaseWidget 1
#define INCLUDE_ASBaseWidget 1
#include "BaseWidget.h"

#define RESTRICT_ICustomMeasureHeight 1
#define INCLUDE_ASICustomMeasureHeight 1
#include "ICustomMeasureHeight.h"

#define RESTRICT_ICustomMeasureWidth 1
#define INCLUDE_ASICustomMeasureWidth 1
#include "ICustomMeasureWidth.h"

@class ADToggleButton;
@class ASWidgetAttribute;
@class IOSClass;
@protocol ASIFragment;
@protocol ASILifeCycleDecorator;
@protocol ASIWidget;
@protocol JavaUtilMap;

@interface ASToggleButtonImpl : ASBaseWidget < ASICustomMeasureHeight, ASICustomMeasureWidth > {
 @public
  id uiView_;
  ADToggleButton *measurableView_;
}
@property id uiView;

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)localname;

- (instancetype)initWithNSString:(NSString *)groupName
                    withNSString:(NSString *)localname;

- (id)asNativeWidget;

- (id)asWidget;

- (jboolean)checkIosVersionWithNSString:(NSString *)v;

- (void)createWithASIFragment:(id<ASIFragment>)fragment
              withJavaUtilMap:(id<JavaUtilMap>)params;

- (void)drawableStateChanged;

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
              withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (jint)getBorderPadding;

- (jint)getLineHeightPadding;

- (jint)getMaxEms;

- (jint)getMaxHeight;

- (jint)getMaxLines;

- (jint)getMaxWidth;

- (jint)getMinEms;

- (jint)getMinLines;

- (id)getPaddingBottom;

- (id)getPaddingLeft;

- (id)getPaddingRight;

- (id)getPaddingTop;

- (IOSClass *)getViewClass;

- (void)invalidate;

- (void)loadAttributesWithNSString:(NSString *)attributeName;

- (jint)measureHeightWithInt:(jint)width;

- (jint)measureWidth;

- (id<ASIWidget>)newInstance OBJC_METHOD_FAMILY_NONE;

- (void)onRtlPropertiesChangedWithInt:(jint)layoutDirection;

- (void)requestLayout;

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)key
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue
                withASILifeCycleDecorator:(id<ASILifeCycleDecorator>)decorator;

- (void)setIdWithNSString:(NSString *)id_;

- (void)setMyTextWithId:(id)text;

- (void)setPaddingBottomWithId:(id)paddingBottom;

- (void)setPaddingLeftWithId:(id)paddingLeft;

- (void)setPaddingRightWithId:(id)paddingRight;

- (void)setPaddingTopWithId:(id)paddingTop;

- (void)setVisibleWithBoolean:(jboolean)b;

- (void)updatePadding;

#pragma mark Package-Private

@end

J2OBJC_STATIC_INIT(ASToggleButtonImpl)

J2OBJC_FIELD_SETTER(ASToggleButtonImpl, uiView_, id)
J2OBJC_FIELD_SETTER(ASToggleButtonImpl, measurableView_, ADToggleButton *)

inline NSString *ASToggleButtonImpl_get_LOCAL_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASToggleButtonImpl_LOCAL_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASToggleButtonImpl, LOCAL_NAME, NSString *)

inline NSString *ASToggleButtonImpl_get_GROUP_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ASToggleButtonImpl_GROUP_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ASToggleButtonImpl, GROUP_NAME, NSString *)

FOUNDATION_EXPORT void ASToggleButtonImpl_init(ASToggleButtonImpl *self);

FOUNDATION_EXPORT ASToggleButtonImpl *new_ASToggleButtonImpl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASToggleButtonImpl *create_ASToggleButtonImpl_init(void);

FOUNDATION_EXPORT void ASToggleButtonImpl_initWithNSString_(ASToggleButtonImpl *self, NSString *localname);

FOUNDATION_EXPORT ASToggleButtonImpl *new_ASToggleButtonImpl_initWithNSString_(NSString *localname) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASToggleButtonImpl *create_ASToggleButtonImpl_initWithNSString_(NSString *localname);

FOUNDATION_EXPORT void ASToggleButtonImpl_initWithNSString_withNSString_(ASToggleButtonImpl *self, NSString *groupName, NSString *localname);

FOUNDATION_EXPORT ASToggleButtonImpl *new_ASToggleButtonImpl_initWithNSString_withNSString_(NSString *groupName, NSString *localname) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASToggleButtonImpl *create_ASToggleButtonImpl_initWithNSString_withNSString_(NSString *groupName, NSString *localname);

J2OBJC_TYPE_LITERAL_HEADER(ASToggleButtonImpl)

@compatibility_alias ComAsheraLayoutToggleButtonImpl ASToggleButtonImpl;

#endif

#if !defined (ASToggleButtonImpl_DrawableTintMode_) && (INCLUDE_ALL_ToggleButtonImpl || defined(INCLUDE_ASToggleButtonImpl_DrawableTintMode))
#define ASToggleButtonImpl_DrawableTintMode_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASToggleButtonImpl_DrawableTintMode : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASToggleButtonImpl_DrawableTintMode)

FOUNDATION_EXPORT void ASToggleButtonImpl_DrawableTintMode_init(ASToggleButtonImpl_DrawableTintMode *self);

FOUNDATION_EXPORT ASToggleButtonImpl_DrawableTintMode *new_ASToggleButtonImpl_DrawableTintMode_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASToggleButtonImpl_DrawableTintMode *create_ASToggleButtonImpl_DrawableTintMode_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASToggleButtonImpl_DrawableTintMode)

#endif

#if !defined (ASToggleButtonImpl_MarqueeRepeatLimit_) && (INCLUDE_ALL_ToggleButtonImpl || defined(INCLUDE_ASToggleButtonImpl_MarqueeRepeatLimit))
#define ASToggleButtonImpl_MarqueeRepeatLimit_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASToggleButtonImpl_MarqueeRepeatLimit : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

- (jboolean)supportsIntAlso;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASToggleButtonImpl_MarqueeRepeatLimit)

FOUNDATION_EXPORT void ASToggleButtonImpl_MarqueeRepeatLimit_init(ASToggleButtonImpl_MarqueeRepeatLimit *self);

FOUNDATION_EXPORT ASToggleButtonImpl_MarqueeRepeatLimit *new_ASToggleButtonImpl_MarqueeRepeatLimit_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASToggleButtonImpl_MarqueeRepeatLimit *create_ASToggleButtonImpl_MarqueeRepeatLimit_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASToggleButtonImpl_MarqueeRepeatLimit)

#endif

#if !defined (ASToggleButtonImpl_Font_) && (INCLUDE_ALL_ToggleButtonImpl || defined(INCLUDE_ASToggleButtonImpl_Font))
#define ASToggleButtonImpl_Font_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASToggleButtonImpl_Font : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASToggleButtonImpl_Font)

FOUNDATION_EXPORT void ASToggleButtonImpl_Font_init(ASToggleButtonImpl_Font *self);

FOUNDATION_EXPORT ASToggleButtonImpl_Font *new_ASToggleButtonImpl_Font_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASToggleButtonImpl_Font *create_ASToggleButtonImpl_Font_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASToggleButtonImpl_Font)

#endif

#if !defined (ASToggleButtonImpl_TextStyle_) && (INCLUDE_ALL_ToggleButtonImpl || defined(INCLUDE_ASToggleButtonImpl_TextStyle))
#define ASToggleButtonImpl_TextStyle_

#define RESTRICT_AbstractBitFlagConverter 1
#define INCLUDE_ASAbstractBitFlagConverter 1
#include "AbstractBitFlagConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASToggleButtonImpl_TextStyle : ASAbstractBitFlagConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASToggleButtonImpl_TextStyle)

FOUNDATION_EXPORT void ASToggleButtonImpl_TextStyle_init(ASToggleButtonImpl_TextStyle *self);

FOUNDATION_EXPORT ASToggleButtonImpl_TextStyle *new_ASToggleButtonImpl_TextStyle_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASToggleButtonImpl_TextStyle *create_ASToggleButtonImpl_TextStyle_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASToggleButtonImpl_TextStyle)

#endif

#if !defined (ASToggleButtonImpl_Ellipsize_) && (INCLUDE_ALL_ToggleButtonImpl || defined(INCLUDE_ASToggleButtonImpl_Ellipsize))
#define ASToggleButtonImpl_Ellipsize_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASToggleButtonImpl_Ellipsize : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASToggleButtonImpl_Ellipsize)

FOUNDATION_EXPORT void ASToggleButtonImpl_Ellipsize_init(ASToggleButtonImpl_Ellipsize *self);

FOUNDATION_EXPORT ASToggleButtonImpl_Ellipsize *new_ASToggleButtonImpl_Ellipsize_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASToggleButtonImpl_Ellipsize *create_ASToggleButtonImpl_Ellipsize_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASToggleButtonImpl_Ellipsize)

#endif

#if !defined (ASToggleButtonImpl_JustificationMode_) && (INCLUDE_ALL_ToggleButtonImpl || defined(INCLUDE_ASToggleButtonImpl_JustificationMode))
#define ASToggleButtonImpl_JustificationMode_

#define RESTRICT_AbstractEnumToIntConverter 1
#define INCLUDE_ASAbstractEnumToIntConverter 1
#include "AbstractEnumToIntConverter.h"

@class JavaLangInteger;
@protocol JavaUtilMap;

@interface ASToggleButtonImpl_JustificationMode : ASAbstractEnumToIntConverter

#pragma mark Public

- (JavaLangInteger *)getDefault;

- (id<JavaUtilMap>)getMapping;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ASToggleButtonImpl_JustificationMode)

FOUNDATION_EXPORT void ASToggleButtonImpl_JustificationMode_init(ASToggleButtonImpl_JustificationMode *self);

FOUNDATION_EXPORT ASToggleButtonImpl_JustificationMode *new_ASToggleButtonImpl_JustificationMode_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASToggleButtonImpl_JustificationMode *create_ASToggleButtonImpl_JustificationMode_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASToggleButtonImpl_JustificationMode)

#endif

#if !defined (ASToggleButtonImpl_ToggleButtonExt_) && (INCLUDE_ALL_ToggleButtonImpl || defined(INCLUDE_ASToggleButtonImpl_ToggleButtonExt))
#define ASToggleButtonImpl_ToggleButtonExt_

#define RESTRICT_ToggleButton 1
#define INCLUDE_ADToggleButton 1
#include "ToggleButton.h"

#define RESTRICT_ILifeCycleDecorator 1
#define INCLUDE_ASILifeCycleDecorator 1
#include "ILifeCycleDecorator.h"

@class ADRect;
@class ADView;
@class ASToggleButtonImpl;
@class ASWidgetAttribute;
@class IOSIntArray;
@class IOSObjectArray;
@protocol ASIWidget;
@protocol JavaUtilList;

@interface ASToggleButtonImpl_ToggleButtonExt : ADToggleButton < ASILifeCycleDecorator >

#pragma mark Public

- (instancetype)initWithASToggleButtonImpl:(ASToggleButtonImpl *)outer$;

- (jint)computeSizeWithFloat:(jfloat)width;

- (void)drawableStateChanged;

- (void)executeWithNSString:(NSString *)method
          withNSObjectArray:(IOSObjectArray *)canvas;

- (id)getAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute;

- (jint)getBorderPadding;

- (jint)getBorderWidth;

- (jint)getLineHeight;

- (jint)getLineHeightPadding;

- (void)getLocationOnScreenWithIntArray:(IOSIntArray *)appScreenLocation;

- (id<JavaUtilList>)getMethods;

- (NSString *)getText;

- (id<ASIWidget>)getWidget;

- (void)getWindowVisibleDisplayFrameWithADRect:(ADRect *)displayFrame;

- (ADView *)inflateViewWithNSString:(NSString *)layout;

- (void)initialized OBJC_METHOD_FAMILY_NONE;

- (jint)nativeMeasureHeightWithId:(id)uiView
                          withInt:(jint)width;

- (jint)nativeMeasureWidthWithId:(id)uiView;

- (id<ASILifeCycleDecorator>)newInstanceWithASIWidget:(id<ASIWidget>)widget OBJC_METHOD_FAMILY_NONE;

- (void)offsetLeftAndRightWithInt:(jint)offset;

- (void)offsetTopAndBottomWithInt:(jint)offset;

- (void)onMeasureWithInt:(jint)widthMeasureSpec
                 withInt:(jint)heightMeasureSpec;

- (void)remeasure;

- (void)removeFromParent;

- (void)setAttributeWithASWidgetAttribute:(ASWidgetAttribute *)widgetAttribute
                             withNSString:(NSString *)strValue
                                   withId:(id)objValue;

- (void)setMyAttributeWithNSString:(NSString *)name
                            withId:(id)value;

- (void)setState0WithId:(id)value;

- (void)setState1WithId:(id)value;

- (void)setState2WithId:(id)value;

- (void)setState3WithId:(id)value;

- (void)setState4WithId:(id)value;

- (void)setVisibilityWithInt:(jint)visibility;

- (void)state0;

- (void)state1;

- (void)state2;

- (void)state3;

- (void)state4;

- (void)stateNo;

- (void)stateYes;

- (void)updateMeasuredDimensionWithInt:(jint)width
                               withInt:(jint)height;

#pragma mark Protected

- (void)onLayoutWithBoolean:(jboolean)changed
                    withInt:(jint)l
                    withInt:(jint)t
                    withInt:(jint)r
                    withInt:(jint)b;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithASIWidget:(id<ASIWidget>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASToggleButtonImpl_ToggleButtonExt)

FOUNDATION_EXPORT void ASToggleButtonImpl_ToggleButtonExt_initWithASToggleButtonImpl_(ASToggleButtonImpl_ToggleButtonExt *self, ASToggleButtonImpl *outer$);

FOUNDATION_EXPORT ASToggleButtonImpl_ToggleButtonExt *new_ASToggleButtonImpl_ToggleButtonExt_initWithASToggleButtonImpl_(ASToggleButtonImpl *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASToggleButtonImpl_ToggleButtonExt *create_ASToggleButtonImpl_ToggleButtonExt_initWithASToggleButtonImpl_(ASToggleButtonImpl *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ASToggleButtonImpl_ToggleButtonExt)

#endif

#pragma pop_macro("INCLUDE_ALL_ToggleButtonImpl")
