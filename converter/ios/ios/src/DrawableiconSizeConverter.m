//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\IOSConverter\src\main\java\com\ashera\converter\DrawableiconSizeConverter.java
//

#include "AttributeCommand.h"
#include "BaseAttributeCommand.h"
#include "Drawable.h"
#include "DrawableiconSizeConverter.h"
#include "IOSObjectArray.h"
#include "IWidget.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"

@class JavaLangInteger;


@interface ASDrawableiconSizeConverter () {
 @public
  JavaLangInteger *iconSize_;
}

@end

J2OBJC_FIELD_SETTER(ASDrawableiconSizeConverter, iconSize_, JavaLangInteger *)

@implementation ASDrawableiconSizeConverter

- (instancetype)initWithNSString:(NSString *)id_ {
  ASDrawableiconSizeConverter_initWithNSString_(self, id_);
  return self;
}

- (id)modifyValueWithASIWidget:(id<ASIWidget>)widget
                        withId:(id)nativeView
                  withNSString:(NSString *)phase
                  withNSString:(NSString *)attributeName
                        withId:(id)value {
  if (value != nil && iconSize_ != nil) {
    if ([value isKindOfClass:[ADDrawable class]]) {
      [((ADDrawable *) value) setMinimumHeightWithInt:[iconSize_ intValue]];
      [((ADDrawable *) value) setMinimumWidthWithInt:[((JavaLangInteger *) nil_chk(iconSize_)) intValue]];
    }
  }
  return value;
}

- (id<ASAttributeCommand>)newInstanceWithNSObjectArray:(IOSObjectArray *)args {
  ASDrawableiconSizeConverter *capInsetsCommandConverter = new_ASDrawableiconSizeConverter_initWithNSString_(self->id__);
  [capInsetsCommandConverter updateArgsWithNSObjectArray:args];
  return capInsetsCommandConverter;
}

- (void)updateArgsWithNSObjectArray:(IOSObjectArray *)args {
  if ([IOSObjectArray_Get(nil_chk(args), 0) isKindOfClass:[JavaLangInteger class]]) {
    self->iconSize_ = (JavaLangInteger *) cast_chk(IOSObjectArray_Get(args, 0), [JavaLangInteger class]);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LASAttributeCommand;", 0x81, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x81, 5, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(modifyValueWithASIWidget:withId:withNSString:withNSString:withId:);
  methods[2].selector = @selector(newInstanceWithNSObjectArray:);
  methods[3].selector = @selector(updateArgsWithNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "iconSize_", "LJavaLangInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "modifyValue", "LASIWidget;LNSObject;LNSString;LNSString;LNSObject;", "newInstance", "[LNSObject;", "updateArgs" };
  static const J2ObjcClassInfo _ASDrawableiconSizeConverter = { "DrawableiconSizeConverter", "com.ashera.converter", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_ASDrawableiconSizeConverter;
}

@end

void ASDrawableiconSizeConverter_initWithNSString_(ASDrawableiconSizeConverter *self, NSString *id_) {
  ASBaseAttributeCommand_initWithNSString_(self, id_);
}

ASDrawableiconSizeConverter *new_ASDrawableiconSizeConverter_initWithNSString_(NSString *id_) {
  J2OBJC_NEW_IMPL(ASDrawableiconSizeConverter, initWithNSString_, id_)
}

ASDrawableiconSizeConverter *create_ASDrawableiconSizeConverter_initWithNSString_(NSString *id_) {
  J2OBJC_CREATE_IMPL(ASDrawableiconSizeConverter, initWithNSString_, id_)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASDrawableiconSizeConverter)
