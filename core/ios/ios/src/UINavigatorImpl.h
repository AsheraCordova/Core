//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-ios-widgets\IOSCorePlugin\src\main\java\com\ashera\core\UINavigatorImpl.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_UINavigatorImpl")
#ifdef RESTRICT_UINavigatorImpl
#define INCLUDE_ALL_UINavigatorImpl 0
#else
#define INCLUDE_ALL_UINavigatorImpl 1
#endif
#undef RESTRICT_UINavigatorImpl

#if !defined (ASUINavigatorImpl_) && (INCLUDE_ALL_UINavigatorImpl || defined(INCLUDE_ASUINavigatorImpl))
#define ASUINavigatorImpl_

@class ASUINavigatorImpl_FragmentFactory;
@class JavaLangBoolean;
@class JavaLangInteger;
@class NSString;
@protocol ASIFragment;
@protocol JavaUtilList;

@interface ASUINavigatorImpl : NSObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithASUINavigatorImpl_FragmentFactory:(ASUINavigatorImpl_FragmentFactory *)fragmentFactory
                                                   withId:(id)navController
                                              withBoolean:(bool)remeasure;

- (void)closeDialog;

- (void)closeDialogWithASIFragment:(id<ASIFragment>)fragment;

- (id<ASIFragment>)getActiveFragmentWithASIFragment:(id<ASIFragment>)fragment;

- (int32_t)getPopCountWithNSString:(NSString *)destinationId
                       withBoolean:(bool)inclusive;

- (void)navigateWithNSString:(NSString *)actionId
            withJavaUtilList:(id<JavaUtilList>)scopedObjects
                 withBoolean:(bool)finish
                     withInt:(int32_t)popCount
                 withBoolean:(bool)clear
             withASIFragment:(id<ASIFragment>)fragment;

- (void)navigateWithNSString:(NSString *)actionId
            withJavaUtilList:(id<JavaUtilList>)scopedObjects
             withASIFragment:(id<ASIFragment>)fragment;

- (void)navigateWithNSString:(NSString *)actionId
                withNSString:(NSString *)destinationId
                 withBoolean:(bool)inclusive
                 withBoolean:(bool)finish
            withJavaUtilList:(id<JavaUtilList>)scopedObjects
             withASIFragment:(id<ASIFragment>)fragment;

- (void)navigateAsTopWithNSString:(NSString *)actionId
                 withJavaUtilList:(id<JavaUtilList>)scopedObjects
                  withASIFragment:(id<ASIFragment>)fragment;

- (void)navigateWithPopBackStackWithNSString:(NSString *)actionId
                            withJavaUtilList:(id<JavaUtilList>)scopedObjects
                             withASIFragment:(id<ASIFragment>)fragment;

- (void)navigateWithPopBackStackToWithNSString:(NSString *)actionId
                                  withNSString:(NSString *)destinationId
                                   withBoolean:(bool)inclusive
                              withJavaUtilList:(id<JavaUtilList>)scopedObjects
                               withASIFragment:(id<ASIFragment>)fragment;

- (void)popBackStackWithASIFragment:(id<ASIFragment>)fragment;

- (void)popBackStackWithASIFragment:(id<ASIFragment>)fragment
                       withNSString:(NSString *)destinationId
                        withBoolean:(bool)inclusive;

- (void)setNamespaceWithNSString:(NSString *)namespace_;

- (void)setRootDirectoryWithNSString:(NSString *)rootDirectory;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUINavigatorImpl)

FOUNDATION_EXPORT void ASUINavigatorImpl_init(ASUINavigatorImpl *self);

FOUNDATION_EXPORT ASUINavigatorImpl *new_ASUINavigatorImpl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUINavigatorImpl *create_ASUINavigatorImpl_init(void);

FOUNDATION_EXPORT void ASUINavigatorImpl_initWithASUINavigatorImpl_FragmentFactory_withId_withBoolean_(ASUINavigatorImpl *self, ASUINavigatorImpl_FragmentFactory *fragmentFactory, id navController, bool remeasure);

FOUNDATION_EXPORT ASUINavigatorImpl *new_ASUINavigatorImpl_initWithASUINavigatorImpl_FragmentFactory_withId_withBoolean_(ASUINavigatorImpl_FragmentFactory *fragmentFactory, id navController, bool remeasure) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUINavigatorImpl *create_ASUINavigatorImpl_initWithASUINavigatorImpl_FragmentFactory_withId_withBoolean_(ASUINavigatorImpl_FragmentFactory *fragmentFactory, id navController, bool remeasure);

J2OBJC_TYPE_LITERAL_HEADER(ASUINavigatorImpl)

@compatibility_alias ComAsheraCoreUINavigatorImpl ASUINavigatorImpl;


#endif

#if !defined (ASUINavigatorImpl_DestinatinNotFoundException_) && (INCLUDE_ALL_UINavigatorImpl || defined(INCLUDE_ASUINavigatorImpl_DestinatinNotFoundException))
#define ASUINavigatorImpl_DestinatinNotFoundException_

#define RESTRICT_JavaLangException 1
#define INCLUDE_JavaLangException 1
#include "java/lang/Exception.h"

@class ASUINavigatorImpl;
@class JavaLangBoolean;
@class JavaLangThrowable;
@class NSString;

@interface ASUINavigatorImpl_DestinatinNotFoundException : JavaLangException

#pragma mark Public

- (instancetype)initWithASUINavigatorImpl:(ASUINavigatorImpl *)outer$
                             withNSString:(NSString *)message;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1
                     withBoolean:(bool)arg2
                     withBoolean:(bool)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUINavigatorImpl_DestinatinNotFoundException)

FOUNDATION_EXPORT void ASUINavigatorImpl_DestinatinNotFoundException_initWithASUINavigatorImpl_withNSString_(ASUINavigatorImpl_DestinatinNotFoundException *self, ASUINavigatorImpl *outer$, NSString *message);

FOUNDATION_EXPORT ASUINavigatorImpl_DestinatinNotFoundException *new_ASUINavigatorImpl_DestinatinNotFoundException_initWithASUINavigatorImpl_withNSString_(ASUINavigatorImpl *outer$, NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUINavigatorImpl_DestinatinNotFoundException *create_ASUINavigatorImpl_DestinatinNotFoundException_initWithASUINavigatorImpl_withNSString_(ASUINavigatorImpl *outer$, NSString *message);

J2OBJC_TYPE_LITERAL_HEADER(ASUINavigatorImpl_DestinatinNotFoundException)


#endif

#if !defined (ASUINavigatorImpl_FragmentFactory_) && (INCLUDE_ALL_UINavigatorImpl || defined(INCLUDE_ASUINavigatorImpl_FragmentFactory))
#define ASUINavigatorImpl_FragmentFactory_

@class ASGenericFragment;

@interface ASUINavigatorImpl_FragmentFactory : NSObject

#pragma mark Public

- (instancetype)init;

- (ASGenericFragment *)getFragment;

@end

J2OBJC_EMPTY_STATIC_INIT(ASUINavigatorImpl_FragmentFactory)

FOUNDATION_EXPORT void ASUINavigatorImpl_FragmentFactory_init(ASUINavigatorImpl_FragmentFactory *self);

FOUNDATION_EXPORT ASUINavigatorImpl_FragmentFactory *new_ASUINavigatorImpl_FragmentFactory_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASUINavigatorImpl_FragmentFactory *create_ASUINavigatorImpl_FragmentFactory_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASUINavigatorImpl_FragmentFactory)


#endif

#pragma pop_macro("INCLUDE_ALL_UINavigatorImpl")
