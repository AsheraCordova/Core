//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\widget\IdGenerator.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IdGenerator")
#ifdef RESTRICT_IdGenerator
#define INCLUDE_ALL_IdGenerator 0
#else
#define INCLUDE_ALL_IdGenerator 1
#endif
#undef RESTRICT_IdGenerator

#if !defined (ASIdGenerator_) && (INCLUDE_ALL_IdGenerator || defined(INCLUDE_ASIdGenerator))
#define ASIdGenerator_

@class JavaLangInteger;
@class NSString;

@interface ASIdGenerator : NSObject

#pragma mark Public

- (instancetype)init;

/*!
 @brief Generate a value suitable for use in <code>setId(int)</code>.
 This value will not collide with ID values generated at build time by aapt for R.id.
 @return a generated ID value
 */
+ (int32_t)getIdWithNSString:(NSString *)id_;

+ (NSString *)getNameWithInt:(int32_t)id_;

+ (void)setIdWithNSString:(NSString *)name
                  withInt:(int32_t)id_;

@end

J2OBJC_STATIC_INIT(ASIdGenerator)

FOUNDATION_EXPORT void ASIdGenerator_init(ASIdGenerator *self);

FOUNDATION_EXPORT ASIdGenerator *new_ASIdGenerator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASIdGenerator *create_ASIdGenerator_init(void);

FOUNDATION_EXPORT NSString *ASIdGenerator_getNameWithInt_(int32_t id_);

FOUNDATION_EXPORT void ASIdGenerator_setIdWithNSString_withInt_(NSString *name, int32_t id_);

FOUNDATION_EXPORT int32_t ASIdGenerator_getIdWithNSString_(NSString *id_);

J2OBJC_TYPE_LITERAL_HEADER(ASIdGenerator)

@compatibility_alias ComAsheraWidgetIdGenerator ASIdGenerator;


#endif

#pragma pop_macro("INCLUDE_ALL_IdGenerator")
