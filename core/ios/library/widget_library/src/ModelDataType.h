//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\model\ModelDataType.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ModelDataType")
#ifdef RESTRICT_ModelDataType
#define INCLUDE_ALL_ModelDataType 0
#else
#define INCLUDE_ALL_ModelDataType 1
#endif
#undef RESTRICT_ModelDataType

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ASModelDataType_) && (INCLUDE_ALL_ModelDataType || defined(INCLUDE_ASModelDataType))
#define ASModelDataType_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;
@class NSString;

typedef NS_ENUM(int32_t, ASModelDataType_Enum) {
  ASModelDataType_Enum_map NS_SWIFT_NAME(map) = 0,
  ASModelDataType_Enum_pathmap NS_SWIFT_NAME(pathmap) = 1,
  ASModelDataType_Enum_string NS_SWIFT_NAME(string) = 2,
  ASModelDataType_Enum_list NS_SWIFT_NAME(list) = 3,
  ASModelDataType_Enum_integer NS_SWIFT_NAME(integer) = 4,
  ASModelDataType_Enum_number NS_SWIFT_NAME(number) = 5,
  ASModelDataType_Enum_bool NS_SWIFT_NAME(bool_) = 6,
};

#if J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION
#define ASModelDataType_ORDINAL int32_t
#else
#define ASModelDataType_ORDINAL ASModelDataType_Enum
#endif


@interface ASModelDataType : JavaLangEnum

#pragma mark Public

+ (ASModelDataType *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (ASModelDataType_Enum)toNSEnum;

@property(readonly) ASModelDataType_Enum enumValue;
+ (ASModelDataType *)fromNSEnum:(ASModelDataType_Enum)value;

- (ASModelDataType_ORDINAL)ordinal NS_SWIFT_UNAVAILABLE("Use .enumValue");

- (nullable instancetype)initWithModelDataType:(ASModelDataType_Enum)value;

@end

J2OBJC_STATIC_INIT(ASModelDataType)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ASModelDataType *ASModelDataType_values_[];

inline ASModelDataType *ASModelDataType_get_map(void);
J2OBJC_ENUM_CONSTANT(ASModelDataType, map)

inline ASModelDataType *ASModelDataType_get_pathmap(void);
J2OBJC_ENUM_CONSTANT(ASModelDataType, pathmap)

inline ASModelDataType *ASModelDataType_get_string(void);
J2OBJC_ENUM_CONSTANT(ASModelDataType, string)

inline ASModelDataType *ASModelDataType_get_list(void);
J2OBJC_ENUM_CONSTANT(ASModelDataType, list)

inline ASModelDataType *ASModelDataType_get_integer(void);
J2OBJC_ENUM_CONSTANT(ASModelDataType, integer)

inline ASModelDataType *ASModelDataType_get_number(void);
J2OBJC_ENUM_CONSTANT(ASModelDataType, number)

inline ASModelDataType *ASModelDataType_get_bool(void);
J2OBJC_ENUM_CONSTANT(ASModelDataType, bool)

FOUNDATION_EXPORT IOSObjectArray *ASModelDataType_values(void);

FOUNDATION_EXPORT ASModelDataType *ASModelDataType_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ASModelDataType *ASModelDataType_fromOrdinal(ASModelDataType_ORDINAL ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ASModelDataType)

@compatibility_alias ComAsheraModelModelDataType ASModelDataType;


#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ModelDataType")
