//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\widget_library\src\com\ashera\attributedtext\StyleInterval.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_StyleInterval")
#ifdef RESTRICT_StyleInterval
#define INCLUDE_ALL_StyleInterval 0
#else
#define INCLUDE_ALL_StyleInterval 1
#endif
#undef RESTRICT_StyleInterval

#if !defined (ASStyleInterval_) && (INCLUDE_ALL_StyleInterval || defined(INCLUDE_ASStyleInterval))
#define ASStyleInterval_

#define RESTRICT_Interval 1
#define INCLUDE_ASInterval 1
#include "Interval.h"

@class ASWidgetAttributeMap;
@class IOSObjectArray;
@class JavaLangInteger;
@class NSString;

@interface ASStyleInterval : ASInterval

#pragma mark Public

- (instancetype)initWithInt:(int32_t)start
                    withInt:(int32_t)end
   withASWidgetAttributeMap:(ASWidgetAttributeMap *)style;

- (IOSObjectArray *)getArgs;

- (ASWidgetAttributeMap *)getStyle;

- (ASInterval *)makeNodeWithInt:(int32_t)start
                        withInt:(int32_t)end
              withNSObjectArray:(IOSObjectArray *)arguments;

- (void)setStyleWithASWidgetAttributeMap:(ASWidgetAttributeMap *)style;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithInt:(int32_t)arg0
                    withInt:(int32_t)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASStyleInterval)

FOUNDATION_EXPORT void ASStyleInterval_initWithInt_withInt_withASWidgetAttributeMap_(ASStyleInterval *self, int32_t start, int32_t end, ASWidgetAttributeMap *style);

FOUNDATION_EXPORT ASStyleInterval *new_ASStyleInterval_initWithInt_withInt_withASWidgetAttributeMap_(int32_t start, int32_t end, ASWidgetAttributeMap *style) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASStyleInterval *create_ASStyleInterval_initWithInt_withInt_withASWidgetAttributeMap_(int32_t start, int32_t end, ASWidgetAttributeMap *style);

J2OBJC_TYPE_LITERAL_HEADER(ASStyleInterval)

@compatibility_alias ComAsheraAttributedtextStyleInterval ASStyleInterval;


#endif

#pragma pop_macro("INCLUDE_ALL_StyleInterval")
