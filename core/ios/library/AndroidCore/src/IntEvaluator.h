//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\animation\IntEvaluator.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IntEvaluator")
#ifdef RESTRICT_IntEvaluator
#define INCLUDE_ALL_IntEvaluator 0
#else
#define INCLUDE_ALL_IntEvaluator 1
#endif
#undef RESTRICT_IntEvaluator

#if !defined (ADIntEvaluator_) && (INCLUDE_ALL_IntEvaluator || defined(INCLUDE_ADIntEvaluator))
#define ADIntEvaluator_

#define RESTRICT_TypeEvaluator 1
#define INCLUDE_ADTypeEvaluator 1
#include "TypeEvaluator.h"

@class JavaLangFloat;
@class JavaLangInteger;

/*!
 @brief This evaluator can be used to perform type interpolation between <code>int</code> values.
 */
@interface ADIntEvaluator : NSObject < ADTypeEvaluator >

#pragma mark Public

- (instancetype)init;

/*!
 @brief This function returns the result of linearly interpolating the start and end values, with 
 <code>fraction</code> representing the proportion between the start and end values.The
  calculation is a simple parametric calculation: <code>result = x0 + t * (x1 - x0)</code>,
  where <code>x0</code> is <code>startValue</code>, <code>x1</code> is <code>endValue</code>,
  and <code>t</code> is <code>fraction</code>.
 @param fraction The fraction from the starting to the ending values
 @param startValue The start value; should be of type  <code> int </code>  or
                      <code> Integer </code>
 @param endValue The end value; should be of type  <code> int </code>  or  <code> Integer </code>
 @return A linear interpolation between the start and end values, given the
          <code>fraction</code> parameter.
 */
- (JavaLangInteger *)evaluateWithFloat:(float)fraction
                                withId:(JavaLangInteger *)startValue
                                withId:(JavaLangInteger *)endValue;

@end

J2OBJC_EMPTY_STATIC_INIT(ADIntEvaluator)

FOUNDATION_EXPORT void ADIntEvaluator_init(ADIntEvaluator *self);

FOUNDATION_EXPORT ADIntEvaluator *new_ADIntEvaluator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADIntEvaluator *create_ADIntEvaluator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADIntEvaluator)

@compatibility_alias RAndroidAnimationIntEvaluator ADIntEvaluator;


#endif

#pragma pop_macro("INCLUDE_ALL_IntEvaluator")
