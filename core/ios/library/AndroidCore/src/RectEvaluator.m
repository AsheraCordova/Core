//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\animation\RectEvaluator.java
//

#define J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION 1




#include "J2ObjC_source.h"
#include "Rect.h"
#include "RectEvaluator.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"




#pragma clang diagnostic error "-Wreturn-type"
#pragma clang diagnostic ignored "-Wswitch"


@interface ADRectEvaluator () {
 @public
  /*!
   @brief When null, a new Rect is returned on every evaluate call.When non-null,
  mRect will be modified and returned on every evaluate.
   */
  ADRect *mRect_;
}

@end

J2OBJC_FIELD_SETTER(ADRectEvaluator, mRect_, ADRect *)

@implementation ADRectEvaluator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADRectEvaluator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithADRect:(ADRect *)reuseRect {
  ADRectEvaluator_initWithADRect_(self, reuseRect);
  return self;
}

- (ADRect *)evaluateWithFloat:(float)fraction
                       withId:(ADRect *)startValue
                       withId:(ADRect *)endValue {
  int32_t left = ((ADRect *) nil_chk(startValue))->left_ + JreFpToInt(((((ADRect *) nil_chk(endValue))->left_ - startValue->left_) * fraction));
  int32_t top = startValue->top_ + JreFpToInt(((endValue->top_ - startValue->top_) * fraction));
  int32_t right = startValue->right_ + JreFpToInt(((endValue->right_ - startValue->right_) * fraction));
  int32_t bottom = startValue->bottom_ + JreFpToInt(((endValue->bottom_ - startValue->bottom_) * fraction));
  if (mRect_ == nil) {
    return create_ADRect_initWithInt_withInt_withInt_withInt_(left, top, right, bottom);
  }
  else {
    [mRect_ setWithInt:left withInt:top withInt:right withInt:bottom];
    return mRect_;
  }
}

- (void)dealloc {
  RELEASE_(mRect_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LADRect;", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithADRect:);
  methods[2].selector = @selector(evaluateWithFloat:withId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mRect_", "LADRect;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADRect;", "evaluate", "FLADRect;LADRect;", "Ljava/lang/Object;Lr/android/animation/TypeEvaluator<Lr/android/graphics/Rect;>;" };
  static const J2ObjcClassInfo _ADRectEvaluator = { "RectEvaluator", "r.android.animation", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, 3, -1 };
  return &_ADRectEvaluator;
}

@end

void ADRectEvaluator_init(ADRectEvaluator *self) {
  NSObject_init(self);
}

ADRectEvaluator *new_ADRectEvaluator_init() {
  J2OBJC_NEW_IMPL(ADRectEvaluator, init)
}

ADRectEvaluator *create_ADRectEvaluator_init() {
  J2OBJC_CREATE_IMPL(ADRectEvaluator, init)
}

void ADRectEvaluator_initWithADRect_(ADRectEvaluator *self, ADRect *reuseRect) {
  NSObject_init(self);
  JreStrongAssign(&self->mRect_, reuseRect);
}

ADRectEvaluator *new_ADRectEvaluator_initWithADRect_(ADRect *reuseRect) {
  J2OBJC_NEW_IMPL(ADRectEvaluator, initWithADRect_, reuseRect)
}

ADRectEvaluator *create_ADRectEvaluator_initWithADRect_(ADRect *reuseRect) {
  J2OBJC_CREATE_IMPL(ADRectEvaluator, initWithADRect_, reuseRect)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADRectEvaluator)

J2OBJC_NAME_MAPPING(ADRectEvaluator, "r.android.animation", "AD")
