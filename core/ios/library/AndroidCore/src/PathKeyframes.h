//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\animation\PathKeyframes.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PathKeyframes")
#ifdef RESTRICT_PathKeyframes
#define INCLUDE_ALL_PathKeyframes 0
#else
#define INCLUDE_ALL_PathKeyframes 1
#endif
#undef RESTRICT_PathKeyframes
#ifdef INCLUDE_ADPathKeyframes_IntIKeyframesBase
#define INCLUDE_ADPathKeyframes_SimpleIKeyframes 1
#endif
#ifdef INCLUDE_ADPathKeyframes_FloatIKeyframesBase
#define INCLUDE_ADPathKeyframes_SimpleIKeyframes 1
#endif

#if !defined (ADPathKeyframes_) && (INCLUDE_ALL_PathKeyframes || defined(INCLUDE_ADPathKeyframes))
#define ADPathKeyframes_

#define RESTRICT_IKeyframes 1
#define INCLUDE_ADIKeyframes 1
#include "IKeyframes.h"

@class ADPath;
@class IOSClass;
@class JavaUtilArrayList;
@protocol ADIKeyframes_FloatIKeyframes;
@protocol ADIKeyframes_IntIKeyframes;
@protocol ADTypeEvaluator;

/*!
 @brief PathKeyframes relies on approximating the Path as a series of line segments.
 The line segments are recursively divided until there is less than 1/2 pixel error
  between the lines and the curve. Each point of the line segment is converted
  to a Keyframe and a linear interpolation between IKeyframes creates a good approximation
  of the curve. 
 <p>
  PathKeyframes is optimized to reduce the number of objects created when there are
  many keyframes for a curve. 
 </p>
  <p>
  Typically, the returned type is a PointF, but the individual components can be extracted
  as either an IntIKeyframes or FloatIKeyframes. 
 </p>
 */
@interface ADPathKeyframes : NSObject < ADIKeyframes >

#pragma mark Public

- (instancetype)initWithADPath:(ADPath *)path;

- (instancetype)initWithADPath:(ADPath *)path
                     withFloat:(jfloat)error;

- (id<ADIKeyframes>)java_clone;

/*!
 @brief Returns a FloatIKeyframes for the X component of the Path.
 @return a FloatIKeyframes for the X component of the Path.
 */
- (id<ADIKeyframes_FloatIKeyframes>)createXFloatKeyframes;

/*!
 @brief Returns an IntIKeyframes for the X component of the Path.
 @return an IntIKeyframes for the X component of the Path.
 */
- (id<ADIKeyframes_IntIKeyframes>)createXIntKeyframes;

/*!
 @brief Returns a FloatIKeyframes for the Y component of the Path.
 @return a FloatIKeyframes for the Y component of the Path.
 */
- (id<ADIKeyframes_FloatIKeyframes>)createYFloatKeyframes;

/*!
 @brief Returns an IntKeyframeSet for the Y component of the Path.
 @return an IntKeyframeSet for the Y component of the Path.
 */
- (id<ADIKeyframes_IntIKeyframes>)createYIntKeyframes;

- (JavaUtilArrayList *)getIKeyframes;

- (IOSClass *)getType;

- (id)getValueWithFloat:(jfloat)fraction;

- (void)setEvaluatorWithADTypeEvaluator:(id<ADTypeEvaluator>)evaluator;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ADPathKeyframes)

FOUNDATION_EXPORT void ADPathKeyframes_initWithADPath_(ADPathKeyframes *self, ADPath *path);

FOUNDATION_EXPORT ADPathKeyframes *new_ADPathKeyframes_initWithADPath_(ADPath *path) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADPathKeyframes *create_ADPathKeyframes_initWithADPath_(ADPath *path);

FOUNDATION_EXPORT void ADPathKeyframes_initWithADPath_withFloat_(ADPathKeyframes *self, ADPath *path, jfloat error);

FOUNDATION_EXPORT ADPathKeyframes *new_ADPathKeyframes_initWithADPath_withFloat_(ADPath *path, jfloat error) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADPathKeyframes *create_ADPathKeyframes_initWithADPath_withFloat_(ADPath *path, jfloat error);

J2OBJC_TYPE_LITERAL_HEADER(ADPathKeyframes)

@compatibility_alias RAndroidAnimationPathKeyframes ADPathKeyframes;

#endif

#if !defined (ADPathKeyframes_SimpleIKeyframes_) && (INCLUDE_ALL_PathKeyframes || defined(INCLUDE_ADPathKeyframes_SimpleIKeyframes))
#define ADPathKeyframes_SimpleIKeyframes_

#define RESTRICT_IKeyframes 1
#define INCLUDE_ADIKeyframes 1
#include "IKeyframes.h"

@class JavaUtilArrayList;
@protocol ADTypeEvaluator;

@interface ADPathKeyframes_SimpleIKeyframes : NSObject < ADIKeyframes >

#pragma mark Public

- (id<ADIKeyframes>)java_clone;

- (JavaUtilArrayList *)getIKeyframes;

- (void)setEvaluatorWithADTypeEvaluator:(id<ADTypeEvaluator>)evaluator;

@end

J2OBJC_EMPTY_STATIC_INIT(ADPathKeyframes_SimpleIKeyframes)

J2OBJC_TYPE_LITERAL_HEADER(ADPathKeyframes_SimpleIKeyframes)

#endif

#if !defined (ADPathKeyframes_FloatIKeyframesBase_) && (INCLUDE_ALL_PathKeyframes || defined(INCLUDE_ADPathKeyframes_FloatIKeyframesBase))
#define ADPathKeyframes_FloatIKeyframesBase_

#define RESTRICT_IKeyframes 1
#define INCLUDE_ADIKeyframes_FloatIKeyframes 1
#include "IKeyframes.h"

@class IOSClass;
@class JavaUtilArrayList;
@protocol ADIKeyframes;

@interface ADPathKeyframes_FloatIKeyframesBase : ADPathKeyframes_SimpleIKeyframes < ADIKeyframes_FloatIKeyframes >

#pragma mark Public

- (JavaUtilArrayList *)getIKeyframes;

- (IOSClass *)getType;

- (id)getValueWithFloat:(jfloat)fraction;

- (id<ADIKeyframes>)java_clone;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ADPathKeyframes_FloatIKeyframesBase)

FOUNDATION_EXPORT void ADPathKeyframes_FloatIKeyframesBase_init(ADPathKeyframes_FloatIKeyframesBase *self);

J2OBJC_TYPE_LITERAL_HEADER(ADPathKeyframes_FloatIKeyframesBase)

#endif

#if !defined (ADPathKeyframes_IntIKeyframesBase_) && (INCLUDE_ALL_PathKeyframes || defined(INCLUDE_ADPathKeyframes_IntIKeyframesBase))
#define ADPathKeyframes_IntIKeyframesBase_

#define RESTRICT_IKeyframes 1
#define INCLUDE_ADIKeyframes_IntIKeyframes 1
#include "IKeyframes.h"

@class IOSClass;
@class JavaUtilArrayList;
@protocol ADIKeyframes;

@interface ADPathKeyframes_IntIKeyframesBase : ADPathKeyframes_SimpleIKeyframes < ADIKeyframes_IntIKeyframes >

#pragma mark Public

- (JavaUtilArrayList *)getIKeyframes;

- (IOSClass *)getType;

- (id)getValueWithFloat:(jfloat)fraction;

- (id<ADIKeyframes>)java_clone;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ADPathKeyframes_IntIKeyframesBase)

FOUNDATION_EXPORT void ADPathKeyframes_IntIKeyframesBase_init(ADPathKeyframes_IntIKeyframesBase *self);

J2OBJC_TYPE_LITERAL_HEADER(ADPathKeyframes_IntIKeyframesBase)

#endif

#pragma pop_macro("INCLUDE_ALL_PathKeyframes")
