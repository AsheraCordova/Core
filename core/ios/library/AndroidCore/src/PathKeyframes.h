//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\animation\PathKeyframes.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PathKeyframes")
#ifdef RESTRICT_PathKeyframes
#define INCLUDE_ALL_PathKeyframes 0
#else
#define INCLUDE_ALL_PathKeyframes 1
#endif
#undef RESTRICT_PathKeyframes
#ifdef INCLUDE_ADPathKeyframes_IntKeyframesBase
#define INCLUDE_ADPathKeyframes_SimpleKeyframes 1
#endif
#ifdef INCLUDE_ADPathKeyframes_FloatKeyframesBase
#define INCLUDE_ADPathKeyframes_SimpleKeyframes 1
#endif

#if !defined (ADPathKeyframes_) && (INCLUDE_ALL_PathKeyframes || defined(INCLUDE_ADPathKeyframes))
#define ADPathKeyframes_

#define RESTRICT_Keyframes 1
#define INCLUDE_ADKeyframes 1
#include "Keyframes.h"

@class ADPath;
@class IOSClass;
@class JavaUtilArrayList;
@protocol ADKeyframes_FloatKeyframes;
@protocol ADKeyframes_IntKeyframes;
@protocol ADTypeEvaluator;

/*!
 @brief PathKeyframes relies on approximating the Path as a series of line segments.
 The line segments are recursively divided until there is less than 1/2 pixel error
  between the lines and the curve. Each point of the line segment is converted
  to a Keyframe and a linear interpolation between Keyframes creates a good approximation
  of the curve. 
 <p>
  PathKeyframes is optimized to reduce the number of objects created when there are
  many keyframes for a curve. 
 </p>
  <p>
  Typically, the returned type is a PointF, but the individual components can be extracted
  as either an IntKeyframes or FloatKeyframes. 
 </p>
 */
@interface ADPathKeyframes : NSObject < ADKeyframes >

#pragma mark Public

- (instancetype)initWithADPath:(ADPath *)path;

- (instancetype)initWithADPath:(ADPath *)path
                     withFloat:(jfloat)error;

- (id<ADKeyframes>)java_clone;

/*!
 @brief Returns a FloatKeyframes for the X component of the Path.
 @return a FloatKeyframes for the X component of the Path.
 */
- (id<ADKeyframes_FloatKeyframes>)createXFloatKeyframes;

/*!
 @brief Returns an IntKeyframes for the X component of the Path.
 @return an IntKeyframes for the X component of the Path.
 */
- (id<ADKeyframes_IntKeyframes>)createXIntKeyframes;

/*!
 @brief Returns a FloatKeyframes for the Y component of the Path.
 @return a FloatKeyframes for the Y component of the Path.
 */
- (id<ADKeyframes_FloatKeyframes>)createYFloatKeyframes;

/*!
 @brief Returns an IntKeyframeSet for the Y component of the Path.
 @return an IntKeyframeSet for the Y component of the Path.
 */
- (id<ADKeyframes_IntKeyframes>)createYIntKeyframes;

- (JavaUtilArrayList *)getKeyframes;

- (IOSClass *)getType;

- (id)getValueWithFloat:(jfloat)fraction;

- (void)setEvaluatorWithADTypeEvaluator:(id<ADTypeEvaluator>)evaluator;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ADPathKeyframes)

FOUNDATION_EXPORT void ADPathKeyframes_initWithADPath_(ADPathKeyframes *self, ADPath *path);

FOUNDATION_EXPORT ADPathKeyframes *new_ADPathKeyframes_initWithADPath_(ADPath *path) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADPathKeyframes *create_ADPathKeyframes_initWithADPath_(ADPath *path);

FOUNDATION_EXPORT void ADPathKeyframes_initWithADPath_withFloat_(ADPathKeyframes *self, ADPath *path, jfloat error);

FOUNDATION_EXPORT ADPathKeyframes *new_ADPathKeyframes_initWithADPath_withFloat_(ADPath *path, jfloat error) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADPathKeyframes *create_ADPathKeyframes_initWithADPath_withFloat_(ADPath *path, jfloat error);

J2OBJC_TYPE_LITERAL_HEADER(ADPathKeyframes)

@compatibility_alias RAndroidAnimationPathKeyframes ADPathKeyframes;

#endif

#if !defined (ADPathKeyframes_SimpleKeyframes_) && (INCLUDE_ALL_PathKeyframes || defined(INCLUDE_ADPathKeyframes_SimpleKeyframes))
#define ADPathKeyframes_SimpleKeyframes_

#define RESTRICT_Keyframes 1
#define INCLUDE_ADKeyframes 1
#include "Keyframes.h"

@class JavaUtilArrayList;
@protocol ADTypeEvaluator;

@interface ADPathKeyframes_SimpleKeyframes : NSObject < ADKeyframes >

#pragma mark Public

- (id<ADKeyframes>)java_clone;

- (JavaUtilArrayList *)getKeyframes;

- (void)setEvaluatorWithADTypeEvaluator:(id<ADTypeEvaluator>)evaluator;

@end

J2OBJC_EMPTY_STATIC_INIT(ADPathKeyframes_SimpleKeyframes)

J2OBJC_TYPE_LITERAL_HEADER(ADPathKeyframes_SimpleKeyframes)

#endif

#if !defined (ADPathKeyframes_FloatKeyframesBase_) && (INCLUDE_ALL_PathKeyframes || defined(INCLUDE_ADPathKeyframes_FloatKeyframesBase))
#define ADPathKeyframes_FloatKeyframesBase_

#define RESTRICT_Keyframes 1
#define INCLUDE_ADKeyframes_FloatKeyframes 1
#include "Keyframes.h"

@class IOSClass;
@class JavaUtilArrayList;
@protocol ADKeyframes;

@interface ADPathKeyframes_FloatKeyframesBase : ADPathKeyframes_SimpleKeyframes < ADKeyframes_FloatKeyframes >

#pragma mark Public

- (JavaUtilArrayList *)getKeyframes;

- (IOSClass *)getType;

- (id)getValueWithFloat:(jfloat)fraction;

- (id<ADKeyframes>)java_clone;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ADPathKeyframes_FloatKeyframesBase)

FOUNDATION_EXPORT void ADPathKeyframes_FloatKeyframesBase_init(ADPathKeyframes_FloatKeyframesBase *self);

J2OBJC_TYPE_LITERAL_HEADER(ADPathKeyframes_FloatKeyframesBase)

#endif

#if !defined (ADPathKeyframes_IntKeyframesBase_) && (INCLUDE_ALL_PathKeyframes || defined(INCLUDE_ADPathKeyframes_IntKeyframesBase))
#define ADPathKeyframes_IntKeyframesBase_

#define RESTRICT_Keyframes 1
#define INCLUDE_ADKeyframes_IntKeyframes 1
#include "Keyframes.h"

@class IOSClass;
@class JavaUtilArrayList;
@protocol ADKeyframes;

@interface ADPathKeyframes_IntKeyframesBase : ADPathKeyframes_SimpleKeyframes < ADKeyframes_IntKeyframes >

#pragma mark Public

- (JavaUtilArrayList *)getKeyframes;

- (IOSClass *)getType;

- (id)getValueWithFloat:(jfloat)fraction;

- (id<ADKeyframes>)java_clone;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ADPathKeyframes_IntKeyframesBase)

FOUNDATION_EXPORT void ADPathKeyframes_IntKeyframesBase_init(ADPathKeyframes_IntKeyframesBase *self);

J2OBJC_TYPE_LITERAL_HEADER(ADPathKeyframes_IntKeyframesBase)

#endif

#pragma pop_macro("INCLUDE_ALL_PathKeyframes")
