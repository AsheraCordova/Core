//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\animation\FloatEvaluator.java
//

#include "FloatEvaluator.h"
#include "J2ObjC_source.h"
#include "java/lang/Float.h"


@implementation ADFloatEvaluator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADFloatEvaluator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangFloat *)evaluateWithFloat:(jfloat)fraction
                              withId:(NSNumber *)startValue
                              withId:(NSNumber *)endValue {
  jfloat startFloat = [((NSNumber *) nil_chk(startValue)) floatValue];
  return JavaLangFloat_valueOfWithFloat_(startFloat + fraction * ([((NSNumber *) nil_chk(endValue)) floatValue] - startFloat));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangFloat;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(evaluateWithFloat:withId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "evaluate", "FLNSNumber;LNSNumber;", "Ljava/lang/Object;Lr/android/animation/TypeEvaluator<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _ADFloatEvaluator = { "FloatEvaluator", "r.android.animation", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, 2, -1 };
  return &_ADFloatEvaluator;
}

@end

void ADFloatEvaluator_init(ADFloatEvaluator *self) {
  NSObject_init(self);
}

ADFloatEvaluator *new_ADFloatEvaluator_init() {
  J2OBJC_NEW_IMPL(ADFloatEvaluator, init)
}

ADFloatEvaluator *create_ADFloatEvaluator_init() {
  J2OBJC_CREATE_IMPL(ADFloatEvaluator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADFloatEvaluator)
