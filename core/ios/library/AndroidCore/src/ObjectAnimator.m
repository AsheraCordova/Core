//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\animation\ObjectAnimator.java
//

#define J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION 1




#include "AnimationHandler.h"
#include "Animator.h"
#include "ArgbEvaluator.h"
#include "IKeyframes.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "KeyframeSet.h"
#include "ObjectAnimator.h"
#include "Path.h"
#include "PathKeyframes.h"
#include "Property.h"
#include "PropertyValuesHolder.h"
#include "TypeConverter.h"
#include "TypeEvaluator.h"
#include "ValueAnimator.h"
#include "View.h"
#include "java/lang/Boolean.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/SafeVarargs.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/ref/WeakReference.h"
#include "java/util/HashMap.h"


@class NSString;


#pragma clang diagnostic error "-Wreturn-type"
#pragma clang diagnostic ignored "-Wswitch"


@interface ADObjectAnimator () {
 @public
  /*!
   @brief A weak reference to the target object on which the property exists, set
  in the constructor.We'll cancel the animation if this goes away.
   */
  JavaLangRefWeakReference *mTarget_;
  NSString *mPropertyName_;
  ADProperty *mProperty_;
  bool mAutoCancel_;
}

/*!
 @brief Private utility constructor that initializes the target object and name of the
  property being animated.
 @param target The object whose property is to be animated. This object should  have a public method on it called 
  <code> setName() </code> , where  <code> name </code>  is
   the value of the  <code> propertyName </code>  parameter.
 @param propertyName The name of the property being animated.
 */
- (instancetype)initWithId:(id)target
              withNSString:(NSString *)propertyName;

/*!
 @brief Private utility constructor that initializes the target object and property being animated.
 @param target The object whose property is to be animated.
 @param property The property being animated.
 */
- (instancetype)initWithId:(id)target
            withADProperty:(ADProperty *)property;

- (bool)hasSameTargetAndPropertiesWithADAnimator:(ADAnimator *)anim;

@end

J2OBJC_FIELD_SETTER(ADObjectAnimator, mTarget_, JavaLangRefWeakReference *)
J2OBJC_FIELD_SETTER(ADObjectAnimator, mPropertyName_, NSString *)
J2OBJC_FIELD_SETTER(ADObjectAnimator, mProperty_, ADProperty *)

inline NSString *ADObjectAnimator_get_LOG_TAG(void);
static NSString *ADObjectAnimator_LOG_TAG = @"ObjectAnimator";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADObjectAnimator, LOG_TAG, NSString *)

inline bool ADObjectAnimator_get_DBG(void);
#define ADObjectAnimator_DBG false
J2OBJC_STATIC_FIELD_CONSTANT(ADObjectAnimator, DBG, bool)

__attribute__((unused)) static void ADObjectAnimator_initWithId_withNSString_(ADObjectAnimator *self, id target, NSString *propertyName);

__attribute__((unused)) static ADObjectAnimator *new_ADObjectAnimator_initWithId_withNSString_(id target, NSString *propertyName) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADObjectAnimator *create_ADObjectAnimator_initWithId_withNSString_(id target, NSString *propertyName);

__attribute__((unused)) static void ADObjectAnimator_initWithId_withADProperty_(ADObjectAnimator *self, id target, ADProperty *property);

__attribute__((unused)) static ADObjectAnimator *new_ADObjectAnimator_initWithId_withADProperty_(id target, ADProperty *property) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADObjectAnimator *create_ADObjectAnimator_initWithId_withADProperty_(id target, ADProperty *property);

__attribute__((unused)) static bool ADObjectAnimator_hasSameTargetAndPropertiesWithADAnimator_(ADObjectAnimator *self, ADAnimator *anim);

__attribute__((unused)) static IOSObjectArray *ADObjectAnimator__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ADObjectAnimator__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *ADObjectAnimator__Annotations$2(void);

__attribute__((unused)) static IOSObjectArray *ADObjectAnimator__Annotations$3(void);

@implementation ADObjectAnimator

- (void)setPropertyNameWithNSString:(NSString *)propertyName {
  if (mValues_ != nil) {
    ADPropertyValuesHolder *valuesHolder = IOSObjectArray_Get(mValues_, 0);
    NSString *oldName = JreRetainedLocalValue([((ADPropertyValuesHolder *) nil_chk(valuesHolder)) getPropertyName]);
    [valuesHolder setPropertyNameWithNSString:propertyName];
    [((JavaUtilHashMap *) nil_chk(mValuesMap_)) removeWithId:oldName];
    [((JavaUtilHashMap *) nil_chk(mValuesMap_)) putWithId:propertyName withId:valuesHolder];
  }
  JreStrongAssign(&mPropertyName_, propertyName);
  mInitialized_ = false;
}

- (void)setPropertyWithADProperty:(ADProperty *)property {
  if (mValues_ != nil) {
    ADPropertyValuesHolder *valuesHolder = IOSObjectArray_Get(mValues_, 0);
    NSString *oldName = JreRetainedLocalValue([((ADPropertyValuesHolder *) nil_chk(valuesHolder)) getPropertyName]);
    [valuesHolder setPropertyWithADProperty:property];
    [((JavaUtilHashMap *) nil_chk(mValuesMap_)) removeWithId:oldName];
    [((JavaUtilHashMap *) nil_chk(mValuesMap_)) putWithId:mPropertyName_ withId:valuesHolder];
  }
  if (mProperty_ != nil) {
    JreStrongAssign(&mPropertyName_, [((ADProperty *) nil_chk(property)) getName]);
  }
  JreStrongAssign(&mProperty_, property);
  mInitialized_ = false;
}

- (NSString *)getPropertyName {
  NSString *propertyName = nil;
  if (mPropertyName_ != nil) {
    propertyName = mPropertyName_;
  }
  else if (mProperty_ != nil) {
    propertyName = [mProperty_ getName];
  }
  else if (mValues_ != nil && mValues_->size_ > 0) {
    for (int32_t i = 0; i < ((IOSObjectArray *) nil_chk(mValues_))->size_; ++i) {
      if (i == 0) {
        propertyName = @"";
      }
      else {
        JreStrAppend(&propertyName, "$", @",");
      }
      JreStrAppend(&propertyName, "$", [((ADPropertyValuesHolder *) nil_chk(IOSObjectArray_Get(mValues_, i))) getPropertyName]);
    }
  }
  return propertyName;
}

- (NSString *)getNameForTrace {
  return JreStrcat("$$", @"animator:", [self getPropertyName]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADObjectAnimator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithId:(id)target
              withNSString:(NSString *)propertyName {
  ADObjectAnimator_initWithId_withNSString_(self, target, propertyName);
  return self;
}

- (instancetype)initWithId:(id)target
            withADProperty:(ADProperty *)property {
  ADObjectAnimator_initWithId_withADProperty_(self, target, property);
  return self;
}

+ (ADObjectAnimator *)ofIntWithId:(id)target
                     withNSString:(NSString *)propertyName
                     withIntArray:(IOSIntArray *)values {
  return ADObjectAnimator_ofIntWithId_withNSString_withIntArray_(target, propertyName, values);
}

+ (ADObjectAnimator *)ofIntWithId:(id)target
                     withNSString:(NSString *)xPropertyName
                     withNSString:(NSString *)yPropertyName
                       withADPath:(ADPath *)path {
  return ADObjectAnimator_ofIntWithId_withNSString_withNSString_withADPath_(target, xPropertyName, yPropertyName, path);
}

+ (ADObjectAnimator *)ofIntWithId:(id)target
                   withADProperty:(ADProperty *)property
                     withIntArray:(IOSIntArray *)values {
  return ADObjectAnimator_ofIntWithId_withADProperty_withIntArray_(target, property, values);
}

+ (ADObjectAnimator *)ofIntWithId:(id)target
                   withADProperty:(ADProperty *)xProperty
                   withADProperty:(ADProperty *)yProperty
                       withADPath:(ADPath *)path {
  return ADObjectAnimator_ofIntWithId_withADProperty_withADProperty_withADPath_(target, xProperty, yProperty, path);
}

+ (ADObjectAnimator *)ofMultiIntWithId:(id)target
                          withNSString:(NSString *)propertyName
                         withIntArray2:(IOSObjectArray *)values {
  return ADObjectAnimator_ofMultiIntWithId_withNSString_withIntArray2_(target, propertyName, values);
}

+ (ADObjectAnimator *)ofMultiIntWithId:(id)target
                          withNSString:(NSString *)propertyName
                            withADPath:(ADPath *)path {
  return ADObjectAnimator_ofMultiIntWithId_withNSString_withADPath_(target, propertyName, path);
}

+ (ADObjectAnimator *)ofMultiIntWithId:(id)target
                          withNSString:(NSString *)propertyName
                   withADTypeConverter:(ADTypeConverter *)converter
                   withADTypeEvaluator:(id<ADTypeEvaluator>)evaluator
                     withNSObjectArray:(IOSObjectArray *)values {
  return ADObjectAnimator_ofMultiIntWithId_withNSString_withADTypeConverter_withADTypeEvaluator_withNSObjectArray_(target, propertyName, converter, evaluator, values);
}

+ (ADObjectAnimator *)ofArgbWithId:(id)target
                      withNSString:(NSString *)propertyName
                      withIntArray:(IOSIntArray *)values {
  return ADObjectAnimator_ofArgbWithId_withNSString_withIntArray_(target, propertyName, values);
}

+ (ADObjectAnimator *)ofArgbWithId:(id)target
                    withADProperty:(ADProperty *)property
                      withIntArray:(IOSIntArray *)values {
  return ADObjectAnimator_ofArgbWithId_withADProperty_withIntArray_(target, property, values);
}

+ (ADObjectAnimator *)ofFloatWithId:(id)target
                       withNSString:(NSString *)propertyName
                     withFloatArray:(IOSFloatArray *)values {
  return ADObjectAnimator_ofFloatWithId_withNSString_withFloatArray_(target, propertyName, values);
}

+ (ADObjectAnimator *)ofFloatWithId:(id)target
                       withNSString:(NSString *)xPropertyName
                       withNSString:(NSString *)yPropertyName
                         withADPath:(ADPath *)path {
  return ADObjectAnimator_ofFloatWithId_withNSString_withNSString_withADPath_(target, xPropertyName, yPropertyName, path);
}

+ (ADObjectAnimator *)ofFloatWithId:(id)target
                     withADProperty:(ADProperty *)property
                     withFloatArray:(IOSFloatArray *)values {
  return ADObjectAnimator_ofFloatWithId_withADProperty_withFloatArray_(target, property, values);
}

+ (ADObjectAnimator *)ofFloatWithId:(id)target
                     withADProperty:(ADProperty *)xProperty
                     withADProperty:(ADProperty *)yProperty
                         withADPath:(ADPath *)path {
  return ADObjectAnimator_ofFloatWithId_withADProperty_withADProperty_withADPath_(target, xProperty, yProperty, path);
}

+ (ADObjectAnimator *)ofMultiFloatWithId:(id)target
                            withNSString:(NSString *)propertyName
                         withFloatArray2:(IOSObjectArray *)values {
  return ADObjectAnimator_ofMultiFloatWithId_withNSString_withFloatArray2_(target, propertyName, values);
}

+ (ADObjectAnimator *)ofMultiFloatWithId:(id)target
                            withNSString:(NSString *)propertyName
                              withADPath:(ADPath *)path {
  return ADObjectAnimator_ofMultiFloatWithId_withNSString_withADPath_(target, propertyName, path);
}

+ (ADObjectAnimator *)ofMultiFloatWithId:(id)target
                            withNSString:(NSString *)propertyName
                     withADTypeConverter:(ADTypeConverter *)converter
                     withADTypeEvaluator:(id<ADTypeEvaluator>)evaluator
                       withNSObjectArray:(IOSObjectArray *)values {
  return ADObjectAnimator_ofMultiFloatWithId_withNSString_withADTypeConverter_withADTypeEvaluator_withNSObjectArray_(target, propertyName, converter, evaluator, values);
}

+ (ADObjectAnimator *)ofObjectWithId:(id)target
                        withNSString:(NSString *)propertyName
                 withADTypeEvaluator:(id<ADTypeEvaluator>)evaluator
                   withNSObjectArray:(IOSObjectArray *)values {
  return ADObjectAnimator_ofObjectWithId_withNSString_withADTypeEvaluator_withNSObjectArray_(target, propertyName, evaluator, values);
}

+ (ADObjectAnimator *)ofObjectWithId:(id)target
                        withNSString:(NSString *)propertyName
                 withADTypeConverter:(ADTypeConverter *)converter
                          withADPath:(ADPath *)path {
  return ADObjectAnimator_ofObjectWithId_withNSString_withADTypeConverter_withADPath_(target, propertyName, converter, path);
}

+ (ADObjectAnimator *)ofObjectWithId:(id)target
                      withADProperty:(ADProperty *)property
                 withADTypeEvaluator:(id<ADTypeEvaluator>)evaluator
                   withNSObjectArray:(IOSObjectArray *)values {
  return ADObjectAnimator_ofObjectWithId_withADProperty_withADTypeEvaluator_withNSObjectArray_(target, property, evaluator, values);
}

+ (ADObjectAnimator *)ofObjectWithId:(id)target
                      withADProperty:(ADProperty *)property
                 withADTypeConverter:(ADTypeConverter *)converter
                 withADTypeEvaluator:(id<ADTypeEvaluator>)evaluator
                   withNSObjectArray:(IOSObjectArray *)values {
  return ADObjectAnimator_ofObjectWithId_withADProperty_withADTypeConverter_withADTypeEvaluator_withNSObjectArray_(target, property, converter, evaluator, values);
}

+ (ADObjectAnimator *)ofObjectWithId:(id)target
                      withADProperty:(ADProperty *)property
                 withADTypeConverter:(ADTypeConverter *)converter
                          withADPath:(ADPath *)path {
  return ADObjectAnimator_ofObjectWithId_withADProperty_withADTypeConverter_withADPath_(target, property, converter, path);
}

+ (ADObjectAnimator *)ofPropertyValuesHolderWithId:(id)target
                   withADPropertyValuesHolderArray:(IOSObjectArray *)values {
  return ADObjectAnimator_ofPropertyValuesHolderWithId_withADPropertyValuesHolderArray_(target, values);
}

- (void)setIntValuesWithIntArray:(IOSIntArray *)values {
  if (mValues_ == nil || mValues_->size_ == 0) {
    if (mProperty_ != nil) {
      [self setValuesWithADPropertyValuesHolderArray:[IOSObjectArray arrayWithObjects:(id[]){ ADPropertyValuesHolder_ofIntWithADProperty_withIntArray_(mProperty_, values) } count:1 type:ADPropertyValuesHolder_class_()]];
    }
    else {
      [self setValuesWithADPropertyValuesHolderArray:[IOSObjectArray arrayWithObjects:(id[]){ ADPropertyValuesHolder_ofIntWithNSString_withIntArray_(mPropertyName_, values) } count:1 type:ADPropertyValuesHolder_class_()]];
    }
  }
  else {
    [super setIntValuesWithIntArray:values];
  }
}

- (void)setFloatValuesWithFloatArray:(IOSFloatArray *)values {
  if (mValues_ == nil || mValues_->size_ == 0) {
    if (mProperty_ != nil) {
      [self setValuesWithADPropertyValuesHolderArray:[IOSObjectArray arrayWithObjects:(id[]){ ADPropertyValuesHolder_ofFloatWithADProperty_withFloatArray_(mProperty_, values) } count:1 type:ADPropertyValuesHolder_class_()]];
    }
    else {
      [self setValuesWithADPropertyValuesHolderArray:[IOSObjectArray arrayWithObjects:(id[]){ ADPropertyValuesHolder_ofFloatWithNSString_withFloatArray_(mPropertyName_, values) } count:1 type:ADPropertyValuesHolder_class_()]];
    }
  }
  else {
    [super setFloatValuesWithFloatArray:values];
  }
}

- (void)setObjectValuesWithNSObjectArray:(IOSObjectArray *)values {
  if (mValues_ == nil || mValues_->size_ == 0) {
    if (mProperty_ != nil) {
      [self setValuesWithADPropertyValuesHolderArray:[IOSObjectArray arrayWithObjects:(id[]){ ADPropertyValuesHolder_ofObjectWithADProperty_withADTypeEvaluator_withNSObjectArray_(mProperty_, nil, values) } count:1 type:ADPropertyValuesHolder_class_()]];
    }
    else {
      [self setValuesWithADPropertyValuesHolderArray:[IOSObjectArray arrayWithObjects:(id[]){ ADPropertyValuesHolder_ofObjectWithNSString_withADTypeEvaluator_withNSObjectArray_(mPropertyName_, nil, values) } count:1 type:ADPropertyValuesHolder_class_()]];
    }
  }
  else {
    [super setObjectValuesWithNSObjectArray:values];
  }
}

- (void)setAutoCancelWithBoolean:(bool)cancel {
  mAutoCancel_ = cancel;
}

- (bool)hasSameTargetAndPropertiesWithADAnimator:(ADAnimator *)anim {
  return ADObjectAnimator_hasSameTargetAndPropertiesWithADAnimator_(self, anim);
}

- (void)start {
  [((ADAnimationHandler *) nil_chk(ADAnimationHandler_getInstance())) autoCancelBasedOnWithADObjectAnimator:self];
  [super start];
}

- (bool)shouldAutoCancelWithADAnimationHandler_AnimationFrameCallback:(id<ADAnimationHandler_AnimationFrameCallback>)anim {
  if (anim == nil) {
    return false;
  }
  if ([anim isKindOfClass:[ADObjectAnimator class]]) {
    ADObjectAnimator *objAnim = (ADObjectAnimator *) anim;
    if (objAnim->mAutoCancel_ && ADObjectAnimator_hasSameTargetAndPropertiesWithADAnimator_(self, objAnim)) {
      return true;
    }
  }
  return false;
}

- (void)initAnimation {
  if (!mInitialized_) {
    id target = [self getTarget];
    if (target != nil) {
      int32_t numValues = ((IOSObjectArray *) nil_chk(mValues_))->size_;
      for (int32_t i = 0; i < numValues; ++i) {
        [((ADPropertyValuesHolder *) nil_chk(IOSObjectArray_Get(nil_chk(mValues_), i))) setupSetterAndGetterWithId:target];
      }
    }
    [super initAnimation];
  }
}

- (ADObjectAnimator *)setDurationWithLong:(int64_t)duration {
  [super setDurationWithLong:duration];
  return self;
}

- (id)getTarget {
  return mTarget_ == nil ? nil : [mTarget_ get];
}

- (void)setTargetWithId:(id)target {
  id oldTarget = [self getTarget];
  if (!JreObjectEqualsEquals(oldTarget, target)) {
    if ([self isStarted]) {
      [self cancel];
    }
    JreStrongAssign(&mTarget_, target == nil ? nil : create_JavaLangRefWeakReference_initWithId_(target));
    mInitialized_ = false;
  }
}

- (void)setupStartValues {
  [self initAnimation];
  id target = [self getTarget];
  if (target != nil) {
    int32_t numValues = ((IOSObjectArray *) nil_chk(mValues_))->size_;
    for (int32_t i = 0; i < numValues; ++i) {
      [((ADPropertyValuesHolder *) nil_chk(IOSObjectArray_Get(nil_chk(mValues_), i))) setupStartValueWithId:target];
    }
  }
}

- (void)setupEndValues {
  [self initAnimation];
  id target = [self getTarget];
  if (target != nil) {
    int32_t numValues = ((IOSObjectArray *) nil_chk(mValues_))->size_;
    for (int32_t i = 0; i < numValues; ++i) {
      [((ADPropertyValuesHolder *) nil_chk(IOSObjectArray_Get(nil_chk(mValues_), i))) setupEndValueWithId:target];
    }
  }
}

- (void)animateValueWithFloat:(float)fraction {
  id target = [self getTarget];
  if (mTarget_ != nil && target == nil) {
    [self cancel];
    return;
  }
  [super animateValueWithFloat:fraction];
  @try {
    if ([target isKindOfClass:[ADView class]]) {
      [((ADView *) nil_chk(((ADView *) target))) setMyAttributeWithNSString:@"swtRedraw" withId:JavaLangBoolean_valueOfWithBoolean_(false)];
    }
    int32_t numValues = ((IOSObjectArray *) nil_chk(mValues_))->size_;
    for (int32_t i = 0; i < numValues; ++i) {
      [((ADPropertyValuesHolder *) nil_chk(IOSObjectArray_Get(nil_chk(mValues_), i))) setAnimatedValueWithId:target];
    }
  }
  @finally {
    if ([target isKindOfClass:[ADView class]]) {
      [((ADView *) nil_chk(((ADView *) target))) setMyAttributeWithNSString:@"swtRedraw" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
    }
  }
}

- (bool)isInitialized {
  return mInitialized_;
}

- (ADObjectAnimator *)java_clone {
  ADObjectAnimator *anim = (ADObjectAnimator *) cast_chk([super java_clone], [ADObjectAnimator class]);
  return anim;
}

- (NSString *)description {
  NSString *returnVal = JreStrcat("$$$@", @"ObjectAnimator@", JavaLangInteger_toHexStringWithInt_(((int32_t) [self hash])), @", target ", [self getTarget]);
  if (mValues_ != nil) {
    for (int32_t i = 0; i < ((IOSObjectArray *) nil_chk(mValues_))->size_; ++i) {
      JreStrAppend(&returnVal, "$$", @"\n    ", [((ADPropertyValuesHolder *) nil_chk(IOSObjectArray_Get(mValues_, i))) description]);
    }
  }
  return returnVal;
}

- (void)dealloc {
  RELEASE_(mTarget_);
  RELEASE_(mPropertyName_);
  RELEASE_(mProperty_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 5, -1, 6, -1, -1 },
    { NULL, "LADObjectAnimator;", 0x89, 7, 8, -1, -1, -1, -1 },
    { NULL, "LADObjectAnimator;", 0x9, 7, 9, -1, -1, -1, -1 },
    { NULL, "LADObjectAnimator;", 0x89, 7, 10, -1, 11, -1, -1 },
    { NULL, "LADObjectAnimator;", 0x9, 7, 12, -1, 13, -1, -1 },
    { NULL, "LADObjectAnimator;", 0x9, 14, 15, -1, -1, -1, -1 },
    { NULL, "LADObjectAnimator;", 0x9, 14, 16, -1, -1, -1, -1 },
    { NULL, "LADObjectAnimator;", 0x89, 14, 17, -1, 18, 19, -1 },
    { NULL, "LADObjectAnimator;", 0x89, 20, 8, -1, -1, -1, -1 },
    { NULL, "LADObjectAnimator;", 0x89, 20, 10, -1, 11, -1, -1 },
    { NULL, "LADObjectAnimator;", 0x89, 21, 22, -1, -1, -1, -1 },
    { NULL, "LADObjectAnimator;", 0x9, 21, 9, -1, -1, -1, -1 },
    { NULL, "LADObjectAnimator;", 0x89, 21, 23, -1, 24, -1, -1 },
    { NULL, "LADObjectAnimator;", 0x9, 21, 12, -1, 25, -1, -1 },
    { NULL, "LADObjectAnimator;", 0x9, 26, 27, -1, -1, -1, -1 },
    { NULL, "LADObjectAnimator;", 0x9, 26, 16, -1, -1, -1, -1 },
    { NULL, "LADObjectAnimator;", 0x89, 26, 17, -1, 28, 29, -1 },
    { NULL, "LADObjectAnimator;", 0x89, 30, 31, -1, -1, -1, -1 },
    { NULL, "LADObjectAnimator;", 0x9, 30, 32, -1, 33, -1, -1 },
    { NULL, "LADObjectAnimator;", 0x89, 30, 34, -1, 35, 36, -1 },
    { NULL, "LADObjectAnimator;", 0x89, 30, 37, -1, 38, 39, -1 },
    { NULL, "LADObjectAnimator;", 0x9, 30, 40, -1, 41, -1, -1 },
    { NULL, "LADObjectAnimator;", 0x89, 42, 43, -1, -1, -1, -1 },
    { NULL, "V", 0x81, 44, 45, -1, -1, -1, -1 },
    { NULL, "V", 0x81, 46, 47, -1, -1, -1, -1 },
    { NULL, "V", 0x81, 48, 49, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 50, 51, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 52, 53, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 54, 55, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADObjectAnimator;", 0x1, 56, 57, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 58, 59, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 60, 61, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADObjectAnimator;", 0x1, 62, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 63, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(setPropertyNameWithNSString:);
  methods[1].selector = @selector(setPropertyWithADProperty:);
  methods[2].selector = @selector(getPropertyName);
  methods[3].selector = @selector(getNameForTrace);
  methods[4].selector = @selector(init);
  methods[5].selector = @selector(initWithId:withNSString:);
  methods[6].selector = @selector(initWithId:withADProperty:);
  methods[7].selector = @selector(ofIntWithId:withNSString:withIntArray:);
  methods[8].selector = @selector(ofIntWithId:withNSString:withNSString:withADPath:);
  methods[9].selector = @selector(ofIntWithId:withADProperty:withIntArray:);
  methods[10].selector = @selector(ofIntWithId:withADProperty:withADProperty:withADPath:);
  methods[11].selector = @selector(ofMultiIntWithId:withNSString:withIntArray2:);
  methods[12].selector = @selector(ofMultiIntWithId:withNSString:withADPath:);
  methods[13].selector = @selector(ofMultiIntWithId:withNSString:withADTypeConverter:withADTypeEvaluator:withNSObjectArray:);
  methods[14].selector = @selector(ofArgbWithId:withNSString:withIntArray:);
  methods[15].selector = @selector(ofArgbWithId:withADProperty:withIntArray:);
  methods[16].selector = @selector(ofFloatWithId:withNSString:withFloatArray:);
  methods[17].selector = @selector(ofFloatWithId:withNSString:withNSString:withADPath:);
  methods[18].selector = @selector(ofFloatWithId:withADProperty:withFloatArray:);
  methods[19].selector = @selector(ofFloatWithId:withADProperty:withADProperty:withADPath:);
  methods[20].selector = @selector(ofMultiFloatWithId:withNSString:withFloatArray2:);
  methods[21].selector = @selector(ofMultiFloatWithId:withNSString:withADPath:);
  methods[22].selector = @selector(ofMultiFloatWithId:withNSString:withADTypeConverter:withADTypeEvaluator:withNSObjectArray:);
  methods[23].selector = @selector(ofObjectWithId:withNSString:withADTypeEvaluator:withNSObjectArray:);
  methods[24].selector = @selector(ofObjectWithId:withNSString:withADTypeConverter:withADPath:);
  methods[25].selector = @selector(ofObjectWithId:withADProperty:withADTypeEvaluator:withNSObjectArray:);
  methods[26].selector = @selector(ofObjectWithId:withADProperty:withADTypeConverter:withADTypeEvaluator:withNSObjectArray:);
  methods[27].selector = @selector(ofObjectWithId:withADProperty:withADTypeConverter:withADPath:);
  methods[28].selector = @selector(ofPropertyValuesHolderWithId:withADPropertyValuesHolderArray:);
  methods[29].selector = @selector(setIntValuesWithIntArray:);
  methods[30].selector = @selector(setFloatValuesWithFloatArray:);
  methods[31].selector = @selector(setObjectValuesWithNSObjectArray:);
  methods[32].selector = @selector(setAutoCancelWithBoolean:);
  methods[33].selector = @selector(hasSameTargetAndPropertiesWithADAnimator:);
  methods[34].selector = @selector(start);
  methods[35].selector = @selector(shouldAutoCancelWithADAnimationHandler_AnimationFrameCallback:);
  methods[36].selector = @selector(initAnimation);
  methods[37].selector = @selector(setDurationWithLong:);
  methods[38].selector = @selector(getTarget);
  methods[39].selector = @selector(setTargetWithId:);
  methods[40].selector = @selector(setupStartValues);
  methods[41].selector = @selector(setupEndValues);
  methods[42].selector = @selector(animateValueWithFloat:);
  methods[43].selector = @selector(isInitialized);
  methods[44].selector = @selector(java_clone);
  methods[45].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LOG_TAG", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 64, -1, -1 },
    { "DBG", "Z", .constantValue.asBOOL = ADObjectAnimator_DBG, 0x1a, -1, -1, -1, -1 },
    { "mTarget_", "LJavaLangRefWeakReference;", .constantValue.asLong = 0, 0x2, -1, -1, 65, -1 },
    { "mPropertyName_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mProperty_", "LADProperty;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mAutoCancel_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setPropertyName", "LNSString;", "setProperty", "LADProperty;", "LNSObject;LNSString;", "LNSObject;LADProperty;", "<T:Ljava/lang/Object;>(TT;Lr/android/util/Property<TT;*>;)V", "ofInt", "LNSObject;LNSString;[I", "LNSObject;LNSString;LNSString;LADPath;", "LNSObject;LADProperty;[I", "<T:Ljava/lang/Object;>(TT;Lr/android/util/Property<TT;Ljava/lang/Integer;>;[I)Lr/android/animation/ObjectAnimator;", "LNSObject;LADProperty;LADProperty;LADPath;", "<T:Ljava/lang/Object;>(TT;Lr/android/util/Property<TT;Ljava/lang/Integer;>;Lr/android/util/Property<TT;Ljava/lang/Integer;>;Lr/android/graphics/Path;)Lr/android/animation/ObjectAnimator;", "ofMultiInt", "LNSObject;LNSString;[[I", "LNSObject;LNSString;LADPath;", "LNSObject;LNSString;LADTypeConverter;LADTypeEvaluator;[LNSObject;", "<T:Ljava/lang/Object;>(Ljava/lang/Object;Ljava/lang/String;Lr/android/animation/TypeConverter<TT;[I>;Lr/android/animation/TypeEvaluator<TT;>;[TT;)Lr/android/animation/ObjectAnimator;", (void *)&ADObjectAnimator__Annotations$0, "ofArgb", "ofFloat", "LNSObject;LNSString;[F", "LNSObject;LADProperty;[F", "<T:Ljava/lang/Object;>(TT;Lr/android/util/Property<TT;Ljava/lang/Float;>;[F)Lr/android/animation/ObjectAnimator;", "<T:Ljava/lang/Object;>(TT;Lr/android/util/Property<TT;Ljava/lang/Float;>;Lr/android/util/Property<TT;Ljava/lang/Float;>;Lr/android/graphics/Path;)Lr/android/animation/ObjectAnimator;", "ofMultiFloat", "LNSObject;LNSString;[[F", "<T:Ljava/lang/Object;>(Ljava/lang/Object;Ljava/lang/String;Lr/android/animation/TypeConverter<TT;[F>;Lr/android/animation/TypeEvaluator<TT;>;[TT;)Lr/android/animation/ObjectAnimator;", (void *)&ADObjectAnimator__Annotations$1, "ofObject", "LNSObject;LNSString;LADTypeEvaluator;[LNSObject;", "LNSObject;LNSString;LADTypeConverter;LADPath;", "(Ljava/lang/Object;Ljava/lang/String;Lr/android/animation/TypeConverter<Lr/android/graphics/PointF;*>;Lr/android/graphics/Path;)Lr/android/animation/ObjectAnimator;", "LNSObject;LADProperty;LADTypeEvaluator;[LNSObject;", "<T:Ljava/lang/Object;V:Ljava/lang/Object;>(TT;Lr/android/util/Property<TT;TV;>;Lr/android/animation/TypeEvaluator<TV;>;[TV;)Lr/android/animation/ObjectAnimator;", (void *)&ADObjectAnimator__Annotations$2, "LNSObject;LADProperty;LADTypeConverter;LADTypeEvaluator;[LNSObject;", "<T:Ljava/lang/Object;V:Ljava/lang/Object;P:Ljava/lang/Object;>(TT;Lr/android/util/Property<TT;TP;>;Lr/android/animation/TypeConverter<TV;TP;>;Lr/android/animation/TypeEvaluator<TV;>;[TV;)Lr/android/animation/ObjectAnimator;", (void *)&ADObjectAnimator__Annotations$3, "LNSObject;LADProperty;LADTypeConverter;LADPath;", "<T:Ljava/lang/Object;V:Ljava/lang/Object;>(TT;Lr/android/util/Property<TT;TV;>;Lr/android/animation/TypeConverter<Lr/android/graphics/PointF;TV;>;Lr/android/graphics/Path;)Lr/android/animation/ObjectAnimator;", "ofPropertyValuesHolder", "LNSObject;[LADPropertyValuesHolder;", "setIntValues", "[I", "setFloatValues", "[F", "setObjectValues", "[LNSObject;", "setAutoCancel", "Z", "hasSameTargetAndProperties", "LADAnimator;", "shouldAutoCancel", "LADAnimationHandler_AnimationFrameCallback;", "setDuration", "J", "setTarget", "LNSObject;", "animateValue", "F", "clone", "toString", &ADObjectAnimator_LOG_TAG, "Ljava/lang/ref/WeakReference<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _ADObjectAnimator = { "ObjectAnimator", "r.android.animation", ptrTable, methods, fields, 7, 0x11, 46, 6, -1, -1, -1, -1, -1 };
  return &_ADObjectAnimator;
}

@end

void ADObjectAnimator_init(ADObjectAnimator *self) {
  ADValueAnimator_init(self);
  self->mAutoCancel_ = false;
}

ADObjectAnimator *new_ADObjectAnimator_init() {
  J2OBJC_NEW_IMPL(ADObjectAnimator, init)
}

ADObjectAnimator *create_ADObjectAnimator_init() {
  J2OBJC_CREATE_IMPL(ADObjectAnimator, init)
}

void ADObjectAnimator_initWithId_withNSString_(ADObjectAnimator *self, id target, NSString *propertyName) {
  ADValueAnimator_init(self);
  self->mAutoCancel_ = false;
  [self setTargetWithId:target];
  [self setPropertyNameWithNSString:propertyName];
}

ADObjectAnimator *new_ADObjectAnimator_initWithId_withNSString_(id target, NSString *propertyName) {
  J2OBJC_NEW_IMPL(ADObjectAnimator, initWithId_withNSString_, target, propertyName)
}

ADObjectAnimator *create_ADObjectAnimator_initWithId_withNSString_(id target, NSString *propertyName) {
  J2OBJC_CREATE_IMPL(ADObjectAnimator, initWithId_withNSString_, target, propertyName)
}

void ADObjectAnimator_initWithId_withADProperty_(ADObjectAnimator *self, id target, ADProperty *property) {
  ADValueAnimator_init(self);
  self->mAutoCancel_ = false;
  [self setTargetWithId:target];
  [self setPropertyWithADProperty:property];
}

ADObjectAnimator *new_ADObjectAnimator_initWithId_withADProperty_(id target, ADProperty *property) {
  J2OBJC_NEW_IMPL(ADObjectAnimator, initWithId_withADProperty_, target, property)
}

ADObjectAnimator *create_ADObjectAnimator_initWithId_withADProperty_(id target, ADProperty *property) {
  J2OBJC_CREATE_IMPL(ADObjectAnimator, initWithId_withADProperty_, target, property)
}

ADObjectAnimator *ADObjectAnimator_ofIntWithId_withNSString_withIntArray_(id target, NSString *propertyName, IOSIntArray *values) {
  ADObjectAnimator_initialize();
  ADObjectAnimator *anim = create_ADObjectAnimator_initWithId_withNSString_(target, propertyName);
  [anim setIntValuesWithIntArray:values];
  return anim;
}

ADObjectAnimator *ADObjectAnimator_ofIntWithId_withNSString_withNSString_withADPath_(id target, NSString *xPropertyName, NSString *yPropertyName, ADPath *path) {
  ADObjectAnimator_initialize();
  ADPathKeyframes *keyframes = ADKeyframeSet_ofPathWithADPath_(path);
  ADPropertyValuesHolder *x = ADPropertyValuesHolder_ofKeyframesWithNSString_withADIKeyframes_(xPropertyName, [((ADPathKeyframes *) nil_chk(keyframes)) createXIntKeyframes]);
  ADPropertyValuesHolder *y = ADPropertyValuesHolder_ofKeyframesWithNSString_withADIKeyframes_(yPropertyName, [keyframes createYIntKeyframes]);
  return ADObjectAnimator_ofPropertyValuesHolderWithId_withADPropertyValuesHolderArray_(target, [IOSObjectArray arrayWithObjects:(id[]){ x, y } count:2 type:ADPropertyValuesHolder_class_()]);
}

ADObjectAnimator *ADObjectAnimator_ofIntWithId_withADProperty_withIntArray_(id target, ADProperty *property, IOSIntArray *values) {
  ADObjectAnimator_initialize();
  ADObjectAnimator *anim = create_ADObjectAnimator_initWithId_withADProperty_(target, property);
  [anim setIntValuesWithIntArray:values];
  return anim;
}

ADObjectAnimator *ADObjectAnimator_ofIntWithId_withADProperty_withADProperty_withADPath_(id target, ADProperty *xProperty, ADProperty *yProperty, ADPath *path) {
  ADObjectAnimator_initialize();
  ADPathKeyframes *keyframes = ADKeyframeSet_ofPathWithADPath_(path);
  ADPropertyValuesHolder *x = ADPropertyValuesHolder_ofKeyframesWithADProperty_withADIKeyframes_(xProperty, [((ADPathKeyframes *) nil_chk(keyframes)) createXIntKeyframes]);
  ADPropertyValuesHolder *y = ADPropertyValuesHolder_ofKeyframesWithADProperty_withADIKeyframes_(yProperty, [keyframes createYIntKeyframes]);
  return ADObjectAnimator_ofPropertyValuesHolderWithId_withADPropertyValuesHolderArray_(target, [IOSObjectArray arrayWithObjects:(id[]){ x, y } count:2 type:ADPropertyValuesHolder_class_()]);
}

ADObjectAnimator *ADObjectAnimator_ofMultiIntWithId_withNSString_withIntArray2_(id target, NSString *propertyName, IOSObjectArray *values) {
  ADObjectAnimator_initialize();
  ADPropertyValuesHolder *pvh = ADPropertyValuesHolder_ofMultiIntWithNSString_withIntArray2_(propertyName, values);
  return ADObjectAnimator_ofPropertyValuesHolderWithId_withADPropertyValuesHolderArray_(target, [IOSObjectArray arrayWithObjects:(id[]){ pvh } count:1 type:ADPropertyValuesHolder_class_()]);
}

ADObjectAnimator *ADObjectAnimator_ofMultiIntWithId_withNSString_withADPath_(id target, NSString *propertyName, ADPath *path) {
  ADObjectAnimator_initialize();
  ADPropertyValuesHolder *pvh = ADPropertyValuesHolder_ofMultiIntWithNSString_withADPath_(propertyName, path);
  return ADObjectAnimator_ofPropertyValuesHolderWithId_withADPropertyValuesHolderArray_(target, [IOSObjectArray arrayWithObjects:(id[]){ pvh } count:1 type:ADPropertyValuesHolder_class_()]);
}

ADObjectAnimator *ADObjectAnimator_ofMultiIntWithId_withNSString_withADTypeConverter_withADTypeEvaluator_withNSObjectArray_(id target, NSString *propertyName, ADTypeConverter *converter, id<ADTypeEvaluator> evaluator, IOSObjectArray *values) {
  ADObjectAnimator_initialize();
  ADPropertyValuesHolder *pvh = ADPropertyValuesHolder_ofMultiIntWithNSString_withADTypeConverter_withADTypeEvaluator_withNSObjectArray_(propertyName, converter, evaluator, values);
  return ADObjectAnimator_ofPropertyValuesHolderWithId_withADPropertyValuesHolderArray_(target, [IOSObjectArray arrayWithObjects:(id[]){ pvh } count:1 type:ADPropertyValuesHolder_class_()]);
}

ADObjectAnimator *ADObjectAnimator_ofArgbWithId_withNSString_withIntArray_(id target, NSString *propertyName, IOSIntArray *values) {
  ADObjectAnimator_initialize();
  ADObjectAnimator *animator = ADObjectAnimator_ofIntWithId_withNSString_withIntArray_(target, propertyName, values);
  [((ADObjectAnimator *) nil_chk(animator)) setEvaluatorWithADTypeEvaluator:ADArgbEvaluator_getInstance()];
  return animator;
}

ADObjectAnimator *ADObjectAnimator_ofArgbWithId_withADProperty_withIntArray_(id target, ADProperty *property, IOSIntArray *values) {
  ADObjectAnimator_initialize();
  ADObjectAnimator *animator = ADObjectAnimator_ofIntWithId_withADProperty_withIntArray_(target, property, values);
  [((ADObjectAnimator *) nil_chk(animator)) setEvaluatorWithADTypeEvaluator:ADArgbEvaluator_getInstance()];
  return animator;
}

ADObjectAnimator *ADObjectAnimator_ofFloatWithId_withNSString_withFloatArray_(id target, NSString *propertyName, IOSFloatArray *values) {
  ADObjectAnimator_initialize();
  ADObjectAnimator *anim = create_ADObjectAnimator_initWithId_withNSString_(target, propertyName);
  [anim setFloatValuesWithFloatArray:values];
  return anim;
}

ADObjectAnimator *ADObjectAnimator_ofFloatWithId_withNSString_withNSString_withADPath_(id target, NSString *xPropertyName, NSString *yPropertyName, ADPath *path) {
  ADObjectAnimator_initialize();
  ADPathKeyframes *keyframes = ADKeyframeSet_ofPathWithADPath_(path);
  ADPropertyValuesHolder *x = ADPropertyValuesHolder_ofKeyframesWithNSString_withADIKeyframes_(xPropertyName, [((ADPathKeyframes *) nil_chk(keyframes)) createXFloatKeyframes]);
  ADPropertyValuesHolder *y = ADPropertyValuesHolder_ofKeyframesWithNSString_withADIKeyframes_(yPropertyName, [keyframes createYFloatKeyframes]);
  return ADObjectAnimator_ofPropertyValuesHolderWithId_withADPropertyValuesHolderArray_(target, [IOSObjectArray arrayWithObjects:(id[]){ x, y } count:2 type:ADPropertyValuesHolder_class_()]);
}

ADObjectAnimator *ADObjectAnimator_ofFloatWithId_withADProperty_withFloatArray_(id target, ADProperty *property, IOSFloatArray *values) {
  ADObjectAnimator_initialize();
  ADObjectAnimator *anim = create_ADObjectAnimator_initWithId_withADProperty_(target, property);
  [anim setFloatValuesWithFloatArray:values];
  return anim;
}

ADObjectAnimator *ADObjectAnimator_ofFloatWithId_withADProperty_withADProperty_withADPath_(id target, ADProperty *xProperty, ADProperty *yProperty, ADPath *path) {
  ADObjectAnimator_initialize();
  ADPathKeyframes *keyframes = ADKeyframeSet_ofPathWithADPath_(path);
  ADPropertyValuesHolder *x = ADPropertyValuesHolder_ofKeyframesWithADProperty_withADIKeyframes_(xProperty, [((ADPathKeyframes *) nil_chk(keyframes)) createXFloatKeyframes]);
  ADPropertyValuesHolder *y = ADPropertyValuesHolder_ofKeyframesWithADProperty_withADIKeyframes_(yProperty, [keyframes createYFloatKeyframes]);
  return ADObjectAnimator_ofPropertyValuesHolderWithId_withADPropertyValuesHolderArray_(target, [IOSObjectArray arrayWithObjects:(id[]){ x, y } count:2 type:ADPropertyValuesHolder_class_()]);
}

ADObjectAnimator *ADObjectAnimator_ofMultiFloatWithId_withNSString_withFloatArray2_(id target, NSString *propertyName, IOSObjectArray *values) {
  ADObjectAnimator_initialize();
  ADPropertyValuesHolder *pvh = ADPropertyValuesHolder_ofMultiFloatWithNSString_withFloatArray2_(propertyName, values);
  return ADObjectAnimator_ofPropertyValuesHolderWithId_withADPropertyValuesHolderArray_(target, [IOSObjectArray arrayWithObjects:(id[]){ pvh } count:1 type:ADPropertyValuesHolder_class_()]);
}

ADObjectAnimator *ADObjectAnimator_ofMultiFloatWithId_withNSString_withADPath_(id target, NSString *propertyName, ADPath *path) {
  ADObjectAnimator_initialize();
  ADPropertyValuesHolder *pvh = ADPropertyValuesHolder_ofMultiFloatWithNSString_withADPath_(propertyName, path);
  return ADObjectAnimator_ofPropertyValuesHolderWithId_withADPropertyValuesHolderArray_(target, [IOSObjectArray arrayWithObjects:(id[]){ pvh } count:1 type:ADPropertyValuesHolder_class_()]);
}

ADObjectAnimator *ADObjectAnimator_ofMultiFloatWithId_withNSString_withADTypeConverter_withADTypeEvaluator_withNSObjectArray_(id target, NSString *propertyName, ADTypeConverter *converter, id<ADTypeEvaluator> evaluator, IOSObjectArray *values) {
  ADObjectAnimator_initialize();
  ADPropertyValuesHolder *pvh = ADPropertyValuesHolder_ofMultiFloatWithNSString_withADTypeConverter_withADTypeEvaluator_withNSObjectArray_(propertyName, converter, evaluator, values);
  return ADObjectAnimator_ofPropertyValuesHolderWithId_withADPropertyValuesHolderArray_(target, [IOSObjectArray arrayWithObjects:(id[]){ pvh } count:1 type:ADPropertyValuesHolder_class_()]);
}

ADObjectAnimator *ADObjectAnimator_ofObjectWithId_withNSString_withADTypeEvaluator_withNSObjectArray_(id target, NSString *propertyName, id<ADTypeEvaluator> evaluator, IOSObjectArray *values) {
  ADObjectAnimator_initialize();
  ADObjectAnimator *anim = create_ADObjectAnimator_initWithId_withNSString_(target, propertyName);
  [anim setObjectValuesWithNSObjectArray:values];
  [anim setEvaluatorWithADTypeEvaluator:evaluator];
  return anim;
}

ADObjectAnimator *ADObjectAnimator_ofObjectWithId_withNSString_withADTypeConverter_withADPath_(id target, NSString *propertyName, ADTypeConverter *converter, ADPath *path) {
  ADObjectAnimator_initialize();
  ADPropertyValuesHolder *pvh = ADPropertyValuesHolder_ofObjectWithNSString_withADTypeConverter_withADPath_(propertyName, converter, path);
  return ADObjectAnimator_ofPropertyValuesHolderWithId_withADPropertyValuesHolderArray_(target, [IOSObjectArray arrayWithObjects:(id[]){ pvh } count:1 type:ADPropertyValuesHolder_class_()]);
}

ADObjectAnimator *ADObjectAnimator_ofObjectWithId_withADProperty_withADTypeEvaluator_withNSObjectArray_(id target, ADProperty *property, id<ADTypeEvaluator> evaluator, IOSObjectArray *values) {
  ADObjectAnimator_initialize();
  ADObjectAnimator *anim = create_ADObjectAnimator_initWithId_withADProperty_(target, property);
  [anim setObjectValuesWithNSObjectArray:values];
  [anim setEvaluatorWithADTypeEvaluator:evaluator];
  return anim;
}

ADObjectAnimator *ADObjectAnimator_ofObjectWithId_withADProperty_withADTypeConverter_withADTypeEvaluator_withNSObjectArray_(id target, ADProperty *property, ADTypeConverter *converter, id<ADTypeEvaluator> evaluator, IOSObjectArray *values) {
  ADObjectAnimator_initialize();
  ADPropertyValuesHolder *pvh = ADPropertyValuesHolder_ofObjectWithADProperty_withADTypeConverter_withADTypeEvaluator_withNSObjectArray_(property, converter, evaluator, values);
  return ADObjectAnimator_ofPropertyValuesHolderWithId_withADPropertyValuesHolderArray_(target, [IOSObjectArray arrayWithObjects:(id[]){ pvh } count:1 type:ADPropertyValuesHolder_class_()]);
}

ADObjectAnimator *ADObjectAnimator_ofObjectWithId_withADProperty_withADTypeConverter_withADPath_(id target, ADProperty *property, ADTypeConverter *converter, ADPath *path) {
  ADObjectAnimator_initialize();
  ADPropertyValuesHolder *pvh = ADPropertyValuesHolder_ofObjectWithADProperty_withADTypeConverter_withADPath_(property, converter, path);
  return ADObjectAnimator_ofPropertyValuesHolderWithId_withADPropertyValuesHolderArray_(target, [IOSObjectArray arrayWithObjects:(id[]){ pvh } count:1 type:ADPropertyValuesHolder_class_()]);
}

ADObjectAnimator *ADObjectAnimator_ofPropertyValuesHolderWithId_withADPropertyValuesHolderArray_(id target, IOSObjectArray *values) {
  ADObjectAnimator_initialize();
  ADObjectAnimator *anim = create_ADObjectAnimator_init();
  [anim setTargetWithId:target];
  [anim setValuesWithADPropertyValuesHolderArray:values];
  return anim;
}

bool ADObjectAnimator_hasSameTargetAndPropertiesWithADAnimator_(ADObjectAnimator *self, ADAnimator *anim) {
  if ([anim isKindOfClass:[ADObjectAnimator class]]) {
    IOSObjectArray *theirValues = [((ADObjectAnimator *) nil_chk(((ADObjectAnimator *) anim))) getValues];
    if (JreObjectEqualsEquals([((ADObjectAnimator *) nil_chk(((ADObjectAnimator *) anim))) getTarget], [self getTarget]) && ((IOSObjectArray *) nil_chk(self->mValues_))->size_ == ((IOSObjectArray *) nil_chk(theirValues))->size_) {
      for (int32_t i = 0; i < ((IOSObjectArray *) nil_chk(self->mValues_))->size_; ++i) {
        ADPropertyValuesHolder *pvhMine = IOSObjectArray_Get(self->mValues_, i);
        ADPropertyValuesHolder *pvhTheirs = IOSObjectArray_Get(nil_chk(theirValues), i);
        if ([((ADPropertyValuesHolder *) nil_chk(pvhMine)) getPropertyName] == nil || ![((NSString *) nil_chk([pvhMine getPropertyName])) isEqual:[((ADPropertyValuesHolder *) nil_chk(pvhTheirs)) getPropertyName]]) {
          return false;
        }
      }
      return true;
    }
  }
  return false;
}

IOSObjectArray *ADObjectAnimator__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangSafeVarargs() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ADObjectAnimator__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangSafeVarargs() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ADObjectAnimator__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangSafeVarargs() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ADObjectAnimator__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangSafeVarargs() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADObjectAnimator)

J2OBJC_NAME_MAPPING(ADObjectAnimator, "r.android.animation", "AD")
