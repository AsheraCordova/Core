//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\animation\TypeEvaluator.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_TypeEvaluator")
#ifdef RESTRICT_TypeEvaluator
#define INCLUDE_ALL_TypeEvaluator 0
#else
#define INCLUDE_ALL_TypeEvaluator 1
#endif
#undef RESTRICT_TypeEvaluator

#if !defined (ADTypeEvaluator_) && (INCLUDE_ALL_TypeEvaluator || defined(INCLUDE_ADTypeEvaluator))
#define ADTypeEvaluator_

@class JavaLangFloat;

/*!
 @brief Interface for use with the <code>ValueAnimator.setEvaluator(TypeEvaluator)</code> function.Evaluators
  allow developers to create animations on arbitrary property types, by allowing them to supply
  custom evaluators for types that are not automatically understood and used by the animation
  system.
 - seealso: ValueAnimator#setEvaluator(TypeEvaluator)
 */
@protocol ADTypeEvaluator < JavaObject >

/*!
 @brief This function returns the result of linearly interpolating the start and end values, with 
 <code>fraction</code> representing the proportion between the start and end values.The
  calculation is a simple parametric calculation: <code>result = x0 + t * (x1 - x0)</code>,
  where <code>x0</code> is <code>startValue</code>, <code>x1</code> is <code>endValue</code>,
  and <code>t</code> is <code>fraction</code>.
 @param fraction The fraction from the starting to the ending values
 @param startValue The start value.
 @param endValue The end value.
 @return A linear interpolation between the start and end values, given the
          <code>fraction</code> parameter.
 */
- (id)evaluateWithFloat:(float)fraction
                 withId:(id)startValue
                 withId:(id)endValue;

@end

J2OBJC_EMPTY_STATIC_INIT(ADTypeEvaluator)

J2OBJC_TYPE_LITERAL_HEADER(ADTypeEvaluator)

#define RAndroidAnimationTypeEvaluator ADTypeEvaluator


#endif

#pragma pop_macro("INCLUDE_ALL_TypeEvaluator")
