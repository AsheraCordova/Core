//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\animation\IntEvaluator.java
//

#define J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION 1




#include "IntEvaluator.h"
#include "J2ObjC_source.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"




#pragma clang diagnostic error "-Wreturn-type"
#pragma clang diagnostic ignored "-Wswitch"


@implementation ADIntEvaluator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADIntEvaluator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangInteger *)evaluateWithFloat:(float)fraction
                                withId:(JavaLangInteger *)startValue
                                withId:(JavaLangInteger *)endValue {
  int32_t startInt = [((JavaLangInteger *) nil_chk(startValue)) intValue];
  return JavaLangInteger_valueOfWithInt_(JreFpToInt((startInt + fraction * ([((JavaLangInteger *) nil_chk(endValue)) intValue] - startInt))));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(evaluateWithFloat:withId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "evaluate", "FLJavaLangInteger;LJavaLangInteger;", "Ljava/lang/Object;Lr/android/animation/TypeEvaluator<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _ADIntEvaluator = { "IntEvaluator", "r.android.animation", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, 2, -1 };
  return &_ADIntEvaluator;
}

@end

void ADIntEvaluator_init(ADIntEvaluator *self) {
  NSObject_init(self);
}

ADIntEvaluator *new_ADIntEvaluator_init() {
  J2OBJC_NEW_IMPL(ADIntEvaluator, init)
}

ADIntEvaluator *create_ADIntEvaluator_init() {
  J2OBJC_CREATE_IMPL(ADIntEvaluator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADIntEvaluator)

J2OBJC_NAME_MAPPING(ADIntEvaluator, "r.android.animation", "AD")
