//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\stub\r\android\view\MotionEvent.java
//

#include "J2ObjC_source.h"
#include "MotionEvent.h"


@interface ADMotionEvent () {
 @public
  jint x_;
  jint y_;
  jint rawX_;
  jint rawY_;
  jint action_;
}

@end

@implementation ADMotionEvent

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADMotionEvent_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)getAction {
  return action_;
}

- (void)setActionWithInt:(jint)action {
  self->action_ = action;
}

- (jint)getX {
  return x_;
}

- (void)setXWithInt:(jint)x {
  self->x_ = x;
}

- (jint)getY {
  return y_;
}

- (void)setYWithInt:(jint)y {
  self->y_ = y;
}

- (jint)getRawX {
  return rawX_;
}

- (void)setRawXWithInt:(jint)rawX {
  self->rawX_ = rawX;
}

- (jint)getRawY {
  return rawY_;
}

- (void)setRawYWithInt:(jint)rawY {
  self->rawY_ = rawY;
}

- (jint)getEventTime {
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getAction);
  methods[2].selector = @selector(setActionWithInt:);
  methods[3].selector = @selector(getX);
  methods[4].selector = @selector(setXWithInt:);
  methods[5].selector = @selector(getY);
  methods[6].selector = @selector(setYWithInt:);
  methods[7].selector = @selector(getRawX);
  methods[8].selector = @selector(setRawXWithInt:);
  methods[9].selector = @selector(getRawY);
  methods[10].selector = @selector(setRawYWithInt:);
  methods[11].selector = @selector(getEventTime);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ACTION_DOWN", "I", .constantValue.asInt = ADMotionEvent_ACTION_DOWN, 0x19, -1, -1, -1, -1 },
    { "ACTION_UP", "I", .constantValue.asInt = ADMotionEvent_ACTION_UP, 0x19, -1, -1, -1, -1 },
    { "ACTION_MOVE", "I", .constantValue.asInt = ADMotionEvent_ACTION_MOVE, 0x19, -1, -1, -1, -1 },
    { "ACTION_CANCEL", "I", .constantValue.asInt = ADMotionEvent_ACTION_CANCEL, 0x19, -1, -1, -1, -1 },
    { "ACTION_OUTSIDE", "I", .constantValue.asInt = ADMotionEvent_ACTION_OUTSIDE, 0x19, -1, -1, -1, -1 },
    { "ACTION_SCROLL", "I", .constantValue.asInt = ADMotionEvent_ACTION_SCROLL, 0x19, -1, -1, -1, -1 },
    { "ACTION_BUTTON_PRESS", "I", .constantValue.asInt = ADMotionEvent_ACTION_BUTTON_PRESS, 0x19, -1, -1, -1, -1 },
    { "ACTION_BUTTON_RELEASE", "I", .constantValue.asInt = ADMotionEvent_ACTION_BUTTON_RELEASE, 0x19, -1, -1, -1, -1 },
    { "x_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "y_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "rawX_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "rawY_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "action_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setAction", "I", "setX", "setY", "setRawX", "setRawY" };
  static const J2ObjcClassInfo _ADMotionEvent = { "MotionEvent", "r.android.view", ptrTable, methods, fields, 7, 0x1, 12, 13, -1, -1, -1, -1, -1 };
  return &_ADMotionEvent;
}

@end

void ADMotionEvent_init(ADMotionEvent *self) {
  NSObject_init(self);
}

ADMotionEvent *new_ADMotionEvent_init() {
  J2OBJC_NEW_IMPL(ADMotionEvent, init)
}

ADMotionEvent *create_ADMotionEvent_init() {
  J2OBJC_CREATE_IMPL(ADMotionEvent, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADMotionEvent)
