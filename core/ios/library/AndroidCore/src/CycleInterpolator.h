//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\view\animation\CycleInterpolator.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CycleInterpolator")
#ifdef RESTRICT_CycleInterpolator
#define INCLUDE_ALL_CycleInterpolator 0
#else
#define INCLUDE_ALL_CycleInterpolator 1
#endif
#undef RESTRICT_CycleInterpolator

#if !defined (ADCycleInterpolator_) && (INCLUDE_ALL_CycleInterpolator || defined(INCLUDE_ADCycleInterpolator))
#define ADCycleInterpolator_

#define RESTRICT_BaseInterpolator 1
#define INCLUDE_ADBaseInterpolator 1
#include "BaseInterpolator.h"

@class JavaLangFloat;
@class JavaLangLong;

/*!
 @brief Repeats the animation for a specified number of cycles.The
  rate of change follows a sinusoidal pattern.
 */
@interface ADCycleInterpolator : ADBaseInterpolator

#pragma mark Public

- (instancetype)initWithFloat:(float)cycles;

/*!
 */
- (int64_t)createNativeInterpolator;

/*!
 */
- (float)getInterpolationWithFloat:(float)input;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADCycleInterpolator)

FOUNDATION_EXPORT void ADCycleInterpolator_initWithFloat_(ADCycleInterpolator *self, float cycles);

FOUNDATION_EXPORT ADCycleInterpolator *new_ADCycleInterpolator_initWithFloat_(float cycles) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADCycleInterpolator *create_ADCycleInterpolator_initWithFloat_(float cycles);

J2OBJC_TYPE_LITERAL_HEADER(ADCycleInterpolator)

@compatibility_alias RAndroidViewAnimationCycleInterpolator ADCycleInterpolator;


#endif

#pragma pop_macro("INCLUDE_ALL_CycleInterpolator")
