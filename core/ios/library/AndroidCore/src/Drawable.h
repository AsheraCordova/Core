//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\graphics\drawable\Drawable.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Drawable")
#ifdef RESTRICT_Drawable
#define INCLUDE_ALL_Drawable 0
#else
#define INCLUDE_ALL_Drawable 1
#endif
#undef RESTRICT_Drawable

#if !defined (ADDrawable_) && (INCLUDE_ALL_Drawable || defined(INCLUDE_ADDrawable))
#define ADDrawable_

@class ADInsets;
@class ADRect;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@class NSString;
@protocol ADCanvas;
@protocol ADDrawable_AttributeChangeListener;
@protocol ADDrawable_MeasureTextHelper;
@protocol ASIWidget;

@interface ADDrawable : NSObject

#pragma mark Public

- (instancetype)init;

- (void)drawWithADCanvas:(id<ADCanvas>)canvas;

- (id)getAttributeWithNSString:(NSString *)key;

- (int32_t)getBottom;

- (ADRect *)getBounds;

- (id)getDrawable;

- (int32_t)getIntrinsicHeight;

- (int32_t)getIntrinsicWidth;

- (int32_t)getLeft;

- (id<ADDrawable_MeasureTextHelper>)getMeasureTextHelper;

- (int32_t)getMinimumHeight;

- (int32_t)getMinimumWidth;

- (ADInsets *)getOpticalInsets;

- (bool)getPaddingWithADRect:(ADRect *)padding;

- (int32_t)getRight;

- (IOSObjectArray *)getSimulatedWidgetAttrs;

- (NSString *)getSimulatedWidgetGroupName;

- (NSString *)getSimulatedWidgetLocalName;

/*!
 @brief Describes the current state, as a union of primitve states, such as 
 <code>android.R.attr.state_focused</code>,
  <code>android.R.attr.state_selected</code>, etc.
 Some drawables may modify their imagery based on the selected state.
 @return An array of resource Ids describing the current state.
 */
- (IOSIntArray *)getState;

- (id)getTintColor;

- (NSString *)getTintMode;

- (int32_t)getTop;

- (IOSObjectArray *)getViewAttrs;

- (bool)hasDrawable;

- (void)invalidateSelf;

- (bool)isProjected;

- (bool)isRecycleable;

- (bool)isRedraw;

- (bool)isStateful;

- (void)jumpToCurrentState;

- (void)setAlphaWithInt:(int32_t)alpha;

- (void)setAttributeChangeListenerWithADDrawable_AttributeChangeListener:(id<ADDrawable_AttributeChangeListener>)attributeChangeListener;

/*!
 @brief Specify a bounding rectangle for the Drawable.This is where the drawable
  will draw when its draw() method is called.
 */
- (void)setBoundsWithInt:(int32_t)left
                 withInt:(int32_t)top
                 withInt:(int32_t)right
                 withInt:(int32_t)bottom;

/*!
 @brief Specify a bounding rectangle for the Drawable.This is where the drawable
  will draw when its draw() method is called.
 */
- (void)setBoundsWithADRect:(ADRect *)bounds;

- (void)setCallbackWithId:(id)object;

- (void)setDrawableWithId:(id)drawable;

- (void)setHotspotBoundsWithInt:(int32_t)left2
                        withInt:(int32_t)top2
                        withInt:(int32_t)right2
                        withInt:(int32_t)bottom2;

- (void)setLayoutDirectionWithInt:(int32_t)layoutDirection;

- (void)setMeasureTextHelperWithADDrawable_MeasureTextHelper:(id<ADDrawable_MeasureTextHelper>)helper;

- (void)setMinimumHeightWithInt:(int32_t)minimumHeight;

- (void)setMinimumWidthWithInt:(int32_t)minimumWidth;

- (void)setOverlayWithASIWidget:(id<ASIWidget>)overlay;

- (void)setRecycleableWithBoolean:(bool)recycleable;

- (void)setRedrawWithBoolean:(bool)redraw;

- (bool)setStateWithIntArray:(IOSIntArray *)stateSet;

- (void)setStateWithId:(id)drawableState;

- (void)setTintColorWithId:(id)tintColor;

- (void)setTintModeWithNSString:(NSString *)tintMode;

- (void)setUseGCWithBoolean:(bool)useGC;

- (void)setVisibleWithBoolean:(bool)b
                  withBoolean:(bool)c;

#pragma mark Protected

- (void)onBoundsChangeWithADRect:(ADRect *)bounds;

- (bool)onStateChangeWithIntArray:(IOSIntArray *)state;

@end

J2OBJC_STATIC_INIT(ADDrawable)

inline ADRect *ADDrawable_get_ZERO_BOUNDS_RECT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ADRect *ADDrawable_ZERO_BOUNDS_RECT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADDrawable, ZERO_BOUNDS_RECT, ADRect *)

inline IOSIntArray *ADDrawable_get_WILD_CARD(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *ADDrawable_WILD_CARD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADDrawable, WILD_CARD, IOSIntArray *)

FOUNDATION_EXPORT void ADDrawable_init(ADDrawable *self);

FOUNDATION_EXPORT ADDrawable *new_ADDrawable_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADDrawable *create_ADDrawable_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADDrawable)

@compatibility_alias RAndroidGraphicsDrawableDrawable ADDrawable;


#endif

#if !defined (ADDrawable_AttributeChangeListener_) && (INCLUDE_ALL_Drawable || defined(INCLUDE_ADDrawable_AttributeChangeListener))
#define ADDrawable_AttributeChangeListener_

@class NSString;

@protocol ADDrawable_AttributeChangeListener < JavaObject >

- (void)onAttributeChangeWithNSString:(NSString *)name
                               withId:(id)attribute;

@end

J2OBJC_EMPTY_STATIC_INIT(ADDrawable_AttributeChangeListener)

J2OBJC_TYPE_LITERAL_HEADER(ADDrawable_AttributeChangeListener)


#endif

#if !defined (ADDrawable_MeasureTextHelper_) && (INCLUDE_ALL_Drawable || defined(INCLUDE_ADDrawable_MeasureTextHelper))
#define ADDrawable_MeasureTextHelper_

@class JavaLangFloat;

@protocol ADDrawable_MeasureTextHelper < JavaObject >

- (float)getTextWidth;

- (float)getTextHeight;

@end

J2OBJC_EMPTY_STATIC_INIT(ADDrawable_MeasureTextHelper)

J2OBJC_TYPE_LITERAL_HEADER(ADDrawable_MeasureTextHelper)


#endif

#pragma pop_macro("INCLUDE_ALL_Drawable")
