//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\animation\IntKeyframeSet.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IntKeyframeSet")
#ifdef RESTRICT_IntKeyframeSet
#define INCLUDE_ALL_IntKeyframeSet 0
#else
#define INCLUDE_ALL_IntKeyframeSet 1
#endif
#undef RESTRICT_IntKeyframeSet

#if !defined (ADIntKeyframeSet_) && (INCLUDE_ALL_IntKeyframeSet || defined(INCLUDE_ADIntKeyframeSet))
#define ADIntKeyframeSet_

#define RESTRICT_KeyframeSet 1
#define INCLUDE_ADKeyframeSet 1
#include "KeyframeSet.h"

#define RESTRICT_Keyframes 1
#define INCLUDE_ADKeyframes_IntKeyframes 1
#include "Keyframes.h"

@class IOSClass;
@class IOSObjectArray;

/*!
 @brief This class holds a collection of IntKeyframe objects and is called by ValueAnimator to calculate
  values between those keyframes for a given animation.The class internal to the animation
  package because it is an implementation detail of how Keyframes are stored and used.
 <p>This type-specific subclass of KeyframeSet, along with the other type-specific subclass for
  float, exists to speed up the getValue() method when there is no custom
  TypeEvaluator set for the animation, so that values can be calculated without autoboxing to the
  Object equivalents of these primitive types.</p>
 */
@interface ADIntKeyframeSet : ADKeyframeSet < ADKeyframes_IntKeyframes >

#pragma mark Public

- (instancetype)initPackagePrivateWithADKeyframe_IntKeyframeArray:(IOSObjectArray *)keyframes;

- (ADIntKeyframeSet *)java_clone;

- (jint)getIntValueWithFloat:(jfloat)fraction;

- (IOSClass *)getType;

- (id)getValueWithFloat:(jfloat)fraction;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithADKeyframeArray:(IOSObjectArray *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADIntKeyframeSet)

FOUNDATION_EXPORT void ADIntKeyframeSet_initPackagePrivateWithADKeyframe_IntKeyframeArray_(ADIntKeyframeSet *self, IOSObjectArray *keyframes);

FOUNDATION_EXPORT ADIntKeyframeSet *new_ADIntKeyframeSet_initPackagePrivateWithADKeyframe_IntKeyframeArray_(IOSObjectArray *keyframes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADIntKeyframeSet *create_ADIntKeyframeSet_initPackagePrivateWithADKeyframe_IntKeyframeArray_(IOSObjectArray *keyframes);

J2OBJC_TYPE_LITERAL_HEADER(ADIntKeyframeSet)

@compatibility_alias RAndroidAnimationIntKeyframeSet ADIntKeyframeSet;

#endif

#pragma pop_macro("INCLUDE_ALL_IntKeyframeSet")
