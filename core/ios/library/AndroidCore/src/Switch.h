//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\widget\Switch.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Switch")
#ifdef RESTRICT_Switch
#define INCLUDE_ALL_Switch 0
#else
#define INCLUDE_ALL_Switch 1
#endif
#undef RESTRICT_Switch

#if !defined (ADSwitch_) && (INCLUDE_ALL_Switch || defined(INCLUDE_ADSwitch))
#define ADSwitch_

#define RESTRICT_CompoundButton 1
#define INCLUDE_ADCompoundButton 1
#include "CompoundButton.h"

@class ADColorStateList;
@class ADRect;
@class ADSwitch_Layout;
@class ASRectM;
@class JavaLangBoolean;
@class JavaLangInteger;
@class NSString;
@protocol ASIWidget;
@protocol JavaLangCharSequence;

@interface ADSwitch : ADCompoundButton

#pragma mark Public

- (instancetype)initWithASIWidget:(id<ASIWidget>)widget;

- (ASRectM *)getBottomDrawableBoundsWithInt:(int32_t)x
                                    withInt:(int32_t)y
                                    withInt:(int32_t)width
                                    withInt:(int32_t)height;

- (int32_t)getCompoundPaddingLeft;

- (int32_t)getCompoundPaddingRight;

- (ASRectM *)getRightDrawableBoundsWithInt:(int32_t)x
                                   withInt:(int32_t)y
                                   withInt:(int32_t)width
                                   withInt:(int32_t)height;

- (ADRect *)getSwitchBounds;

- (int32_t)getSwitchMinWidth;

- (int32_t)getSwitchPadding;

- (NSString *)getText;

- (ADColorStateList *)getThumbTintList;

- (ASRectM *)getTopDrawableBoundsWithInt:(int32_t)x
                                 withInt:(int32_t)y
                                 withInt:(int32_t)width
                                 withInt:(int32_t)height;

- (ADColorStateList *)getTrackTintList;

- (void)onMeasureWithInt:(int32_t)widthMeasureSpec
                 withInt:(int32_t)heightMeasureSpec;

- (void)setIntrinsicHeightWithInt:(int32_t)intrinsicHeight;

- (void)setIntrinsicWidthWithInt:(int32_t)intrinsicWidth;

- (void)setSwitchMinWidthWithInt:(int32_t)pixels;

- (void)setSwitchPaddingWithInt:(int32_t)pixels;

- (void)setTextWithNSString:(NSString *)text;

- (void)setThumbTintListWithADColorStateList:(ADColorStateList *)tint;

- (void)setTrackTintListWithADColorStateList:(ADColorStateList *)tint;

#pragma mark Protected

- (void)onLayoutWithBoolean:(bool)changed
                    withInt:(int32_t)left
                    withInt:(int32_t)top
                    withInt:(int32_t)right
                    withInt:(int32_t)bottom;

#pragma mark Package-Private

- (ADSwitch_Layout *)makeLayoutWithJavaLangCharSequence:(id<JavaLangCharSequence>)text;

@end

J2OBJC_EMPTY_STATIC_INIT(ADSwitch)

FOUNDATION_EXPORT void ADSwitch_initWithASIWidget_(ADSwitch *self, id<ASIWidget> widget);

J2OBJC_TYPE_LITERAL_HEADER(ADSwitch)

@compatibility_alias RAndroidWidgetSwitch ADSwitch;


#endif

#if !defined (ADSwitch_Layout_) && (INCLUDE_ALL_Switch || defined(INCLUDE_ADSwitch_Layout))
#define ADSwitch_Layout_

@class ADSwitch;
@class JavaLangInteger;

@interface ADSwitch_Layout : NSObject

#pragma mark Package-Private

- (instancetype)initWithADSwitch:(ADSwitch *)outer$;

- (int32_t)getWidth;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADSwitch_Layout)

FOUNDATION_EXPORT void ADSwitch_Layout_initWithADSwitch_(ADSwitch_Layout *self, ADSwitch *outer$);

FOUNDATION_EXPORT ADSwitch_Layout *new_ADSwitch_Layout_initWithADSwitch_(ADSwitch *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADSwitch_Layout *create_ADSwitch_Layout_initWithADSwitch_(ADSwitch *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ADSwitch_Layout)


#endif

#pragma pop_macro("INCLUDE_ALL_Switch")
