//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\stub\r\android\view\Choreographer.java
//

#include "Choreographer.h"
#include "J2ObjC_source.h"
#include "PluginInvoker.h"
#include "java/io/PrintStream.h"
#include "java/lang/Runnable.h"
#include "java/lang/System.h"


#pragma clang diagnostic ignored "-Wprotocol"

inline ADChoreographer *ADChoreographer_get_choreographer(void);
inline ADChoreographer *ADChoreographer_set_choreographer(ADChoreographer *value);
static ADChoreographer *ADChoreographer_choreographer;
J2OBJC_STATIC_FIELD_OBJ(ADChoreographer, choreographer, ADChoreographer *)

@interface ADChoreographer_FrameCallback : NSObject

@end

@interface ADChoreographer_$Lambda$1 : NSObject < JavaLangRunnable > {
 @public
  ADChoreographer *this$0_;
  id<ADChoreographer_FrameCallback> val$callback_;
}

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(ADChoreographer_$Lambda$1)

__attribute__((unused)) static void ADChoreographer_$Lambda$1_initWithADChoreographer_withADChoreographer_FrameCallback_(ADChoreographer_$Lambda$1 *self, ADChoreographer *outer$, id<ADChoreographer_FrameCallback> capture$0);

__attribute__((unused)) static ADChoreographer_$Lambda$1 *new_ADChoreographer_$Lambda$1_initWithADChoreographer_withADChoreographer_FrameCallback_(ADChoreographer *outer$, id<ADChoreographer_FrameCallback> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADChoreographer_$Lambda$1 *create_ADChoreographer_$Lambda$1_initWithADChoreographer_withADChoreographer_FrameCallback_(ADChoreographer *outer$, id<ADChoreographer_FrameCallback> capture$0);

J2OBJC_INITIALIZED_DEFN(ADChoreographer)

@implementation ADChoreographer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADChoreographer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (ADChoreographer *)getInstance {
  return ADChoreographer_getInstance();
}

- (void)postFrameCallbackDelayedWithADChoreographer_FrameCallback:(id<ADChoreographer_FrameCallback>)callback
                                                         withLong:(jlong)backgroundPauseDelay {
  if (callback != nil) {
    ASPluginInvoker_postDelayedWithJavaLangRunnable_withInt_(create_ADChoreographer_$Lambda$1_initWithADChoreographer_withADChoreographer_FrameCallback_(self, callback), (jint) backgroundPauseDelay);
  }
}

- (void)removeFrameCallbackWithADChoreographer_FrameCallback:(id<ADChoreographer_FrameCallback>)mPauser {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"removeFrameCallback"];
}

- (void)postFrameCallbackWithADChoreographer_FrameCallback:(id<ADChoreographer_FrameCallback>)callback {
  [self postFrameCallbackDelayedWithADChoreographer_FrameCallback:callback withLong:0];
}

- (void)postCallbackWithInt:(jint)callbackCommit
       withJavaLangRunnable:(id<JavaLangRunnable>)runnable
                     withId:(id)object {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"postCallback"];
}

- (jlong)getFrameTime {
  return JreLongDiv(JavaLangSystem_nanoTime(), 1000000);
}

+ (jlong)getFrameDelay {
  return ADChoreographer_getFrameDelay();
}

+ (void)setFrameDelayWithLong:(jlong)delay {
  ADChoreographer_setFrameDelayWithLong_(delay);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADChoreographer;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getInstance);
  methods[2].selector = @selector(postFrameCallbackDelayedWithADChoreographer_FrameCallback:withLong:);
  methods[3].selector = @selector(removeFrameCallbackWithADChoreographer_FrameCallback:);
  methods[4].selector = @selector(postFrameCallbackWithADChoreographer_FrameCallback:);
  methods[5].selector = @selector(postCallbackWithInt:withJavaLangRunnable:withId:);
  methods[6].selector = @selector(getFrameTime);
  methods[7].selector = @selector(getFrameDelay);
  methods[8].selector = @selector(setFrameDelayWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "choreographer", "LADChoreographer;", .constantValue.asLong = 0, 0xa, -1, 9, -1, -1 },
    { "CALLBACK_COMMIT", "I", .constantValue.asInt = ADChoreographer_CALLBACK_COMMIT, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "postFrameCallbackDelayed", "LADChoreographer_FrameCallback;J", "removeFrameCallback", "LADChoreographer_FrameCallback;", "postFrameCallback", "postCallback", "ILJavaLangRunnable;LNSObject;", "setFrameDelay", "J", &ADChoreographer_choreographer };
  static const J2ObjcClassInfo _ADChoreographer = { "Choreographer", "r.android.view", ptrTable, methods, fields, 7, 0x1, 9, 2, -1, 3, -1, -1, -1 };
  return &_ADChoreographer;
}

+ (void)initialize {
  if (self == [ADChoreographer class]) {
    JreStrongAssignAndConsume(&ADChoreographer_choreographer, new_ADChoreographer_init());
    J2OBJC_SET_INITIALIZED(ADChoreographer)
  }
}

@end

void ADChoreographer_init(ADChoreographer *self) {
  NSObject_init(self);
}

ADChoreographer *new_ADChoreographer_init() {
  J2OBJC_NEW_IMPL(ADChoreographer, init)
}

ADChoreographer *create_ADChoreographer_init() {
  J2OBJC_CREATE_IMPL(ADChoreographer, init)
}

ADChoreographer *ADChoreographer_getInstance() {
  ADChoreographer_initialize();
  return ADChoreographer_choreographer;
}

jlong ADChoreographer_getFrameDelay() {
  ADChoreographer_initialize();
  return 0;
}

void ADChoreographer_setFrameDelayWithLong_(jlong delay) {
  ADChoreographer_initialize();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADChoreographer)

@implementation ADChoreographer_FrameCallback

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(doFrameWithLong:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "doFrame", "J", "LADChoreographer;" };
  static const J2ObjcClassInfo _ADChoreographer_FrameCallback = { "FrameCallback", "r.android.view", ptrTable, methods, NULL, 7, 0x609, 1, 0, 2, -1, -1, -1, -1 };
  return &_ADChoreographer_FrameCallback;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADChoreographer_FrameCallback)

@implementation ADChoreographer_$Lambda$1

- (void)run {
  [((id<ADChoreographer_FrameCallback>) nil_chk(val$callback_)) doFrameWithLong:[this$0_ getFrameTime]];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$callback_);
  [super dealloc];
}

@end

void ADChoreographer_$Lambda$1_initWithADChoreographer_withADChoreographer_FrameCallback_(ADChoreographer_$Lambda$1 *self, ADChoreographer *outer$, id<ADChoreographer_FrameCallback> capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$callback_, capture$0);
  NSObject_init(self);
}

ADChoreographer_$Lambda$1 *new_ADChoreographer_$Lambda$1_initWithADChoreographer_withADChoreographer_FrameCallback_(ADChoreographer *outer$, id<ADChoreographer_FrameCallback> capture$0) {
  J2OBJC_NEW_IMPL(ADChoreographer_$Lambda$1, initWithADChoreographer_withADChoreographer_FrameCallback_, outer$, capture$0)
}

ADChoreographer_$Lambda$1 *create_ADChoreographer_$Lambda$1_initWithADChoreographer_withADChoreographer_FrameCallback_(ADChoreographer *outer$, id<ADChoreographer_FrameCallback> capture$0) {
  J2OBJC_CREATE_IMPL(ADChoreographer_$Lambda$1, initWithADChoreographer_withADChoreographer_FrameCallback_, outer$, capture$0)
}
