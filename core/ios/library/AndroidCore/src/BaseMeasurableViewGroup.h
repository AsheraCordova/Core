//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\com\ashera\view\BaseMeasurableViewGroup.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_BaseMeasurableViewGroup")
#ifdef RESTRICT_BaseMeasurableViewGroup
#define INCLUDE_ALL_BaseMeasurableViewGroup 0
#else
#define INCLUDE_ALL_BaseMeasurableViewGroup 1
#endif
#undef RESTRICT_BaseMeasurableViewGroup

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ASBaseMeasurableViewGroup_) && (INCLUDE_ALL_BaseMeasurableViewGroup || defined(INCLUDE_ASBaseMeasurableViewGroup))
#define ASBaseMeasurableViewGroup_

#define RESTRICT_ViewGroup 1
#define INCLUDE_ADViewGroup 1
#include "ViewGroup.h"

@class ADDrawable;
@class ASBaseMeasurableViewGroup_VerticalAligment;
@class ASRectM;
@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@protocol ASHasWidgets;
@protocol ASIWidget;

@interface ASBaseMeasurableViewGroup : ADViewGroup {
 @public
  ASBaseMeasurableViewGroup_VerticalAligment *verticalAligment_;
  bool mHorizontallyScrolling_;
}

#pragma mark Public

- (instancetype)initWithASIWidget:(id<ASIWidget>)widget;

- (int32_t)getBaseline;

- (ADDrawable *)getBottomDrawable;

- (ASRectM *)getBottomDrawableBoundsWithInt:(int32_t)x
                                    withInt:(int32_t)y
                                    withInt:(int32_t)width
                                    withInt:(int32_t)height;

- (int32_t)getCompoundPaddingBottom;

- (int32_t)getCompoundPaddingLeft;

- (int32_t)getCompoundPaddingLeftWithIgnoreCheck;

- (int32_t)getCompoundPaddingRight;

- (int32_t)getCompoundPaddingRightWithIgnoreCheck;

- (int32_t)getCompoundPaddingTop;

- (int32_t)getDrawablePadding;

- (ADDrawable *)getLeftDrawable;

- (ASRectM *)getLeftDrawableBoundsWithInt:(int32_t)x
                                  withInt:(int32_t)y
                                  withInt:(int32_t)width
                                  withInt:(int32_t)height;

- (ADDrawable *)getRightDrawable;

- (ASRectM *)getRightDrawableBoundsWithInt:(int32_t)x
                                   withInt:(int32_t)y
                                   withInt:(int32_t)width
                                   withInt:(int32_t)height;

- (ADDrawable *)getTopDrawable;

- (ASRectM *)getTopDrawableBoundsWithInt:(int32_t)x
                                 withInt:(int32_t)y
                                 withInt:(int32_t)width
                                 withInt:(int32_t)height;

- (ASBaseMeasurableViewGroup_VerticalAligment *)getVerticalAligment;

- (id<ASIWidget>)getWidget;

- (ASRectM *)getWidgetBoundsWithInt:(int32_t)width
                            withInt:(int32_t)height
                  withNSObjectArray:(IOSObjectArray *)nativeWidgets;

- (bool)hasDrawables;

- (bool)isCompoundHorizontalPaddingConsumed;

- (bool)isIgnoreDrawableHeight;

- (bool)isVerticalAlignBottom;

- (bool)isVerticalAlignMiddle;

- (bool)isVerticalAlignTop;

+ (void)measureWidgetWithNoParentWithASHasWidgets:(id<ASHasWidgets>)parent
                                    withASIWidget:(id<ASIWidget>)widget
                                          withInt:(int32_t)level
                                          withInt:(int32_t)initialWidth
                                          withInt:(int32_t)indent;

- (int32_t)nativeMeasureHeightWithId:(id)uiView
                             withInt:(int32_t)width;

- (int32_t)nativeMeasureWidthWithId:(id)uiView;

- (void)setBottomDrawableWithADDrawable:(ADDrawable *)bottomDrawable;

- (void)setCompoundHorizontalPaddingConsumedWithBoolean:(bool)isCompoundHorizontalPaddingConsumed;

- (void)setDrawablePaddingWithInt:(int32_t)drawablePadding;

- (void)setHorizontallyScrollingWithBoolean:(bool)horizontallyScrolling;

- (void)setIgnoreDrawableHeightWithBoolean:(bool)ignoreDrawableHeight;

- (void)setLeftDrawableWithADDrawable:(ADDrawable *)leftDrawable;

- (void)setRightDrawableWithADDrawable:(ADDrawable *)rightDrawable;

- (void)setTopDrawableWithADDrawable:(ADDrawable *)topDrawable;

- (void)setVerticalAligmentWithASBaseMeasurableViewGroup_VerticalAligment:(ASBaseMeasurableViewGroup_VerticalAligment *)verticalAligment;

#pragma mark Protected

- (void)onMeasureWithInt:(int32_t)widthMeasureSpec
                 withInt:(int32_t)heightMeasureSpec;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ASBaseMeasurableViewGroup)

J2OBJC_FIELD_SETTER(ASBaseMeasurableViewGroup, verticalAligment_, ASBaseMeasurableViewGroup_VerticalAligment *)

inline int32_t ASBaseMeasurableViewGroup_get_VERY_WIDE(void);
inline int32_t ASBaseMeasurableViewGroup_set_VERY_WIDE(int32_t value);
inline int32_t *ASBaseMeasurableViewGroup_getRef_VERY_WIDE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT int32_t ASBaseMeasurableViewGroup_VERY_WIDE;
J2OBJC_STATIC_FIELD_PRIMITIVE(ASBaseMeasurableViewGroup, VERY_WIDE, int32_t)

FOUNDATION_EXPORT void ASBaseMeasurableViewGroup_initWithASIWidget_(ASBaseMeasurableViewGroup *self, id<ASIWidget> widget);

FOUNDATION_EXPORT void ASBaseMeasurableViewGroup_measureWidgetWithNoParentWithASHasWidgets_withASIWidget_withInt_withInt_withInt_(id<ASHasWidgets> parent, id<ASIWidget> widget, int32_t level, int32_t initialWidth, int32_t indent);

J2OBJC_TYPE_LITERAL_HEADER(ASBaseMeasurableViewGroup)

@compatibility_alias ComAsheraViewBaseMeasurableViewGroup ASBaseMeasurableViewGroup;


#endif

#if !defined (ASBaseMeasurableViewGroup_VerticalAligment_) && (INCLUDE_ALL_BaseMeasurableViewGroup || defined(INCLUDE_ASBaseMeasurableViewGroup_VerticalAligment))
#define ASBaseMeasurableViewGroup_VerticalAligment_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;
@class NSString;

typedef NS_ENUM(int32_t, ASBaseMeasurableViewGroup_VerticalAligment_Enum) {
  ASBaseMeasurableViewGroup_VerticalAligment_Enum_middle NS_SWIFT_NAME(middle) = 0,
  ASBaseMeasurableViewGroup_VerticalAligment_Enum_bottom NS_SWIFT_NAME(bottom) = 1,
  ASBaseMeasurableViewGroup_VerticalAligment_Enum_top NS_SWIFT_NAME(top) = 2,
};

#if J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION
#define ASBaseMeasurableViewGroup_VerticalAligment_ORDINAL int32_t
#else
#define ASBaseMeasurableViewGroup_VerticalAligment_ORDINAL ASBaseMeasurableViewGroup_VerticalAligment_Enum
#endif


@interface ASBaseMeasurableViewGroup_VerticalAligment : JavaLangEnum

#pragma mark Public

+ (ASBaseMeasurableViewGroup_VerticalAligment *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (ASBaseMeasurableViewGroup_VerticalAligment_Enum)toNSEnum;

@property(readonly) ASBaseMeasurableViewGroup_VerticalAligment_Enum enumValue;
+ (ASBaseMeasurableViewGroup_VerticalAligment *)fromNSEnum:(ASBaseMeasurableViewGroup_VerticalAligment_Enum)value;

- (ASBaseMeasurableViewGroup_VerticalAligment_ORDINAL)ordinal NS_SWIFT_UNAVAILABLE("Use .enumValue");

- (nullable instancetype)initWithVerticalAligment:(ASBaseMeasurableViewGroup_VerticalAligment_Enum)value;

@end

J2OBJC_STATIC_INIT(ASBaseMeasurableViewGroup_VerticalAligment)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ASBaseMeasurableViewGroup_VerticalAligment *ASBaseMeasurableViewGroup_VerticalAligment_values_[];

inline ASBaseMeasurableViewGroup_VerticalAligment *ASBaseMeasurableViewGroup_VerticalAligment_get_middle(void);
J2OBJC_ENUM_CONSTANT(ASBaseMeasurableViewGroup_VerticalAligment, middle)

inline ASBaseMeasurableViewGroup_VerticalAligment *ASBaseMeasurableViewGroup_VerticalAligment_get_bottom(void);
J2OBJC_ENUM_CONSTANT(ASBaseMeasurableViewGroup_VerticalAligment, bottom)

inline ASBaseMeasurableViewGroup_VerticalAligment *ASBaseMeasurableViewGroup_VerticalAligment_get_top(void);
J2OBJC_ENUM_CONSTANT(ASBaseMeasurableViewGroup_VerticalAligment, top)

FOUNDATION_EXPORT IOSObjectArray *ASBaseMeasurableViewGroup_VerticalAligment_values(void);

FOUNDATION_EXPORT ASBaseMeasurableViewGroup_VerticalAligment *ASBaseMeasurableViewGroup_VerticalAligment_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ASBaseMeasurableViewGroup_VerticalAligment *ASBaseMeasurableViewGroup_VerticalAligment_fromOrdinal(ASBaseMeasurableViewGroup_VerticalAligment_ORDINAL ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ASBaseMeasurableViewGroup_VerticalAligment)


#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_BaseMeasurableViewGroup")
