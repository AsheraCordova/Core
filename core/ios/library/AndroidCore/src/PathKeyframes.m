//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\animation\PathKeyframes.java
//

#define J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION 1




#include "IKeyframes.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Path.h"
#include "PathKeyframes.h"
#include "PointF.h"
#include "TypeEvaluator.h"
#include "java/lang/Boolean.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"




#pragma clang diagnostic error "-Wreturn-type"
#pragma clang diagnostic ignored "-Wswitch"


#pragma clang diagnostic ignored "-Wprotocol"
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ADPathKeyframes () {
 @public
  ADPointF *mTempPointF_;
  IOSFloatArray *mKeyframeData_;
}

- (ADPointF *)interpolateInRangeWithFloat:(float)fraction
                                  withInt:(int32_t)startIndex
                                  withInt:(int32_t)endIndex;

- (ADPointF *)pointForIndexWithInt:(int32_t)index;

+ (float)interpolateWithFloat:(float)fraction
                    withFloat:(float)startValue
                    withFloat:(float)endValue;

@end

J2OBJC_FIELD_SETTER(ADPathKeyframes, mTempPointF_, ADPointF *)
J2OBJC_FIELD_SETTER(ADPathKeyframes, mKeyframeData_, IOSFloatArray *)

inline int32_t ADPathKeyframes_get_FRACTION_OFFSET(void);
#define ADPathKeyframes_FRACTION_OFFSET 0
J2OBJC_STATIC_FIELD_CONSTANT(ADPathKeyframes, FRACTION_OFFSET, int32_t)

inline int32_t ADPathKeyframes_get_X_OFFSET(void);
#define ADPathKeyframes_X_OFFSET 1
J2OBJC_STATIC_FIELD_CONSTANT(ADPathKeyframes, X_OFFSET, int32_t)

inline int32_t ADPathKeyframes_get_Y_OFFSET(void);
#define ADPathKeyframes_Y_OFFSET 2
J2OBJC_STATIC_FIELD_CONSTANT(ADPathKeyframes, Y_OFFSET, int32_t)

inline int32_t ADPathKeyframes_get_NUM_COMPONENTS(void);
#define ADPathKeyframes_NUM_COMPONENTS 3
J2OBJC_STATIC_FIELD_CONSTANT(ADPathKeyframes, NUM_COMPONENTS, int32_t)

inline JavaUtilArrayList *ADPathKeyframes_get_EMPTY_KEYFRAMES(void);
static JavaUtilArrayList *ADPathKeyframes_EMPTY_KEYFRAMES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADPathKeyframes, EMPTY_KEYFRAMES, JavaUtilArrayList *)

__attribute__((unused)) static ADPointF *ADPathKeyframes_interpolateInRangeWithFloat_withInt_withInt_(ADPathKeyframes *self, float fraction, int32_t startIndex, int32_t endIndex);

__attribute__((unused)) static ADPointF *ADPathKeyframes_pointForIndexWithInt_(ADPathKeyframes *self, int32_t index);

__attribute__((unused)) static float ADPathKeyframes_interpolateWithFloat_withFloat_withFloat_(float fraction, float startValue, float endValue);

@interface ADPathKeyframes_SimpleIKeyframes ()

- (instancetype)init;

@end

__attribute__((unused)) static void ADPathKeyframes_SimpleIKeyframes_init(ADPathKeyframes_SimpleIKeyframes *self);

@interface ADPathKeyframes_1 : ADPathKeyframes_FloatIKeyframesBase {
 @public
  ADPathKeyframes *this$0_;
}

- (instancetype)initWithADPathKeyframes:(ADPathKeyframes *)outer$;

- (float)getFloatValueWithFloat:(float)fraction;

- (id<ADIKeyframes>)java_clone;

- (JavaUtilArrayList *)getIKeyframes;

@end

J2OBJC_EMPTY_STATIC_INIT(ADPathKeyframes_1)

__attribute__((unused)) static void ADPathKeyframes_1_initWithADPathKeyframes_(ADPathKeyframes_1 *self, ADPathKeyframes *outer$);

__attribute__((unused)) static ADPathKeyframes_1 *new_ADPathKeyframes_1_initWithADPathKeyframes_(ADPathKeyframes *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADPathKeyframes_1 *create_ADPathKeyframes_1_initWithADPathKeyframes_(ADPathKeyframes *outer$);


@interface ADPathKeyframes_2 : ADPathKeyframes_FloatIKeyframesBase {
 @public
  ADPathKeyframes *this$0_;
}

- (instancetype)initWithADPathKeyframes:(ADPathKeyframes *)outer$;

- (float)getFloatValueWithFloat:(float)fraction;

- (id<ADIKeyframes>)java_clone;

- (JavaUtilArrayList *)getIKeyframes;

@end

J2OBJC_EMPTY_STATIC_INIT(ADPathKeyframes_2)

__attribute__((unused)) static void ADPathKeyframes_2_initWithADPathKeyframes_(ADPathKeyframes_2 *self, ADPathKeyframes *outer$);

__attribute__((unused)) static ADPathKeyframes_2 *new_ADPathKeyframes_2_initWithADPathKeyframes_(ADPathKeyframes *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADPathKeyframes_2 *create_ADPathKeyframes_2_initWithADPathKeyframes_(ADPathKeyframes *outer$);


@interface ADPathKeyframes_3 : ADPathKeyframes_IntIKeyframesBase {
 @public
  ADPathKeyframes *this$0_;
}

- (instancetype)initWithADPathKeyframes:(ADPathKeyframes *)outer$;

- (int32_t)getIntValueWithFloat:(float)fraction;

- (id<ADIKeyframes>)java_clone;

- (JavaUtilArrayList *)getIKeyframes;

@end

J2OBJC_EMPTY_STATIC_INIT(ADPathKeyframes_3)

__attribute__((unused)) static void ADPathKeyframes_3_initWithADPathKeyframes_(ADPathKeyframes_3 *self, ADPathKeyframes *outer$);

__attribute__((unused)) static ADPathKeyframes_3 *new_ADPathKeyframes_3_initWithADPathKeyframes_(ADPathKeyframes *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADPathKeyframes_3 *create_ADPathKeyframes_3_initWithADPathKeyframes_(ADPathKeyframes *outer$);


@interface ADPathKeyframes_4 : ADPathKeyframes_IntIKeyframesBase {
 @public
  ADPathKeyframes *this$0_;
}

- (instancetype)initWithADPathKeyframes:(ADPathKeyframes *)outer$;

- (int32_t)getIntValueWithFloat:(float)fraction;

- (id<ADIKeyframes>)java_clone;

- (JavaUtilArrayList *)getIKeyframes;

@end

J2OBJC_EMPTY_STATIC_INIT(ADPathKeyframes_4)

__attribute__((unused)) static void ADPathKeyframes_4_initWithADPathKeyframes_(ADPathKeyframes_4 *self, ADPathKeyframes *outer$);

__attribute__((unused)) static ADPathKeyframes_4 *new_ADPathKeyframes_4_initWithADPathKeyframes_(ADPathKeyframes *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADPathKeyframes_4 *create_ADPathKeyframes_4_initWithADPathKeyframes_(ADPathKeyframes *outer$);


J2OBJC_INITIALIZED_DEFN(ADPathKeyframes)

@implementation ADPathKeyframes

- (instancetype)initWithADPath:(ADPath *)path {
  ADPathKeyframes_initWithADPath_(self, path);
  return self;
}

- (instancetype)initWithADPath:(ADPath *)path
                     withFloat:(float)error {
  ADPathKeyframes_initWithADPath_withFloat_(self, path, error);
  return self;
}

- (JavaUtilArrayList *)getIKeyframes {
  return ADPathKeyframes_EMPTY_KEYFRAMES;
}

- (id)getValueWithFloat:(float)fraction {
  int32_t numPoints = JreIntDiv(((IOSFloatArray *) nil_chk(mKeyframeData_))->size_, 3);
  if (fraction < 0) {
    return ADPathKeyframes_interpolateInRangeWithFloat_withInt_withInt_(self, fraction, 0, 1);
  }
  else if (fraction > 1) {
    return ADPathKeyframes_interpolateInRangeWithFloat_withInt_withInt_(self, fraction, numPoints - 2, numPoints - 1);
  }
  else if (fraction == 0) {
    return ADPathKeyframes_pointForIndexWithInt_(self, 0);
  }
  else if (fraction == 1) {
    return ADPathKeyframes_pointForIndexWithInt_(self, numPoints - 1);
  }
  else {
    int32_t low = 0;
    int32_t high = numPoints - 1;
    while (low <= high) {
      int32_t mid = JreIntDiv((low + high), 2);
      float midFraction = IOSFloatArray_Get(mKeyframeData_, (mid * ADPathKeyframes_NUM_COMPONENTS) + ADPathKeyframes_FRACTION_OFFSET);
      if (fraction < midFraction) {
        high = mid - 1;
      }
      else if (fraction > midFraction) {
        low = mid + 1;
      }
      else {
        return ADPathKeyframes_pointForIndexWithInt_(self, mid);
      }
    }
    return ADPathKeyframes_interpolateInRangeWithFloat_withInt_withInt_(self, fraction, high, low);
  }
}

- (ADPointF *)interpolateInRangeWithFloat:(float)fraction
                                  withInt:(int32_t)startIndex
                                  withInt:(int32_t)endIndex {
  return ADPathKeyframes_interpolateInRangeWithFloat_withInt_withInt_(self, fraction, startIndex, endIndex);
}

- (void)setEvaluatorWithADTypeEvaluator:(id<ADTypeEvaluator>)evaluator {
}

- (IOSClass *)getType {
  return ADPointF_class_();
}

- (id<ADIKeyframes>)java_clone {
  id<ADIKeyframes> clone = nil;
  @try {
    clone = (id<ADIKeyframes>) cast_check([super java_clone], ADIKeyframes_class_());
  }
  @catch (JavaLangCloneNotSupportedException *e) {
  }
  return clone;
}

- (ADPointF *)pointForIndexWithInt:(int32_t)index {
  return ADPathKeyframes_pointForIndexWithInt_(self, index);
}

+ (float)interpolateWithFloat:(float)fraction
                    withFloat:(float)startValue
                    withFloat:(float)endValue {
  return ADPathKeyframes_interpolateWithFloat_withFloat_withFloat_(fraction, startValue, endValue);
}

- (id<ADIKeyframes_FloatIKeyframes>)createXFloatKeyframes {
  return create_ADPathKeyframes_1_initWithADPathKeyframes_(self);
}

- (id<ADIKeyframes_FloatIKeyframes>)createYFloatKeyframes {
  return create_ADPathKeyframes_2_initWithADPathKeyframes_(self);
}

- (id<ADIKeyframes_IntIKeyframes>)createXIntKeyframes {
  return create_ADPathKeyframes_3_initWithADPathKeyframes_(self);
}

- (id<ADIKeyframes_IntIKeyframes>)createYIntKeyframes {
  return create_ADPathKeyframes_4_initWithADPathKeyframes_(self);
}

- (id<ADIKeyframes>)clone {
  return [self java_clone];
}

- (void)dealloc {
  RELEASE_(mTempPointF_);
  RELEASE_(mKeyframeData_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LNSObject;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LADPointF;", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADIKeyframes;", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "LADPointF;", 0x2, 10, 11, -1, -1, -1, -1 },
    { NULL, "F", 0xa, 12, 13, -1, -1, -1, -1 },
    { NULL, "LADIKeyframes_FloatIKeyframes;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADIKeyframes_FloatIKeyframes;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADIKeyframes_IntIKeyframes;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADIKeyframes_IntIKeyframes;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADPath:);
  methods[1].selector = @selector(initWithADPath:withFloat:);
  methods[2].selector = @selector(getIKeyframes);
  methods[3].selector = @selector(getValueWithFloat:);
  methods[4].selector = @selector(interpolateInRangeWithFloat:withInt:withInt:);
  methods[5].selector = @selector(setEvaluatorWithADTypeEvaluator:);
  methods[6].selector = @selector(getType);
  methods[7].selector = @selector(java_clone);
  methods[8].selector = @selector(pointForIndexWithInt:);
  methods[9].selector = @selector(interpolateWithFloat:withFloat:withFloat:);
  methods[10].selector = @selector(createXFloatKeyframes);
  methods[11].selector = @selector(createYFloatKeyframes);
  methods[12].selector = @selector(createXIntKeyframes);
  methods[13].selector = @selector(createYIntKeyframes);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "FRACTION_OFFSET", "I", .constantValue.asInt = ADPathKeyframes_FRACTION_OFFSET, 0x1a, -1, -1, -1, -1 },
    { "X_OFFSET", "I", .constantValue.asInt = ADPathKeyframes_X_OFFSET, 0x1a, -1, -1, -1, -1 },
    { "Y_OFFSET", "I", .constantValue.asInt = ADPathKeyframes_Y_OFFSET, 0x1a, -1, -1, -1, -1 },
    { "NUM_COMPONENTS", "I", .constantValue.asInt = ADPathKeyframes_NUM_COMPONENTS, 0x1a, -1, -1, -1, -1 },
    { "EMPTY_KEYFRAMES", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x1a, -1, 14, 15, -1 },
    { "mTempPointF_", "LADPointF;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mKeyframeData_", "[F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADPath;", "LADPath;F", "()Ljava/util/ArrayList<Lr/android/animation/Keyframe;>;", "getValue", "F", "interpolateInRange", "FII", "setEvaluator", "LADTypeEvaluator;", "clone", "pointForIndex", "I", "interpolate", "FFF", &ADPathKeyframes_EMPTY_KEYFRAMES, "Ljava/util/ArrayList<Lr/android/animation/Keyframe;>;", "LADPathKeyframes_SimpleIKeyframes;LADPathKeyframes_IntIKeyframesBase;LADPathKeyframes_FloatIKeyframesBase;" };
  static const J2ObjcClassInfo _ADPathKeyframes = { "PathKeyframes", "r.android.animation", ptrTable, methods, fields, 7, 0x1, 14, 7, -1, 16, -1, -1, -1 };
  return &_ADPathKeyframes;
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self java_clone] retain];
}

+ (void)initialize {
  if (self == [ADPathKeyframes class]) {
    JreStrongAssignAndConsume(&ADPathKeyframes_EMPTY_KEYFRAMES, new_JavaUtilArrayList_init());
    J2OBJC_SET_INITIALIZED(ADPathKeyframes)
  }
}

@end

void ADPathKeyframes_initWithADPath_(ADPathKeyframes *self, ADPath *path) {
  ADPathKeyframes_initWithADPath_withFloat_(self, path, 0.5f);
}

ADPathKeyframes *new_ADPathKeyframes_initWithADPath_(ADPath *path) {
  J2OBJC_NEW_IMPL(ADPathKeyframes, initWithADPath_, path)
}

ADPathKeyframes *create_ADPathKeyframes_initWithADPath_(ADPath *path) {
  J2OBJC_CREATE_IMPL(ADPathKeyframes, initWithADPath_, path)
}

void ADPathKeyframes_initWithADPath_withFloat_(ADPathKeyframes *self, ADPath *path, float error) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->mTempPointF_, new_ADPointF_init());
  if (path == nil || [path isEmpty]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The path must not be null or empty");
  }
  JreStrongAssign(&self->mKeyframeData_, [path approximateWithFloat:error]);
}

ADPathKeyframes *new_ADPathKeyframes_initWithADPath_withFloat_(ADPath *path, float error) {
  J2OBJC_NEW_IMPL(ADPathKeyframes, initWithADPath_withFloat_, path, error)
}

ADPathKeyframes *create_ADPathKeyframes_initWithADPath_withFloat_(ADPath *path, float error) {
  J2OBJC_CREATE_IMPL(ADPathKeyframes, initWithADPath_withFloat_, path, error)
}

ADPointF *ADPathKeyframes_interpolateInRangeWithFloat_withInt_withInt_(ADPathKeyframes *self, float fraction, int32_t startIndex, int32_t endIndex) {
  int32_t startBase = (startIndex * ADPathKeyframes_NUM_COMPONENTS);
  int32_t endBase = (endIndex * ADPathKeyframes_NUM_COMPONENTS);
  float startFraction = IOSFloatArray_Get(nil_chk(self->mKeyframeData_), startBase + ADPathKeyframes_FRACTION_OFFSET);
  float endFraction = IOSFloatArray_Get(self->mKeyframeData_, endBase + ADPathKeyframes_FRACTION_OFFSET);
  float intervalFraction = (fraction - startFraction) / (endFraction - startFraction);
  float startX = IOSFloatArray_Get(self->mKeyframeData_, startBase + ADPathKeyframes_X_OFFSET);
  float endX = IOSFloatArray_Get(self->mKeyframeData_, endBase + ADPathKeyframes_X_OFFSET);
  float startY = IOSFloatArray_Get(self->mKeyframeData_, startBase + ADPathKeyframes_Y_OFFSET);
  float endY = IOSFloatArray_Get(self->mKeyframeData_, endBase + ADPathKeyframes_Y_OFFSET);
  float x = ADPathKeyframes_interpolateWithFloat_withFloat_withFloat_(intervalFraction, startX, endX);
  float y = ADPathKeyframes_interpolateWithFloat_withFloat_withFloat_(intervalFraction, startY, endY);
  [((ADPointF *) nil_chk(self->mTempPointF_)) setWithFloat:x withFloat:y];
  return self->mTempPointF_;
}

ADPointF *ADPathKeyframes_pointForIndexWithInt_(ADPathKeyframes *self, int32_t index) {
  int32_t base = (index * ADPathKeyframes_NUM_COMPONENTS);
  int32_t xOffset = base + ADPathKeyframes_X_OFFSET;
  int32_t yOffset = base + ADPathKeyframes_Y_OFFSET;
  [((ADPointF *) nil_chk(self->mTempPointF_)) setWithFloat:IOSFloatArray_Get(nil_chk(self->mKeyframeData_), xOffset) withFloat:IOSFloatArray_Get(self->mKeyframeData_, yOffset)];
  return self->mTempPointF_;
}

float ADPathKeyframes_interpolateWithFloat_withFloat_withFloat_(float fraction, float startValue, float endValue) {
  ADPathKeyframes_initialize();
  float diff = endValue - startValue;
  return startValue + (diff * fraction);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADPathKeyframes)

J2OBJC_NAME_MAPPING(ADPathKeyframes, "r.android.animation", "AD")

@implementation ADPathKeyframes_SimpleIKeyframes

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADPathKeyframes_SimpleIKeyframes_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setEvaluatorWithADTypeEvaluator:(id<ADTypeEvaluator>)evaluator {
}

- (JavaUtilArrayList *)getIKeyframes {
  return JreLoadStatic(ADPathKeyframes, EMPTY_KEYFRAMES);
}

- (id<ADIKeyframes>)java_clone {
  id<ADIKeyframes> clone = nil;
  @try {
    clone = (id<ADIKeyframes>) cast_check([super java_clone], ADIKeyframes_class_());
  }
  @catch (JavaLangCloneNotSupportedException *e) {
  }
  return clone;
}

- (id<ADIKeyframes>)clone {
  return [self java_clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LADIKeyframes;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setEvaluatorWithADTypeEvaluator:);
  methods[2].selector = @selector(getIKeyframes);
  methods[3].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setEvaluator", "LADTypeEvaluator;", "()Ljava/util/ArrayList<Lr/android/animation/Keyframe;>;", "clone", "LADPathKeyframes;" };
  static const J2ObjcClassInfo _ADPathKeyframes_SimpleIKeyframes = { "SimpleIKeyframes", "r.android.animation", ptrTable, methods, NULL, 7, 0x40a, 4, 0, 4, -1, -1, -1, -1 };
  return &_ADPathKeyframes_SimpleIKeyframes;
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self java_clone] retain];
}

@end

void ADPathKeyframes_SimpleIKeyframes_init(ADPathKeyframes_SimpleIKeyframes *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADPathKeyframes_SimpleIKeyframes)

@implementation ADPathKeyframes_FloatIKeyframesBase

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADPathKeyframes_FloatIKeyframesBase_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (IOSClass *)getType {
  return JavaLangFloat_class_();
}

- (id)getValueWithFloat:(float)fraction {
  return JavaLangFloat_valueOfWithFloat_([self getFloatValueWithFloat:fraction]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getType);
  methods[2].selector = @selector(getValueWithFloat:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getValue", "F", "LADPathKeyframes;" };
  static const J2ObjcClassInfo _ADPathKeyframes_FloatIKeyframesBase = { "FloatIKeyframesBase", "r.android.animation", ptrTable, methods, NULL, 7, 0x408, 3, 0, 2, -1, -1, -1, -1 };
  return &_ADPathKeyframes_FloatIKeyframesBase;
}

@end

void ADPathKeyframes_FloatIKeyframesBase_init(ADPathKeyframes_FloatIKeyframesBase *self) {
  ADPathKeyframes_SimpleIKeyframes_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADPathKeyframes_FloatIKeyframesBase)

@implementation ADPathKeyframes_1

- (instancetype)initWithADPathKeyframes:(ADPathKeyframes *)outer$ {
  ADPathKeyframes_1_initWithADPathKeyframes_(self, outer$);
  return self;
}

- (float)getFloatValueWithFloat:(float)fraction {
  ADPointF *pointF = (ADPointF *) cast_chk([this$0_ getValueWithFloat:fraction], [ADPointF class]);
  return ((ADPointF *) nil_chk(pointF))->x_;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADPathKeyframes:);
  methods[1].selector = @selector(getFloatValueWithFloat:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADPathKeyframes;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADPathKeyframes;", "getFloatValue", "F", "createXFloatKeyframes" };
  static const J2ObjcClassInfo _ADPathKeyframes_1 = { "", "r.android.animation", ptrTable, methods, fields, 7, 0x8000, 2, 1, 0, -1, 3, -1, -1 };
  return &_ADPathKeyframes_1;
}

@end

void ADPathKeyframes_1_initWithADPathKeyframes_(ADPathKeyframes_1 *self, ADPathKeyframes *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  ADPathKeyframes_FloatIKeyframesBase_init(self);
}

ADPathKeyframes_1 *new_ADPathKeyframes_1_initWithADPathKeyframes_(ADPathKeyframes *outer$) {
  J2OBJC_NEW_IMPL(ADPathKeyframes_1, initWithADPathKeyframes_, outer$)
}

ADPathKeyframes_1 *create_ADPathKeyframes_1_initWithADPathKeyframes_(ADPathKeyframes *outer$) {
  J2OBJC_CREATE_IMPL(ADPathKeyframes_1, initWithADPathKeyframes_, outer$)
}

@implementation ADPathKeyframes_2

- (instancetype)initWithADPathKeyframes:(ADPathKeyframes *)outer$ {
  ADPathKeyframes_2_initWithADPathKeyframes_(self, outer$);
  return self;
}

- (float)getFloatValueWithFloat:(float)fraction {
  ADPointF *pointF = (ADPointF *) cast_chk([this$0_ getValueWithFloat:fraction], [ADPointF class]);
  return ((ADPointF *) nil_chk(pointF))->y_;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADPathKeyframes:);
  methods[1].selector = @selector(getFloatValueWithFloat:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADPathKeyframes;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADPathKeyframes;", "getFloatValue", "F", "createYFloatKeyframes" };
  static const J2ObjcClassInfo _ADPathKeyframes_2 = { "", "r.android.animation", ptrTable, methods, fields, 7, 0x8000, 2, 1, 0, -1, 3, -1, -1 };
  return &_ADPathKeyframes_2;
}

@end

void ADPathKeyframes_2_initWithADPathKeyframes_(ADPathKeyframes_2 *self, ADPathKeyframes *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  ADPathKeyframes_FloatIKeyframesBase_init(self);
}

ADPathKeyframes_2 *new_ADPathKeyframes_2_initWithADPathKeyframes_(ADPathKeyframes *outer$) {
  J2OBJC_NEW_IMPL(ADPathKeyframes_2, initWithADPathKeyframes_, outer$)
}

ADPathKeyframes_2 *create_ADPathKeyframes_2_initWithADPathKeyframes_(ADPathKeyframes *outer$) {
  J2OBJC_CREATE_IMPL(ADPathKeyframes_2, initWithADPathKeyframes_, outer$)
}

@implementation ADPathKeyframes_IntIKeyframesBase

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADPathKeyframes_IntIKeyframesBase_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (IOSClass *)getType {
  return JavaLangInteger_class_();
}

- (id)getValueWithFloat:(float)fraction {
  return JavaLangInteger_valueOfWithInt_([self getIntValueWithFloat:fraction]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getType);
  methods[2].selector = @selector(getValueWithFloat:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getValue", "F", "LADPathKeyframes;" };
  static const J2ObjcClassInfo _ADPathKeyframes_IntIKeyframesBase = { "IntIKeyframesBase", "r.android.animation", ptrTable, methods, NULL, 7, 0x408, 3, 0, 2, -1, -1, -1, -1 };
  return &_ADPathKeyframes_IntIKeyframesBase;
}

@end

void ADPathKeyframes_IntIKeyframesBase_init(ADPathKeyframes_IntIKeyframesBase *self) {
  ADPathKeyframes_SimpleIKeyframes_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADPathKeyframes_IntIKeyframesBase)

@implementation ADPathKeyframes_3

- (instancetype)initWithADPathKeyframes:(ADPathKeyframes *)outer$ {
  ADPathKeyframes_3_initWithADPathKeyframes_(self, outer$);
  return self;
}

- (int32_t)getIntValueWithFloat:(float)fraction {
  ADPointF *pointF = (ADPointF *) cast_chk([this$0_ getValueWithFloat:fraction], [ADPointF class]);
  return JavaLangMath_roundWithFloat_(((ADPointF *) nil_chk(pointF))->x_);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADPathKeyframes:);
  methods[1].selector = @selector(getIntValueWithFloat:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADPathKeyframes;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADPathKeyframes;", "getIntValue", "F", "createXIntKeyframes" };
  static const J2ObjcClassInfo _ADPathKeyframes_3 = { "", "r.android.animation", ptrTable, methods, fields, 7, 0x8000, 2, 1, 0, -1, 3, -1, -1 };
  return &_ADPathKeyframes_3;
}

@end

void ADPathKeyframes_3_initWithADPathKeyframes_(ADPathKeyframes_3 *self, ADPathKeyframes *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  ADPathKeyframes_IntIKeyframesBase_init(self);
}

ADPathKeyframes_3 *new_ADPathKeyframes_3_initWithADPathKeyframes_(ADPathKeyframes *outer$) {
  J2OBJC_NEW_IMPL(ADPathKeyframes_3, initWithADPathKeyframes_, outer$)
}

ADPathKeyframes_3 *create_ADPathKeyframes_3_initWithADPathKeyframes_(ADPathKeyframes *outer$) {
  J2OBJC_CREATE_IMPL(ADPathKeyframes_3, initWithADPathKeyframes_, outer$)
}

@implementation ADPathKeyframes_4

- (instancetype)initWithADPathKeyframes:(ADPathKeyframes *)outer$ {
  ADPathKeyframes_4_initWithADPathKeyframes_(self, outer$);
  return self;
}

- (int32_t)getIntValueWithFloat:(float)fraction {
  ADPointF *pointF = (ADPointF *) cast_chk([this$0_ getValueWithFloat:fraction], [ADPointF class]);
  return JavaLangMath_roundWithFloat_(((ADPointF *) nil_chk(pointF))->y_);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADPathKeyframes:);
  methods[1].selector = @selector(getIntValueWithFloat:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADPathKeyframes;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADPathKeyframes;", "getIntValue", "F", "createYIntKeyframes" };
  static const J2ObjcClassInfo _ADPathKeyframes_4 = { "", "r.android.animation", ptrTable, methods, fields, 7, 0x8000, 2, 1, 0, -1, 3, -1, -1 };
  return &_ADPathKeyframes_4;
}

@end

void ADPathKeyframes_4_initWithADPathKeyframes_(ADPathKeyframes_4 *self, ADPathKeyframes *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  ADPathKeyframes_IntIKeyframesBase_init(self);
}

ADPathKeyframes_4 *new_ADPathKeyframes_4_initWithADPathKeyframes_(ADPathKeyframes *outer$) {
  J2OBJC_NEW_IMPL(ADPathKeyframes_4, initWithADPathKeyframes_, outer$)
}

ADPathKeyframes_4 *create_ADPathKeyframes_4_initWithADPathKeyframes_(ADPathKeyframes *outer$) {
  J2OBJC_CREATE_IMPL(ADPathKeyframes_4, initWithADPathKeyframes_, outer$)
}
