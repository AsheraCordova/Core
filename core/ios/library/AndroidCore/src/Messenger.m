//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\os\Messenger.java
//

#include "Handler.h"
#include "IBinder.h"
#include "IMessenger.h"
#include "J2ObjC_source.h"
#include "Message.h"
#include "Messenger.h"
#include "java/lang/ClassCastException.h"


@interface ADMessenger () {
 @public
  id<ADIMessenger> mTarget_;
}

@end

J2OBJC_FIELD_SETTER(ADMessenger, mTarget_, id<ADIMessenger>)

@implementation ADMessenger

- (instancetype)initWithADHandler:(ADHandler *)target {
  ADMessenger_initWithADHandler_(self, target);
  return self;
}

- (void)sendWithADMessage:(ADMessage *)message {
  [((id<ADIMessenger>) nil_chk(mTarget_)) sendWithADMessage:message];
}

- (id<ADIBinder>)getBinder {
  return [((id<ADIMessenger>) nil_chk(mTarget_)) asBinder];
}

- (jboolean)isEqual:(id)otherObj {
  if (otherObj == nil) {
    return false;
  }
  @try {
    return [((id<ADIBinder>) nil_chk([((id<ADIMessenger>) nil_chk(mTarget_)) asBinder])) isEqual:[((ADMessenger *) cast_chk(otherObj, [ADMessenger class]))->mTarget_ asBinder]];
  }
  @catch (JavaLangClassCastException *e) {
  }
  return false;
}

- (NSUInteger)hash {
  return ((jint) [((id<ADIBinder>) nil_chk([((id<ADIMessenger>) nil_chk(mTarget_)) asBinder])) hash]);
}

- (jint)describeContents {
  return 0;
}

- (instancetype)initWithADIBinder:(id<ADIBinder>)target {
  ADMessenger_initWithADIBinder_(self, target);
  return self;
}

- (void)dealloc {
  RELEASE_(mTarget_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LADIBinder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADHandler:);
  methods[1].selector = @selector(sendWithADMessage:);
  methods[2].selector = @selector(getBinder);
  methods[3].selector = @selector(isEqual:);
  methods[4].selector = @selector(hash);
  methods[5].selector = @selector(describeContents);
  methods[6].selector = @selector(initWithADIBinder:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mTarget_", "LADIMessenger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADHandler;", "send", "LADMessage;", "LADRemoteException;", "equals", "LNSObject;", "hashCode", "LADIBinder;" };
  static const J2ObjcClassInfo _ADMessenger = { "Messenger", "r.android.os", ptrTable, methods, fields, 7, 0x11, 7, 1, -1, -1, -1, -1, -1 };
  return &_ADMessenger;
}

@end

void ADMessenger_initWithADHandler_(ADMessenger *self, ADHandler *target) {
  NSObject_init(self);
  JreStrongAssign(&self->mTarget_, [((ADHandler *) nil_chk(target)) getIMessenger]);
}

ADMessenger *new_ADMessenger_initWithADHandler_(ADHandler *target) {
  J2OBJC_NEW_IMPL(ADMessenger, initWithADHandler_, target)
}

ADMessenger *create_ADMessenger_initWithADHandler_(ADHandler *target) {
  J2OBJC_CREATE_IMPL(ADMessenger, initWithADHandler_, target)
}

void ADMessenger_initWithADIBinder_(ADMessenger *self, id<ADIBinder> target) {
  NSObject_init(self);
  JreStrongAssign(&self->mTarget_, ADIMessenger_Stub_asInterfaceWithADIBinder_(target));
}

ADMessenger *new_ADMessenger_initWithADIBinder_(id<ADIBinder> target) {
  J2OBJC_NEW_IMPL(ADMessenger, initWithADIBinder_, target)
}

ADMessenger *create_ADMessenger_initWithADIBinder_(id<ADIBinder> target) {
  J2OBJC_CREATE_IMPL(ADMessenger, initWithADIBinder_, target)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADMessenger)
