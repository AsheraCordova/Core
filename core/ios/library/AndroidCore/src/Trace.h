//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\stub\r\android\os\Trace.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Trace")
#ifdef RESTRICT_Trace
#define INCLUDE_ALL_Trace 0
#else
#define INCLUDE_ALL_Trace 1
#endif
#undef RESTRICT_Trace

#if !defined (ADTrace_) && (INCLUDE_ALL_Trace || defined(INCLUDE_ADTrace))
#define ADTrace_

@interface ADTrace : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)asyncTraceBeginWithInt:(jint)traceTagView
                  withNSString:(NSString *)nameForTrace
                       withInt:(jint)identityHashCode;

+ (void)asyncTraceEndWithInt:(jint)traceTagView
                withNSString:(NSString *)nameForTrace
                     withInt:(jint)identityHashCode;

+ (jboolean)isTagEnabledWithLong:(jlong)traceTag;

+ (void)traceBeginWithInt:(jint)traceTagView
             withNSString:(NSString *)string;

+ (void)traceBeginWithLong:(jlong)traceTag
              withNSString:(NSString *)traceName;

+ (void)traceCounterWithInt:(jint)traceTagView
               withNSString:(NSString *)string
                    withInt:(jint)i;

+ (void)traceEndWithInt:(jint)traceTagView;

+ (void)traceEndWithLong:(jlong)traceTag;

@end

J2OBJC_EMPTY_STATIC_INIT(ADTrace)

inline jint ADTrace_get_TRACE_TAG_VIEW(void);
#define ADTrace_TRACE_TAG_VIEW 0
J2OBJC_STATIC_FIELD_CONSTANT(ADTrace, TRACE_TAG_VIEW, jint)

FOUNDATION_EXPORT void ADTrace_init(ADTrace *self);

FOUNDATION_EXPORT ADTrace *new_ADTrace_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADTrace *create_ADTrace_init(void);

FOUNDATION_EXPORT void ADTrace_traceBeginWithInt_withNSString_(jint traceTagView, NSString *string);

FOUNDATION_EXPORT void ADTrace_traceEndWithInt_(jint traceTagView);

FOUNDATION_EXPORT jboolean ADTrace_isTagEnabledWithLong_(jlong traceTag);

FOUNDATION_EXPORT void ADTrace_traceBeginWithLong_withNSString_(jlong traceTag, NSString *traceName);

FOUNDATION_EXPORT void ADTrace_traceEndWithLong_(jlong traceTag);

FOUNDATION_EXPORT void ADTrace_asyncTraceEndWithInt_withNSString_withInt_(jint traceTagView, NSString *nameForTrace, jint identityHashCode);

FOUNDATION_EXPORT void ADTrace_asyncTraceBeginWithInt_withNSString_withInt_(jint traceTagView, NSString *nameForTrace, jint identityHashCode);

FOUNDATION_EXPORT void ADTrace_traceCounterWithInt_withNSString_withInt_(jint traceTagView, NSString *string, jint i);

J2OBJC_TYPE_LITERAL_HEADER(ADTrace)

@compatibility_alias RAndroidOsTrace ADTrace;

#endif

#pragma pop_macro("INCLUDE_ALL_Trace")
