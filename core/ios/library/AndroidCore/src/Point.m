//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\graphics\Point.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Parcel.h"
#include "Parcelable.h"
#include "Point.h"
#include "java/lang/Integer.h"


@interface ADPoint_1 : ADParcelable_Creator

- (instancetype)init;

/*!
 @brief Return a new point from the data in the specified parcel.
 */
- (ADPoint *)createFromParcelWithADParcel:(id<ADParcel>)inArg;

/*!
 @brief Return an array of rectangles of the specified size.
 */
- (IOSObjectArray *)newArrayWithInt:(jint)size OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADPoint_1)

__attribute__((unused)) static void ADPoint_1_init(ADPoint_1 *self);

__attribute__((unused)) static ADPoint_1 *new_ADPoint_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADPoint_1 *create_ADPoint_1_init(void);

J2OBJC_INITIALIZED_DEFN(ADPoint)

ADParcelable_Creator *ADPoint_CREATOR;

@implementation ADPoint

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADPoint_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)x
                    withInt:(jint)y {
  ADPoint_initWithInt_withInt_(self, x, y);
  return self;
}

- (instancetype)initWithADPoint:(ADPoint *)src {
  ADPoint_initWithADPoint_(self, src);
  return self;
}

- (void)setWithInt:(jint)x
           withInt:(jint)y {
  self->x_ = x;
  self->y_ = y;
}

- (void)setWithADPoint:(ADPoint *)src {
  self->x_ = ((ADPoint *) nil_chk(src))->x_;
  self->y_ = src->y_;
}

- (void)negate {
  x_ = -x_;
  y_ = -y_;
}

- (void)offsetWithInt:(jint)dx
              withInt:(jint)dy {
  x_ += dx;
  y_ += dy;
}

- (jboolean)equalsWithInt:(jint)x
                  withInt:(jint)y {
  return self->x_ == x && self->y_ == y;
}

- (jboolean)isEqual:(id)o {
  if (self == o) return true;
  if (o == nil || [self java_getClass] != [o java_getClass]) return false;
  ADPoint *point = (ADPoint *) cast_chk(o, [ADPoint class]);
  if (x_ != point->x_) return false;
  if (y_ != point->y_) return false;
  return true;
}

- (NSUInteger)hash {
  jint result = x_;
  result = 31 * result + y_;
  return result;
}

- (NSString *)description {
  return JreStrcat("$I$IC", @"Point(", x_, @", ", y_, ')');
}

- (NSString *)flattenToString {
  return JreStrcat("ICI", x_, 'x', y_);
}

+ (ADPoint *)unflattenFromStringWithNSString:(NSString *)s {
  return ADPoint_unflattenFromStringWithNSString_(s);
}

- (jint)describeContents {
  return 0;
}

- (void)writeToParcelWithADParcel:(id<ADParcel>)outArg
                          withInt:(jint)flags {
  [((id<ADParcel>) nil_chk(outArg)) writeIntWithInt:x_];
  [outArg writeIntWithInt:y_];
}

- (void)readFromParcelWithADParcel:(id<ADParcel>)inArg {
  x_ = [((id<ADParcel>) nil_chk(inArg)) readInt];
  y_ = [inArg readInt];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 3, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 4, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADPoint;", 0x9, 8, 9, 10, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithInt:withInt:);
  methods[2].selector = @selector(initWithADPoint:);
  methods[3].selector = @selector(setWithInt:withInt:);
  methods[4].selector = @selector(setWithADPoint:);
  methods[5].selector = @selector(negate);
  methods[6].selector = @selector(offsetWithInt:withInt:);
  methods[7].selector = @selector(equalsWithInt:withInt:);
  methods[8].selector = @selector(isEqual:);
  methods[9].selector = @selector(hash);
  methods[10].selector = @selector(description);
  methods[11].selector = @selector(flattenToString);
  methods[12].selector = @selector(unflattenFromStringWithNSString:);
  methods[13].selector = @selector(describeContents);
  methods[14].selector = @selector(writeToParcelWithADParcel:withInt:);
  methods[15].selector = @selector(readFromParcelWithADParcel:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "x_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "y_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "CREATOR", "LADParcelable_Creator;", .constantValue.asLong = 0, 0x19, -1, 15, 16, -1 },
  };
  static const void *ptrTable[] = { "II", "LADPoint;", "set", "offset", "equals", "LNSObject;", "hashCode", "toString", "unflattenFromString", "LNSString;", "LJavaLangNumberFormatException;", "writeToParcel", "LADParcel;I", "readFromParcel", "LADParcel;", &ADPoint_CREATOR, "Lr/android/os/Parcelable$Creator<Lr/android/graphics/Point;>;" };
  static const J2ObjcClassInfo _ADPoint = { "Point", "r.android.graphics", ptrTable, methods, fields, 7, 0x1, 16, 3, -1, -1, -1, -1, -1 };
  return &_ADPoint;
}

+ (void)initialize {
  if (self == [ADPoint class]) {
    JreStrongAssignAndConsume(&ADPoint_CREATOR, new_ADPoint_1_init());
    J2OBJC_SET_INITIALIZED(ADPoint)
  }
}

@end

void ADPoint_init(ADPoint *self) {
  NSObject_init(self);
}

ADPoint *new_ADPoint_init() {
  J2OBJC_NEW_IMPL(ADPoint, init)
}

ADPoint *create_ADPoint_init() {
  J2OBJC_CREATE_IMPL(ADPoint, init)
}

void ADPoint_initWithInt_withInt_(ADPoint *self, jint x, jint y) {
  NSObject_init(self);
  self->x_ = x;
  self->y_ = y;
}

ADPoint *new_ADPoint_initWithInt_withInt_(jint x, jint y) {
  J2OBJC_NEW_IMPL(ADPoint, initWithInt_withInt_, x, y)
}

ADPoint *create_ADPoint_initWithInt_withInt_(jint x, jint y) {
  J2OBJC_CREATE_IMPL(ADPoint, initWithInt_withInt_, x, y)
}

void ADPoint_initWithADPoint_(ADPoint *self, ADPoint *src) {
  NSObject_init(self);
  [self setWithADPoint:src];
}

ADPoint *new_ADPoint_initWithADPoint_(ADPoint *src) {
  J2OBJC_NEW_IMPL(ADPoint, initWithADPoint_, src)
}

ADPoint *create_ADPoint_initWithADPoint_(ADPoint *src) {
  J2OBJC_CREATE_IMPL(ADPoint, initWithADPoint_, src)
}

ADPoint *ADPoint_unflattenFromStringWithNSString_(NSString *s) {
  ADPoint_initialize();
  jint sep_ix = [((NSString *) nil_chk(s)) java_indexOfString:@"x"];
  return create_ADPoint_initWithInt_withInt_(JavaLangInteger_parseIntWithNSString_([s java_substring:0 endIndex:sep_ix]), JavaLangInteger_parseIntWithNSString_([s java_substring:sep_ix + 1]));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADPoint)

@implementation ADPoint_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADPoint_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ADPoint *)createFromParcelWithADParcel:(id<ADParcel>)inArg {
  ADPoint *r = create_ADPoint_init();
  [r readFromParcelWithADParcel:inArg];
  return r;
}

- (IOSObjectArray *)newArrayWithInt:(jint)size {
  return [IOSObjectArray arrayWithLength:size type:ADPoint_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADPoint;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[LADPoint;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createFromParcelWithADParcel:);
  methods[2].selector = @selector(newArrayWithInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "createFromParcel", "LADParcel;", "newArray", "I", "LADPoint;", "Lr/android/os/Parcelable$Creator<Lr/android/graphics/Point;>;" };
  static const J2ObjcClassInfo _ADPoint_1 = { "", "r.android.graphics", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 4, -1, -1, 5, -1 };
  return &_ADPoint_1;
}

@end

void ADPoint_1_init(ADPoint_1 *self) {
  ADParcelable_Creator_init(self);
}

ADPoint_1 *new_ADPoint_1_init() {
  J2OBJC_NEW_IMPL(ADPoint_1, init)
}

ADPoint_1 *create_ADPoint_1_init() {
  J2OBJC_CREATE_IMPL(ADPoint_1, init)
}
