//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\animation\TimeAnimator.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_TimeAnimator")
#ifdef RESTRICT_TimeAnimator
#define INCLUDE_ALL_TimeAnimator 0
#else
#define INCLUDE_ALL_TimeAnimator 1
#endif
#undef RESTRICT_TimeAnimator

#if !defined (ADTimeAnimator_) && (INCLUDE_ALL_TimeAnimator || defined(INCLUDE_ADTimeAnimator))
#define ADTimeAnimator_

#define RESTRICT_ValueAnimator 1
#define INCLUDE_ADValueAnimator 1
#include "ValueAnimator.h"

@class JavaLangBoolean;
@class JavaLangFloat;
@class JavaLangLong;
@protocol ADTimeAnimator_TimeListener;

/*!
 @brief This class provides a simple callback mechanism to listeners that is synchronized with all
  other animators in the system.There is no duration, interpolation, or object value-setting
  with this Animator.
 Instead, it is simply started, after which it proceeds to send out events
  on every animation frame to its TimeListener (if set), with information about this animator,
  the total elapsed time, and the elapsed time since the previous animation frame.
 */
@interface ADTimeAnimator : ADValueAnimator

#pragma mark Public

- (instancetype)init;

- (void)setCurrentPlayTimeWithLong:(int64_t)playTime;

/*!
 @brief Sets a listener that is sent update events throughout the life of
  an animation.
 @param listener the listener to be set.
 */
- (void)setTimeListenerWithADTimeAnimator_TimeListener:(id<ADTimeAnimator_TimeListener>)listener;

- (void)start;

#pragma mark Package-Private

- (bool)animateBasedOnTimeWithLong:(int64_t)currentTime;

- (void)animateValueWithFloat:(float)fraction;

- (void)initAnimation OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADTimeAnimator)

FOUNDATION_EXPORT void ADTimeAnimator_init(ADTimeAnimator *self);

FOUNDATION_EXPORT ADTimeAnimator *new_ADTimeAnimator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADTimeAnimator *create_ADTimeAnimator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADTimeAnimator)

@compatibility_alias RAndroidAnimationTimeAnimator ADTimeAnimator;


#endif

#if !defined (ADTimeAnimator_TimeListener_) && (INCLUDE_ALL_TimeAnimator || defined(INCLUDE_ADTimeAnimator_TimeListener))
#define ADTimeAnimator_TimeListener_

@class ADTimeAnimator;
@class JavaLangLong;

/*!
 @brief Implementors of this interface can set themselves as update listeners
  to a <code>TimeAnimator</code> instance to receive callbacks on every animation
  frame to receive the total time since the animator started and the delta time
  since the last frame.The first time the listener is called,
  deltaTime will be zero.
 The same is true for totalTime, unless the animator was
  set to a specific <code>currentPlayTime</code>
  prior to starting.
 */
@protocol ADTimeAnimator_TimeListener < JavaObject >

/*!
 @brief <p>Notifies listeners of the occurrence of another frame of the animation,
  along with information about the elapsed time.
 </p>
 @param animation The animator sending out the notification.
 @param totalTime The total time elapsed since the animator started, in milliseconds.
 @param deltaTime The time elapsed since the previous frame, in milliseconds.
 */
- (void)onTimeUpdateWithADTimeAnimator:(ADTimeAnimator *)animation
                              withLong:(int64_t)totalTime
                              withLong:(int64_t)deltaTime;

@end

J2OBJC_EMPTY_STATIC_INIT(ADTimeAnimator_TimeListener)

J2OBJC_TYPE_LITERAL_HEADER(ADTimeAnimator_TimeListener)


#endif

#pragma pop_macro("INCLUDE_ALL_TimeAnimator")
