//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\content\res\ColorStateList.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ColorStateList")
#ifdef RESTRICT_ColorStateList
#define INCLUDE_ALL_ColorStateList 0
#else
#define INCLUDE_ALL_ColorStateList 1
#endif
#undef RESTRICT_ColorStateList

#if !defined (ADColorStateList_) && (INCLUDE_ALL_ColorStateList || defined(INCLUDE_ADColorStateList))
#define ADColorStateList_

@class IOSIntArray;
@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangInteger;

@interface ADColorStateList : NSObject

#pragma mark Public

- (instancetype)initWithIntArray2:(IOSObjectArray *)states
                     withIntArray:(IOSIntArray *)colors;

- (int32_t)getColorForStateWithIntArray:(IOSIntArray *)stateSet
                                withInt:(int32_t)defaultColor;

- (IOSIntArray *)getColors;

- (int32_t)getDefaultColor;

- (IOSObjectArray *)getStates;

- (bool)hasFocusStateSpecified;

- (bool)hasStateWithInt:(int32_t)state;

- (bool)isOpaque;

- (bool)isStateful;

- (void)onColorsChanged;

- (void)setDefaultColorWithInt:(int32_t)mDefaultColor;

+ (ADColorStateList *)valueOfWithInt:(int32_t)color;

- (ADColorStateList *)withAlphaWithInt:(int32_t)alpha;

@end

J2OBJC_STATIC_INIT(ADColorStateList)

FOUNDATION_EXPORT void ADColorStateList_initWithIntArray2_withIntArray_(ADColorStateList *self, IOSObjectArray *states, IOSIntArray *colors);

FOUNDATION_EXPORT ADColorStateList *new_ADColorStateList_initWithIntArray2_withIntArray_(IOSObjectArray *states, IOSIntArray *colors) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADColorStateList *create_ADColorStateList_initWithIntArray2_withIntArray_(IOSObjectArray *states, IOSIntArray *colors);

FOUNDATION_EXPORT ADColorStateList *ADColorStateList_valueOfWithInt_(int32_t color);

J2OBJC_TYPE_LITERAL_HEADER(ADColorStateList)

@compatibility_alias RAndroidContentResColorStateList ADColorStateList;


#endif

#pragma pop_macro("INCLUDE_ALL_ColorStateList")
