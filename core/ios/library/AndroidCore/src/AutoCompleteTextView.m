//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\widget\AutoCompleteTextView.java
//

#define J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION 1




#include "AutoCompleteTextView.h"
#include "DataSetObserver.h"
#include "EditText.h"
#include "Editable.h"
#include "Filter.h"
#include "Filterable.h"
#include "IOSClass.h"
#include "IWidget.h"
#include "J2ObjC_source.h"
#include "KeyEvent.h"
#include "ListAdapter.h"
#include "ListPopupWindow.h"
#include "PopupWindow.h"
#include "RelativeLayout.h"
#include "TextView.h"
#include "TextWatcher.h"
#include "View.h"
#include "java/lang/Boolean.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Integer.h"
#include "java/lang/Runnable.h"
#include "java/lang/ref/WeakReference.h"


@class ADAutoCompleteTextView_MyWatcher;
@class ADAutoCompleteTextView_PopupDataSetObserver;


#pragma clang diagnostic error "-Wreturn-type"
#pragma clang diagnostic ignored "-Wswitch"


@interface ADAutoCompleteTextView () {
 @public
  ADListPopupWindow *mPopup_;
  int32_t mHintResource_;
  id<ADListAdapter> mAdapter_;
  ADFilter *mFilter_;
  int32_t mThreshold_;
  int32_t mDropDownAnchorId_;
  bool mDropDownDismissedOnCompletion_;
  int32_t mLastKeyCode_;
  ADAutoCompleteTextView_MyWatcher *mAutoCompleteTextWatcher_;
  bool mBlockCompletion_;
  bool mPopupCanBeUpdated_;
  ADAutoCompleteTextView_PopupDataSetObserver *mObserver_;
  bool mBackCallbackRegistered_;
}

- (void)updateDropDownForFilterWithInt:(int32_t)count;

- (void)registerOnBackInvokedCallback;

- (void)unregisterOnBackInvokedCallback;

@end

J2OBJC_FIELD_SETTER(ADAutoCompleteTextView, mPopup_, ADListPopupWindow *)
J2OBJC_FIELD_SETTER(ADAutoCompleteTextView, mAdapter_, id<ADListAdapter>)
J2OBJC_FIELD_SETTER(ADAutoCompleteTextView, mFilter_, ADFilter *)
J2OBJC_FIELD_SETTER(ADAutoCompleteTextView, mAutoCompleteTextWatcher_, ADAutoCompleteTextView_MyWatcher *)
J2OBJC_FIELD_SETTER(ADAutoCompleteTextView, mObserver_, ADAutoCompleteTextView_PopupDataSetObserver *)

__attribute__((unused)) static void ADAutoCompleteTextView_refreshAutoCompleteResults(ADAutoCompleteTextView *self);

__attribute__((unused)) static void ADAutoCompleteTextView_updateDropDownForFilterWithInt_(ADAutoCompleteTextView *self, int32_t count);

__attribute__((unused)) static void ADAutoCompleteTextView_registerOnBackInvokedCallback(ADAutoCompleteTextView *self);

__attribute__((unused)) static void ADAutoCompleteTextView_unregisterOnBackInvokedCallback(ADAutoCompleteTextView *self);

@interface ADAutoCompleteTextView_1 : NSObject < ADPopupWindow_OnDismissListener > {
 @public
  ADAutoCompleteTextView *this$0_;
  id<ADAutoCompleteTextView_OnDismissListener> val$dismissListener_;
}

- (instancetype)initWithADAutoCompleteTextView:(ADAutoCompleteTextView *)outer$
  withADAutoCompleteTextView_OnDismissListener:(id<ADAutoCompleteTextView_OnDismissListener>)capture$0;

- (void)onDismiss;

@end

J2OBJC_EMPTY_STATIC_INIT(ADAutoCompleteTextView_1)

__attribute__((unused)) static void ADAutoCompleteTextView_1_initWithADAutoCompleteTextView_withADAutoCompleteTextView_OnDismissListener_(ADAutoCompleteTextView_1 *self, ADAutoCompleteTextView *outer$, id<ADAutoCompleteTextView_OnDismissListener> capture$0);

__attribute__((unused)) static ADAutoCompleteTextView_1 *new_ADAutoCompleteTextView_1_initWithADAutoCompleteTextView_withADAutoCompleteTextView_OnDismissListener_(ADAutoCompleteTextView *outer$, id<ADAutoCompleteTextView_OnDismissListener> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADAutoCompleteTextView_1 *create_ADAutoCompleteTextView_1_initWithADAutoCompleteTextView_withADAutoCompleteTextView_OnDismissListener_(ADAutoCompleteTextView *outer$, id<ADAutoCompleteTextView_OnDismissListener> capture$0);


@interface ADAutoCompleteTextView_MyWatcher : NSObject < ADTextWatcher > {
 @public
  ADAutoCompleteTextView *this$0_;
  bool mOpenBefore_;
}

- (instancetype)initWithADAutoCompleteTextView:(ADAutoCompleteTextView *)outer$;

- (void)beforeTextChangedWithJavaLangCharSequence:(id<JavaLangCharSequence>)s
                                          withInt:(int32_t)start
                                          withInt:(int32_t)count
                                          withInt:(int32_t)after;

- (void)afterTextChangedWithADEditable:(id<ADEditable>)s;

- (void)onTextChangedWithJavaLangCharSequence:(id<JavaLangCharSequence>)s
                                      withInt:(int32_t)start
                                      withInt:(int32_t)before
                                      withInt:(int32_t)count;

@end

J2OBJC_EMPTY_STATIC_INIT(ADAutoCompleteTextView_MyWatcher)

__attribute__((unused)) static void ADAutoCompleteTextView_MyWatcher_initWithADAutoCompleteTextView_(ADAutoCompleteTextView_MyWatcher *self, ADAutoCompleteTextView *outer$);

__attribute__((unused)) static ADAutoCompleteTextView_MyWatcher *new_ADAutoCompleteTextView_MyWatcher_initWithADAutoCompleteTextView_(ADAutoCompleteTextView *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADAutoCompleteTextView_MyWatcher *create_ADAutoCompleteTextView_MyWatcher_initWithADAutoCompleteTextView_(ADAutoCompleteTextView *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ADAutoCompleteTextView_MyWatcher)


@interface ADAutoCompleteTextView_OnDismissListener : NSObject

@end

@interface ADAutoCompleteTextView_PopupDataSetObserver : ADDataSetObserver {
 @public
  JavaLangRefWeakReference *mViewReference_;
  id<JavaLangRunnable> updateRunnable_;
}

- (instancetype)initWithADAutoCompleteTextView:(ADAutoCompleteTextView *)view;

- (void)onChanged;

@end

J2OBJC_EMPTY_STATIC_INIT(ADAutoCompleteTextView_PopupDataSetObserver)

J2OBJC_FIELD_SETTER(ADAutoCompleteTextView_PopupDataSetObserver, mViewReference_, JavaLangRefWeakReference *)
J2OBJC_FIELD_SETTER(ADAutoCompleteTextView_PopupDataSetObserver, updateRunnable_, id<JavaLangRunnable>)

__attribute__((unused)) static void ADAutoCompleteTextView_PopupDataSetObserver_initWithADAutoCompleteTextView_(ADAutoCompleteTextView_PopupDataSetObserver *self, ADAutoCompleteTextView *view);

__attribute__((unused)) static ADAutoCompleteTextView_PopupDataSetObserver *new_ADAutoCompleteTextView_PopupDataSetObserver_initWithADAutoCompleteTextView_(ADAutoCompleteTextView *view) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADAutoCompleteTextView_PopupDataSetObserver *create_ADAutoCompleteTextView_PopupDataSetObserver_initWithADAutoCompleteTextView_(ADAutoCompleteTextView *view);

J2OBJC_TYPE_LITERAL_HEADER(ADAutoCompleteTextView_PopupDataSetObserver)


@interface ADAutoCompleteTextView_PopupDataSetObserver_1 : NSObject < JavaLangRunnable > {
 @public
  ADAutoCompleteTextView_PopupDataSetObserver *this$0_;
}

- (instancetype)initWithADAutoCompleteTextView_PopupDataSetObserver:(ADAutoCompleteTextView_PopupDataSetObserver *)outer$;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(ADAutoCompleteTextView_PopupDataSetObserver_1)

__attribute__((unused)) static void ADAutoCompleteTextView_PopupDataSetObserver_1_initWithADAutoCompleteTextView_PopupDataSetObserver_(ADAutoCompleteTextView_PopupDataSetObserver_1 *self, ADAutoCompleteTextView_PopupDataSetObserver *outer$);

__attribute__((unused)) static ADAutoCompleteTextView_PopupDataSetObserver_1 *new_ADAutoCompleteTextView_PopupDataSetObserver_1_initWithADAutoCompleteTextView_PopupDataSetObserver_(ADAutoCompleteTextView_PopupDataSetObserver *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADAutoCompleteTextView_PopupDataSetObserver_1 *create_ADAutoCompleteTextView_PopupDataSetObserver_1_initWithADAutoCompleteTextView_PopupDataSetObserver_(ADAutoCompleteTextView_PopupDataSetObserver *outer$);


NSString *ADAutoCompleteTextView_TAG = @"AutoCompleteTextView";

@implementation ADAutoCompleteTextView

- (int32_t)getDropDownWidth {
  return [((ADListPopupWindow *) nil_chk(mPopup_)) getWidth];
}

- (void)setDropDownWidthWithInt:(int32_t)width {
  [((ADListPopupWindow *) nil_chk(mPopup_)) setWidthWithInt:width];
}

- (int32_t)getDropDownHeight {
  return [((ADListPopupWindow *) nil_chk(mPopup_)) getHeight];
}

- (void)setDropDownHeightWithInt:(int32_t)height {
  [((ADListPopupWindow *) nil_chk(mPopup_)) setHeightWithInt:height];
}

- (void)setDropDownVerticalOffsetWithInt:(int32_t)offset {
  [((ADListPopupWindow *) nil_chk(mPopup_)) setVerticalOffsetWithInt:offset];
}

- (int32_t)getDropDownVerticalOffset {
  return [((ADListPopupWindow *) nil_chk(mPopup_)) getVerticalOffset];
}

- (void)setDropDownHorizontalOffsetWithInt:(int32_t)offset {
  [((ADListPopupWindow *) nil_chk(mPopup_)) setHorizontalOffsetWithInt:offset];
}

- (int32_t)getDropDownHorizontalOffset {
  return [((ADListPopupWindow *) nil_chk(mPopup_)) getHorizontalOffset];
}

- (int32_t)getThreshold {
  return mThreshold_;
}

- (void)setThresholdWithInt:(int32_t)threshold {
  if (threshold <= 0) {
    threshold = 1;
  }
  mThreshold_ = threshold;
}

- (void)setOnDismissListenerWithADAutoCompleteTextView_OnDismissListener:(id<ADAutoCompleteTextView_OnDismissListener>)dismissListener {
  id<ADPopupWindow_OnDismissListener> wrappedListener = nil;
  if (dismissListener != nil) {
    wrappedListener = create_ADAutoCompleteTextView_1_initWithADAutoCompleteTextView_withADAutoCompleteTextView_OnDismissListener_(self, dismissListener);
  }
  [((ADListPopupWindow *) nil_chk(mPopup_)) setOnDismissListenerWithADPopupWindow_OnDismissListener:wrappedListener];
}

- (void)setAdapterWithADListAdapter:(id<ADListAdapter, ADFilterable>)adapter {
  if (mObserver_ == nil) {
    JreStrongAssignAndConsume(&mObserver_, new_ADAutoCompleteTextView_PopupDataSetObserver_initWithADAutoCompleteTextView_(self));
  }
  else if (mAdapter_ != nil) {
    [mAdapter_ unregisterDataSetObserverWithADDataSetObserver:mObserver_];
  }
  JreStrongAssign(&mAdapter_, adapter);
  if (mAdapter_ != nil) {
    JreStrongAssign(&mFilter_, [((id<ADFilterable>) cast_check(mAdapter_, ADFilterable_class_())) getFilter]);
    [((id<ADListAdapter, ADFilterable>) nil_chk(adapter)) registerDataSetObserverWithADDataSetObserver:mObserver_];
  }
  else {
    JreStrongAssign(&mFilter_, nil);
  }
}

- (bool)onKeyDownWithInt:(int32_t)keyCode
          withADKeyEvent:(ADKeyEvent *)event {
  if ([((ADListPopupWindow *) nil_chk(mPopup_)) onKeyDownWithInt:keyCode withADKeyEvent:event]) {
    return true;
  }
  if (![self isPopupShowing]) {
    switch (keyCode) {
      case ADKeyEvent_KEYCODE_DPAD_DOWN:
      if ([((ADKeyEvent *) nil_chk(event)) hasNoModifiers]) {
        [self performValidation];
      }
    }
  }
  if ([self isPopupShowing] && keyCode == ADKeyEvent_KEYCODE_TAB && [((ADKeyEvent *) nil_chk(event)) hasNoModifiers]) {
    return true;
  }
  mLastKeyCode_ = keyCode;
  bool handled = [super onKeyDownWithInt:keyCode withADKeyEvent:event];
  mLastKeyCode_ = ADKeyEvent_KEYCODE_UNKNOWN;
  if (handled && [self isPopupShowing]) {
    [self clearListSelection];
  }
  return handled;
}

- (bool)enoughToFilter {
  return [((NSString *) nil_chk([self getText])) java_length] >= mThreshold_;
}

- (void)refreshAutoCompleteResults {
  ADAutoCompleteTextView_refreshAutoCompleteResults(self);
}

- (bool)isPopupShowing {
  return [((ADListPopupWindow *) nil_chk(mPopup_)) isShowing];
}

- (void)clearListSelection {
  [((ADListPopupWindow *) nil_chk(mPopup_)) clearListSelection];
}

- (void)performFilteringWithJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                         withInt:(int32_t)keyCode {
  [((ADFilter *) nil_chk(mFilter_)) filterWithJavaLangCharSequence:text withADFilter_FilterListener:self];
}

- (void)onFilterCompleteWithInt:(int32_t)count {
  ADAutoCompleteTextView_updateDropDownForFilterWithInt_(self, count);
}

- (void)updateDropDownForFilterWithInt:(int32_t)count {
  ADAutoCompleteTextView_updateDropDownForFilterWithInt_(self, count);
}

- (void)dismissDropDown {
  [((ADListPopupWindow *) nil_chk(mPopup_)) dismiss];
  mPopupCanBeUpdated_ = false;
}

- (void)showDropDown {
  if ([((ADListPopupWindow *) nil_chk(mPopup_)) getAnchorView] == nil) {
    if (mDropDownAnchorId_ != ADView_NO_ID) {
      [((ADListPopupWindow *) nil_chk(mPopup_)) setAnchorViewWithADView:[((ADView *) nil_chk([self getRootView])) findViewByIdWithInt:mDropDownAnchorId_]];
    }
    else {
      [((ADListPopupWindow *) nil_chk(mPopup_)) setAnchorViewWithADView:self];
    }
  }
  if (![self isPopupShowing]) {
  }
  [((ADListPopupWindow *) nil_chk(mPopup_)) show];
  if (![((ADListPopupWindow *) nil_chk(mPopup_)) isDropDownAlwaysVisible]) {
    ADAutoCompleteTextView_registerOnBackInvokedCallback(self);
  }
}

- (void)init__WithADView:(ADView *)decorView
              withADView:(ADView *)contentView
          withADTextView:(ADTextView *)promptView
withADRelativeLayout_LayoutParams:(ADRelativeLayout_LayoutParams *)params {
  JreStrongAssignAndConsume(&mPopup_, new_ADListPopupWindow_initWithADView_withADView_withADRelativeLayout_LayoutParams_(decorView, contentView, params));
  [mPopup_ setAnchorViewWithADView:self];
  [((ADListPopupWindow *) nil_chk(mPopup_)) setPromptViewWithADTextView:promptView];
}

- (instancetype)initWithASIWidget:(id<ASIWidget>)widget {
  ADAutoCompleteTextView_initWithASIWidget_(self, widget);
  return self;
}

- (void)performValidation {
}

- (void)registerOnBackInvokedCallback {
  ADAutoCompleteTextView_registerOnBackInvokedCallback(self);
}

- (void)unregisterOnBackInvokedCallback {
  ADAutoCompleteTextView_unregisterOnBackInvokedCallback(self);
}

- (id<ADTextWatcher>)getTextWatcher {
  if (mAutoCompleteTextWatcher_ == nil) {
    JreStrongAssignAndConsume(&mAutoCompleteTextWatcher_, new_ADAutoCompleteTextView_MyWatcher_initWithADAutoCompleteTextView_(self));
  }
  return mAutoCompleteTextWatcher_;
}

- (void)setAnchorViewWithADView:(ADView *)anchorView {
  [((ADListPopupWindow *) nil_chk(mPopup_)) setAnchorViewWithADView:anchorView];
}

- (ADDataSetObserver *)getObserver {
  return mObserver_;
}

- (void)dealloc {
  RELEASE_(mPopup_);
  RELEASE_(mAdapter_);
  RELEASE_(mFilter_);
  RELEASE_(mAutoCompleteTextWatcher_);
  RELEASE_(mObserver_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, 10, -1, -1 },
    { NULL, "Z", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 16, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADTextWatcher;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "LADDataSetObserver;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getDropDownWidth);
  methods[1].selector = @selector(setDropDownWidthWithInt:);
  methods[2].selector = @selector(getDropDownHeight);
  methods[3].selector = @selector(setDropDownHeightWithInt:);
  methods[4].selector = @selector(setDropDownVerticalOffsetWithInt:);
  methods[5].selector = @selector(getDropDownVerticalOffset);
  methods[6].selector = @selector(setDropDownHorizontalOffsetWithInt:);
  methods[7].selector = @selector(getDropDownHorizontalOffset);
  methods[8].selector = @selector(getThreshold);
  methods[9].selector = @selector(setThresholdWithInt:);
  methods[10].selector = @selector(setOnDismissListenerWithADAutoCompleteTextView_OnDismissListener:);
  methods[11].selector = @selector(setAdapterWithADListAdapter:);
  methods[12].selector = @selector(onKeyDownWithInt:withADKeyEvent:);
  methods[13].selector = @selector(enoughToFilter);
  methods[14].selector = @selector(refreshAutoCompleteResults);
  methods[15].selector = @selector(isPopupShowing);
  methods[16].selector = @selector(clearListSelection);
  methods[17].selector = @selector(performFilteringWithJavaLangCharSequence:withInt:);
  methods[18].selector = @selector(onFilterCompleteWithInt:);
  methods[19].selector = @selector(updateDropDownForFilterWithInt:);
  methods[20].selector = @selector(dismissDropDown);
  methods[21].selector = @selector(showDropDown);
  methods[22].selector = @selector(init__WithADView:withADView:withADTextView:withADRelativeLayout_LayoutParams:);
  methods[23].selector = @selector(initWithASIWidget:);
  methods[24].selector = @selector(performValidation);
  methods[25].selector = @selector(registerOnBackInvokedCallback);
  methods[26].selector = @selector(unregisterOnBackInvokedCallback);
  methods[27].selector = @selector(getTextWatcher);
  methods[28].selector = @selector(setAnchorViewWithADView:);
  methods[29].selector = @selector(getObserver);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEBUG", "Z", .constantValue.asBOOL = ADAutoCompleteTextView_DEBUG, 0x18, -1, -1, -1, -1 },
    { "TAG", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 22, -1, -1 },
    { "EXPAND_MAX", "I", .constantValue.asInt = ADAutoCompleteTextView_EXPAND_MAX, 0x18, -1, -1, -1, -1 },
    { "mPopup_", "LADListPopupWindow;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mHintResource_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mAdapter_", "LADListAdapter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mFilter_", "LADFilter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mThreshold_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mDropDownAnchorId_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mDropDownDismissedOnCompletion_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mLastKeyCode_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mAutoCompleteTextWatcher_", "LADAutoCompleteTextView_MyWatcher;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mBlockCompletion_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mPopupCanBeUpdated_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mObserver_", "LADAutoCompleteTextView_PopupDataSetObserver;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mBackCallbackRegistered_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setDropDownWidth", "I", "setDropDownHeight", "setDropDownVerticalOffset", "setDropDownHorizontalOffset", "setThreshold", "setOnDismissListener", "LADAutoCompleteTextView_OnDismissListener;", "setAdapter", "LADListAdapter;", "<T::Lr/android/widget/ListAdapter;:Lr/android/widget/Filterable;>(TT;)V", "onKeyDown", "ILADKeyEvent;", "performFiltering", "LJavaLangCharSequence;I", "onFilterComplete", "updateDropDownForFilter", "init", "LADView;LADView;LADTextView;LADRelativeLayout_LayoutParams;", "LASIWidget;", "setAnchorView", "LADView;", &ADAutoCompleteTextView_TAG, "LADAutoCompleteTextView_MyWatcher;LADAutoCompleteTextView_OnDismissListener;LADAutoCompleteTextView_PopupDataSetObserver;" };
  static const J2ObjcClassInfo _ADAutoCompleteTextView = { "AutoCompleteTextView", "r.android.widget", ptrTable, methods, fields, 7, 0x401, 30, 16, -1, 23, -1, -1, -1 };
  return &_ADAutoCompleteTextView;
}

@end

void ADAutoCompleteTextView_refreshAutoCompleteResults(ADAutoCompleteTextView *self) {
  if ([self enoughToFilter]) {
    if (self->mFilter_ != nil) {
      self->mPopupCanBeUpdated_ = true;
      [self performFilteringWithJavaLangCharSequence:[self getText] withInt:self->mLastKeyCode_];
    }
  }
  else {
    if (![((ADListPopupWindow *) nil_chk(self->mPopup_)) isDropDownAlwaysVisible]) {
      [self dismissDropDown];
    }
    if (self->mFilter_ != nil) {
      [self->mFilter_ filterWithJavaLangCharSequence:nil];
    }
  }
}

void ADAutoCompleteTextView_updateDropDownForFilterWithInt_(ADAutoCompleteTextView *self, int32_t count) {
  if ([self getWindowVisibility] == ADView_GONE) return;
  bool dropDownAlwaysVisible = [((ADListPopupWindow *) nil_chk(self->mPopup_)) isDropDownAlwaysVisible];
  bool enoughToFilter = [self enoughToFilter];
  if ((count > 0 || dropDownAlwaysVisible) && enoughToFilter) {
    if (self->mPopupCanBeUpdated_) {
      [self showDropDown];
    }
  }
  else if (!dropDownAlwaysVisible && [self isPopupShowing]) {
    [self dismissDropDown];
    self->mPopupCanBeUpdated_ = true;
  }
}

void ADAutoCompleteTextView_initWithASIWidget_(ADAutoCompleteTextView *self, id<ASIWidget> widget) {
  ADEditText_initWithASIWidget_(self, widget);
  self->mDropDownDismissedOnCompletion_ = true;
  self->mLastKeyCode_ = ADKeyEvent_KEYCODE_UNKNOWN;
  self->mPopupCanBeUpdated_ = true;
  self->mThreshold_ = 2;
}

void ADAutoCompleteTextView_registerOnBackInvokedCallback(ADAutoCompleteTextView *self) {
}

void ADAutoCompleteTextView_unregisterOnBackInvokedCallback(ADAutoCompleteTextView *self) {
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADAutoCompleteTextView)

J2OBJC_NAME_MAPPING(ADAutoCompleteTextView, "r.android.widget", "AD")

@implementation ADAutoCompleteTextView_1

- (instancetype)initWithADAutoCompleteTextView:(ADAutoCompleteTextView *)outer$
  withADAutoCompleteTextView_OnDismissListener:(id<ADAutoCompleteTextView_OnDismissListener>)capture$0 {
  ADAutoCompleteTextView_1_initWithADAutoCompleteTextView_withADAutoCompleteTextView_OnDismissListener_(self, outer$, capture$0);
  return self;
}

- (void)onDismiss {
  [((id<ADAutoCompleteTextView_OnDismissListener>) nil_chk(val$dismissListener_)) onDismiss];
  ADAutoCompleteTextView_unregisterOnBackInvokedCallback(this$0_);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$dismissListener_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADAutoCompleteTextView:withADAutoCompleteTextView_OnDismissListener:);
  methods[1].selector = @selector(onDismiss);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADAutoCompleteTextView;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$dismissListener_", "LADAutoCompleteTextView_OnDismissListener;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADAutoCompleteTextView;LADAutoCompleteTextView_OnDismissListener;", "LADAutoCompleteTextView;", "setOnDismissListenerWithADAutoCompleteTextView_OnDismissListener:" };
  static const J2ObjcClassInfo _ADAutoCompleteTextView_1 = { "", "r.android.widget", ptrTable, methods, fields, 7, 0x8000, 2, 2, 1, -1, 2, -1, -1 };
  return &_ADAutoCompleteTextView_1;
}

@end

void ADAutoCompleteTextView_1_initWithADAutoCompleteTextView_withADAutoCompleteTextView_OnDismissListener_(ADAutoCompleteTextView_1 *self, ADAutoCompleteTextView *outer$, id<ADAutoCompleteTextView_OnDismissListener> capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$dismissListener_, capture$0);
  NSObject_init(self);
}

ADAutoCompleteTextView_1 *new_ADAutoCompleteTextView_1_initWithADAutoCompleteTextView_withADAutoCompleteTextView_OnDismissListener_(ADAutoCompleteTextView *outer$, id<ADAutoCompleteTextView_OnDismissListener> capture$0) {
  J2OBJC_NEW_IMPL(ADAutoCompleteTextView_1, initWithADAutoCompleteTextView_withADAutoCompleteTextView_OnDismissListener_, outer$, capture$0)
}

ADAutoCompleteTextView_1 *create_ADAutoCompleteTextView_1_initWithADAutoCompleteTextView_withADAutoCompleteTextView_OnDismissListener_(ADAutoCompleteTextView *outer$, id<ADAutoCompleteTextView_OnDismissListener> capture$0) {
  J2OBJC_CREATE_IMPL(ADAutoCompleteTextView_1, initWithADAutoCompleteTextView_withADAutoCompleteTextView_OnDismissListener_, outer$, capture$0)
}

@implementation ADAutoCompleteTextView_MyWatcher

- (instancetype)initWithADAutoCompleteTextView:(ADAutoCompleteTextView *)outer$ {
  ADAutoCompleteTextView_MyWatcher_initWithADAutoCompleteTextView_(self, outer$);
  return self;
}

- (void)beforeTextChangedWithJavaLangCharSequence:(id<JavaLangCharSequence>)s
                                          withInt:(int32_t)start
                                          withInt:(int32_t)count
                                          withInt:(int32_t)after {
  if (this$0_->mBlockCompletion_) return;
  mOpenBefore_ = [this$0_ isPopupShowing];
}

- (void)afterTextChangedWithADEditable:(id<ADEditable>)s {
  if (this$0_->mBlockCompletion_) return;
  if (mOpenBefore_ && ![this$0_ isPopupShowing]) return;
  ADAutoCompleteTextView_refreshAutoCompleteResults(this$0_);
}

- (void)onTextChangedWithJavaLangCharSequence:(id<JavaLangCharSequence>)s
                                      withInt:(int32_t)start
                                      withInt:(int32_t)before
                                      withInt:(int32_t)count {
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADAutoCompleteTextView:);
  methods[1].selector = @selector(beforeTextChangedWithJavaLangCharSequence:withInt:withInt:withInt:);
  methods[2].selector = @selector(afterTextChangedWithADEditable:);
  methods[3].selector = @selector(onTextChangedWithJavaLangCharSequence:withInt:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADAutoCompleteTextView;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "mOpenBefore_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADAutoCompleteTextView;", "beforeTextChanged", "LJavaLangCharSequence;III", "afterTextChanged", "LADEditable;", "onTextChanged" };
  static const J2ObjcClassInfo _ADAutoCompleteTextView_MyWatcher = { "MyWatcher", "r.android.widget", ptrTable, methods, fields, 7, 0x2, 4, 2, 0, -1, -1, -1, -1 };
  return &_ADAutoCompleteTextView_MyWatcher;
}

@end

void ADAutoCompleteTextView_MyWatcher_initWithADAutoCompleteTextView_(ADAutoCompleteTextView_MyWatcher *self, ADAutoCompleteTextView *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

ADAutoCompleteTextView_MyWatcher *new_ADAutoCompleteTextView_MyWatcher_initWithADAutoCompleteTextView_(ADAutoCompleteTextView *outer$) {
  J2OBJC_NEW_IMPL(ADAutoCompleteTextView_MyWatcher, initWithADAutoCompleteTextView_, outer$)
}

ADAutoCompleteTextView_MyWatcher *create_ADAutoCompleteTextView_MyWatcher_initWithADAutoCompleteTextView_(ADAutoCompleteTextView *outer$) {
  J2OBJC_CREATE_IMPL(ADAutoCompleteTextView_MyWatcher, initWithADAutoCompleteTextView_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADAutoCompleteTextView_MyWatcher)

@implementation ADAutoCompleteTextView_OnDismissListener

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(onDismiss);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LADAutoCompleteTextView;" };
  static const J2ObjcClassInfo _ADAutoCompleteTextView_OnDismissListener = { "OnDismissListener", "r.android.widget", ptrTable, methods, NULL, 7, 0x609, 1, 0, 0, -1, -1, -1, -1 };
  return &_ADAutoCompleteTextView_OnDismissListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADAutoCompleteTextView_OnDismissListener)

@implementation ADAutoCompleteTextView_PopupDataSetObserver

- (instancetype)initWithADAutoCompleteTextView:(ADAutoCompleteTextView *)view {
  ADAutoCompleteTextView_PopupDataSetObserver_initWithADAutoCompleteTextView_(self, view);
  return self;
}

- (void)onChanged {
  ADAutoCompleteTextView *textView = [((JavaLangRefWeakReference *) nil_chk(mViewReference_)) get];
  if (textView != nil && textView->mAdapter_ != nil) {
    [textView postWithJavaLangRunnable:updateRunnable_];
  }
}

- (void)dealloc {
  RELEASE_(mViewReference_);
  RELEASE_(updateRunnable_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADAutoCompleteTextView:);
  methods[1].selector = @selector(onChanged);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mViewReference_", "LJavaLangRefWeakReference;", .constantValue.asLong = 0, 0x12, -1, -1, 1, -1 },
    { "updateRunnable_", "LJavaLangRunnable;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADAutoCompleteTextView;", "Ljava/lang/ref/WeakReference<Lr/android/widget/AutoCompleteTextView;>;" };
  static const J2ObjcClassInfo _ADAutoCompleteTextView_PopupDataSetObserver = { "PopupDataSetObserver", "r.android.widget", ptrTable, methods, fields, 7, 0xa, 2, 2, 0, -1, -1, -1, -1 };
  return &_ADAutoCompleteTextView_PopupDataSetObserver;
}

@end

void ADAutoCompleteTextView_PopupDataSetObserver_initWithADAutoCompleteTextView_(ADAutoCompleteTextView_PopupDataSetObserver *self, ADAutoCompleteTextView *view) {
  ADDataSetObserver_init(self);
  JreStrongAssignAndConsume(&self->updateRunnable_, new_ADAutoCompleteTextView_PopupDataSetObserver_1_initWithADAutoCompleteTextView_PopupDataSetObserver_(self));
  JreStrongAssignAndConsume(&self->mViewReference_, new_JavaLangRefWeakReference_initWithId_(view));
}

ADAutoCompleteTextView_PopupDataSetObserver *new_ADAutoCompleteTextView_PopupDataSetObserver_initWithADAutoCompleteTextView_(ADAutoCompleteTextView *view) {
  J2OBJC_NEW_IMPL(ADAutoCompleteTextView_PopupDataSetObserver, initWithADAutoCompleteTextView_, view)
}

ADAutoCompleteTextView_PopupDataSetObserver *create_ADAutoCompleteTextView_PopupDataSetObserver_initWithADAutoCompleteTextView_(ADAutoCompleteTextView *view) {
  J2OBJC_CREATE_IMPL(ADAutoCompleteTextView_PopupDataSetObserver, initWithADAutoCompleteTextView_, view)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADAutoCompleteTextView_PopupDataSetObserver)

@implementation ADAutoCompleteTextView_PopupDataSetObserver_1

- (instancetype)initWithADAutoCompleteTextView_PopupDataSetObserver:(ADAutoCompleteTextView_PopupDataSetObserver *)outer$ {
  ADAutoCompleteTextView_PopupDataSetObserver_1_initWithADAutoCompleteTextView_PopupDataSetObserver_(self, outer$);
  return self;
}

- (void)run {
  ADAutoCompleteTextView *textView = [((JavaLangRefWeakReference *) nil_chk(this$0_->mViewReference_)) get];
  if (textView == nil) {
    return;
  }
  id<ADListAdapter> adapter = textView->mAdapter_;
  if (adapter == nil) {
    return;
  }
  ADAutoCompleteTextView_updateDropDownForFilterWithInt_(textView, [adapter getCount]);
  [((ADPopupWindow *) nil_chk(((ADListPopupWindow *) nil_chk(textView->mPopup_))->mPopup_)) remeasure];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADAutoCompleteTextView_PopupDataSetObserver:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LADAutoCompleteTextView_PopupDataSetObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADAutoCompleteTextView_PopupDataSetObserver;" };
  static const J2ObjcClassInfo _ADAutoCompleteTextView_PopupDataSetObserver_1 = { "", "r.android.widget", ptrTable, methods, fields, 7, 0x8000, 2, 1, 0, -1, -1, -1, -1 };
  return &_ADAutoCompleteTextView_PopupDataSetObserver_1;
}

@end

void ADAutoCompleteTextView_PopupDataSetObserver_1_initWithADAutoCompleteTextView_PopupDataSetObserver_(ADAutoCompleteTextView_PopupDataSetObserver_1 *self, ADAutoCompleteTextView_PopupDataSetObserver *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

ADAutoCompleteTextView_PopupDataSetObserver_1 *new_ADAutoCompleteTextView_PopupDataSetObserver_1_initWithADAutoCompleteTextView_PopupDataSetObserver_(ADAutoCompleteTextView_PopupDataSetObserver *outer$) {
  J2OBJC_NEW_IMPL(ADAutoCompleteTextView_PopupDataSetObserver_1, initWithADAutoCompleteTextView_PopupDataSetObserver_, outer$)
}

ADAutoCompleteTextView_PopupDataSetObserver_1 *create_ADAutoCompleteTextView_PopupDataSetObserver_1_initWithADAutoCompleteTextView_PopupDataSetObserver_(ADAutoCompleteTextView_PopupDataSetObserver *outer$) {
  J2OBJC_CREATE_IMPL(ADAutoCompleteTextView_PopupDataSetObserver_1, initWithADAutoCompleteTextView_PopupDataSetObserver_, outer$)
}
