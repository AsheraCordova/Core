//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\widget\AbsListView.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AbsListView")
#ifdef RESTRICT_AbsListView
#define INCLUDE_ALL_AbsListView 0
#else
#define INCLUDE_ALL_AbsListView 1
#endif
#undef RESTRICT_AbsListView

#if !defined (ADAbsListView_) && (INCLUDE_ALL_AbsListView || defined(INCLUDE_ADAbsListView))
#define ADAbsListView_

#define RESTRICT_AdapterView 1
#define INCLUDE_ADAdapterView 1
#include "AdapterView.h"

@class ADAbsListView_ActionMode;
@class ADAbsListView_MultiChoiceModeWrapper;
@class ADLongSparseArray;
@class ADSparseBooleanArray;
@class ADView;
@class IOSLongArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaLangLong;
@protocol ADListAdapter;

@interface ADAbsListView : ADAdapterView {
 @public
  int32_t mChoiceMode_;
  ADAbsListView_ActionMode *mChoiceActionMode_;
  ADAbsListView_MultiChoiceModeWrapper *mMultiChoiceModeCallback_;
  int32_t mCheckedItemCount_;
  ADSparseBooleanArray *mCheckStates_;
  ADLongSparseArray *mCheckedIdStates_;
  int32_t mLayoutMode_AbsListView_;
  id<ADListAdapter> mAdapter_;
  bool mAdapterHasStableIds_;
  int32_t mSelectorPosition_;
  int32_t mSelectionLeftPadding_;
  int32_t mSelectionTopPadding_;
  int32_t mSelectionRightPadding_;
  int32_t mSelectionBottomPadding_;
  int32_t mWidthMeasureSpec_;
  int32_t mMotionPosition_;
  int32_t mMotionViewOriginalTop_;
  int32_t mMotionViewNewTop_;
  int32_t mMotionX_;
  int32_t mMotionY_;
  int32_t mTouchMode_;
  int32_t mLastY_;
  int32_t mMotionCorrection_;
  int32_t mSelectedTop_;
  int32_t mResurrectToPosition_;
  int32_t mOverscrollMax_;
  int32_t mOverscrollDistance_;
  int32_t mOverflingDistance_;
}

#pragma mark Public

- (instancetype)init;

- (void)clearChoices;

- (int32_t)getCheckedItemCount;

- (IOSLongArray *)getCheckedItemIds;

- (int32_t)getCheckedItemPosition;

- (ADSparseBooleanArray *)getCheckedItemPositions;

- (int32_t)getChoiceMode;

- (bool)isItemCheckedWithInt:(int32_t)position;

- (bool)performItemClickWithADView:(ADView *)view
                           withInt:(int32_t)position
                          withLong:(int64_t)id_;

- (void)setAdapterWithADListAdapter:(id<ADListAdapter>)adapter;

- (void)setChoiceModeWithInt:(int32_t)choiceMode;

@end

J2OBJC_EMPTY_STATIC_INIT(ADAbsListView)

J2OBJC_FIELD_SETTER(ADAbsListView, mChoiceActionMode_, ADAbsListView_ActionMode *)
J2OBJC_FIELD_SETTER(ADAbsListView, mMultiChoiceModeCallback_, ADAbsListView_MultiChoiceModeWrapper *)
J2OBJC_FIELD_SETTER(ADAbsListView, mCheckStates_, ADSparseBooleanArray *)
J2OBJC_FIELD_SETTER(ADAbsListView, mCheckedIdStates_, ADLongSparseArray *)
J2OBJC_FIELD_SETTER(ADAbsListView, mAdapter_, id<ADListAdapter>)

inline int32_t ADAbsListView_get_TRANSCRIPT_MODE_DISABLED(void);
#define ADAbsListView_TRANSCRIPT_MODE_DISABLED 0
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, TRANSCRIPT_MODE_DISABLED, int32_t)

inline int32_t ADAbsListView_get_TRANSCRIPT_MODE_NORMAL(void);
#define ADAbsListView_TRANSCRIPT_MODE_NORMAL 1
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, TRANSCRIPT_MODE_NORMAL, int32_t)

inline int32_t ADAbsListView_get_TRANSCRIPT_MODE_ALWAYS_SCROLL(void);
#define ADAbsListView_TRANSCRIPT_MODE_ALWAYS_SCROLL 2
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, TRANSCRIPT_MODE_ALWAYS_SCROLL, int32_t)

inline int32_t ADAbsListView_get_TOUCH_MODE_REST(void);
#define ADAbsListView_TOUCH_MODE_REST -1
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, TOUCH_MODE_REST, int32_t)

inline int32_t ADAbsListView_get_TOUCH_MODE_DOWN(void);
#define ADAbsListView_TOUCH_MODE_DOWN 0
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, TOUCH_MODE_DOWN, int32_t)

inline int32_t ADAbsListView_get_TOUCH_MODE_TAP(void);
#define ADAbsListView_TOUCH_MODE_TAP 1
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, TOUCH_MODE_TAP, int32_t)

inline int32_t ADAbsListView_get_TOUCH_MODE_DONE_WAITING(void);
#define ADAbsListView_TOUCH_MODE_DONE_WAITING 2
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, TOUCH_MODE_DONE_WAITING, int32_t)

inline int32_t ADAbsListView_get_TOUCH_MODE_SCROLL(void);
#define ADAbsListView_TOUCH_MODE_SCROLL 3
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, TOUCH_MODE_SCROLL, int32_t)

inline int32_t ADAbsListView_get_TOUCH_MODE_FLING(void);
#define ADAbsListView_TOUCH_MODE_FLING 4
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, TOUCH_MODE_FLING, int32_t)

inline int32_t ADAbsListView_get_TOUCH_MODE_OVERSCROLL(void);
#define ADAbsListView_TOUCH_MODE_OVERSCROLL 5
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, TOUCH_MODE_OVERSCROLL, int32_t)

inline int32_t ADAbsListView_get_TOUCH_MODE_OVERFLING(void);
#define ADAbsListView_TOUCH_MODE_OVERFLING 6
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, TOUCH_MODE_OVERFLING, int32_t)

inline int32_t ADAbsListView_get_LAYOUT_NORMAL(void);
#define ADAbsListView_LAYOUT_NORMAL 0
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, LAYOUT_NORMAL, int32_t)

inline int32_t ADAbsListView_get_LAYOUT_FORCE_TOP(void);
#define ADAbsListView_LAYOUT_FORCE_TOP 1
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, LAYOUT_FORCE_TOP, int32_t)

inline int32_t ADAbsListView_get_LAYOUT_SET_SELECTION(void);
#define ADAbsListView_LAYOUT_SET_SELECTION 2
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, LAYOUT_SET_SELECTION, int32_t)

inline int32_t ADAbsListView_get_LAYOUT_FORCE_BOTTOM(void);
#define ADAbsListView_LAYOUT_FORCE_BOTTOM 3
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, LAYOUT_FORCE_BOTTOM, int32_t)

inline int32_t ADAbsListView_get_LAYOUT_SPECIFIC(void);
#define ADAbsListView_LAYOUT_SPECIFIC 4
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, LAYOUT_SPECIFIC, int32_t)

inline int32_t ADAbsListView_get_LAYOUT_SYNC(void);
#define ADAbsListView_LAYOUT_SYNC 5
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, LAYOUT_SYNC, int32_t)

inline int32_t ADAbsListView_get_LAYOUT_MOVE_SELECTION(void);
#define ADAbsListView_LAYOUT_MOVE_SELECTION 6
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, LAYOUT_MOVE_SELECTION, int32_t)

inline int32_t ADAbsListView_get_CHOICE_MODE_NONE(void);
#define ADAbsListView_CHOICE_MODE_NONE 0
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, CHOICE_MODE_NONE, int32_t)

inline int32_t ADAbsListView_get_CHOICE_MODE_SINGLE(void);
#define ADAbsListView_CHOICE_MODE_SINGLE 1
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, CHOICE_MODE_SINGLE, int32_t)

inline int32_t ADAbsListView_get_CHOICE_MODE_MULTIPLE(void);
#define ADAbsListView_CHOICE_MODE_MULTIPLE 2
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, CHOICE_MODE_MULTIPLE, int32_t)

inline int32_t ADAbsListView_get_CHOICE_MODE_MULTIPLE_MODAL(void);
#define ADAbsListView_CHOICE_MODE_MULTIPLE_MODAL 3
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, CHOICE_MODE_MULTIPLE_MODAL, int32_t)

inline int32_t ADAbsListView_get_OVERSCROLL_LIMIT_DIVISOR(void);
#define ADAbsListView_OVERSCROLL_LIMIT_DIVISOR 3
J2OBJC_STATIC_FIELD_CONSTANT(ADAbsListView, OVERSCROLL_LIMIT_DIVISOR, int32_t)

FOUNDATION_EXPORT void ADAbsListView_init(ADAbsListView *self);

J2OBJC_TYPE_LITERAL_HEADER(ADAbsListView)

@compatibility_alias RAndroidWidgetAbsListView ADAbsListView;


#endif

#if !defined (ADAbsListView_ActionMode_) && (INCLUDE_ALL_AbsListView || defined(INCLUDE_ADAbsListView_ActionMode))
#define ADAbsListView_ActionMode_

@class ADAbsListView;

@interface ADAbsListView_ActionMode : NSObject

#pragma mark Public

- (void)finish;

#pragma mark Package-Private

- (instancetype)initWithADAbsListView:(ADAbsListView *)outer$;

- (void)invalidate;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADAbsListView_ActionMode)

FOUNDATION_EXPORT void ADAbsListView_ActionMode_initWithADAbsListView_(ADAbsListView_ActionMode *self, ADAbsListView *outer$);

FOUNDATION_EXPORT ADAbsListView_ActionMode *new_ADAbsListView_ActionMode_initWithADAbsListView_(ADAbsListView *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADAbsListView_ActionMode *create_ADAbsListView_ActionMode_initWithADAbsListView_(ADAbsListView *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ADAbsListView_ActionMode)


#endif

#if !defined (ADAbsListView_MultiChoiceModeWrapper_) && (INCLUDE_ALL_AbsListView || defined(INCLUDE_ADAbsListView_MultiChoiceModeWrapper))
#define ADAbsListView_MultiChoiceModeWrapper_

@class ADAbsListView;
@class ADAbsListView_ActionMode;
@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaLangLong;

@interface ADAbsListView_MultiChoiceModeWrapper : NSObject

#pragma mark Public

- (void)onItemCheckedStateChangedWithADAbsListView_ActionMode:(ADAbsListView_ActionMode *)mode
                                                      withInt:(int32_t)position
                                                     withLong:(int64_t)id_
                                                  withBoolean:(bool)checked;

#pragma mark Package-Private

- (instancetype)initWithADAbsListView:(ADAbsListView *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADAbsListView_MultiChoiceModeWrapper)

FOUNDATION_EXPORT void ADAbsListView_MultiChoiceModeWrapper_initWithADAbsListView_(ADAbsListView_MultiChoiceModeWrapper *self, ADAbsListView *outer$);

FOUNDATION_EXPORT ADAbsListView_MultiChoiceModeWrapper *new_ADAbsListView_MultiChoiceModeWrapper_initWithADAbsListView_(ADAbsListView *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADAbsListView_MultiChoiceModeWrapper *create_ADAbsListView_MultiChoiceModeWrapper_initWithADAbsListView_(ADAbsListView *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ADAbsListView_MultiChoiceModeWrapper)


#endif

#if !defined (ADAbsListView_OnScrollListener_) && (INCLUDE_ALL_AbsListView || defined(INCLUDE_ADAbsListView_OnScrollListener))
#define ADAbsListView_OnScrollListener_

@class ADAbsListView;
@class JavaLangInteger;

@protocol ADAbsListView_OnScrollListener < JavaObject >

- (void)onScrollWithADAbsListView:(ADAbsListView *)view
                          withInt:(int32_t)firstVisibleItem
                          withInt:(int32_t)visibleItemCount
                          withInt:(int32_t)totalItemCount;

@end

J2OBJC_EMPTY_STATIC_INIT(ADAbsListView_OnScrollListener)

J2OBJC_TYPE_LITERAL_HEADER(ADAbsListView_OnScrollListener)


#endif

#pragma pop_macro("INCLUDE_ALL_AbsListView")
