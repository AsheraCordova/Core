//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\webkit\MimeTypeMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_MimeTypeMap")
#ifdef RESTRICT_MimeTypeMap
#define INCLUDE_ALL_MimeTypeMap 0
#else
#define INCLUDE_ALL_MimeTypeMap 1
#endif
#undef RESTRICT_MimeTypeMap

#if !defined (ADMimeTypeMap_) && (INCLUDE_ALL_MimeTypeMap || defined(INCLUDE_ADMimeTypeMap))
#define ADMimeTypeMap_

/*!
 @brief Two-way map that maps MIME-types to file extensions and vice versa.
 */
@interface ADMimeTypeMap : NSObject

#pragma mark Public

/*!
 @brief Return the registered extension for the given MIME type.Note that some
  MIME types map to multiple extensions.
 This call will return the most
  common extension for the given MIME type.
 @param mimeType A MIME type (i.e. text/plain)
 @return The extension for the given MIME type or null iff there is none.
 */
- (NSString *)getExtensionFromMimeTypeWithNSString:(NSString *)mimeType;

/*!
 @brief Returns the file extension or an empty string iff there is no
  extension.This method is a convenience method for obtaining the
  extension of a url and has undefined results for other Strings.
 @param url
 @return The file extension of the given url.
 */
+ (NSString *)getFileExtensionFromUrlWithNSString:(NSString *)url;

/*!
 @brief Return the MIME type for the given extension.
 @param extension A file extension without the leading '.'
 @return The MIME type for the given extension or null iff there is none.
 */
- (NSString *)getMimeTypeFromExtensionWithNSString:(NSString *)extension;

/*!
 @brief Get the singleton instance of MimeTypeMap.
 @return The singleton instance of the MIME-type map.
 */
+ (ADMimeTypeMap *)getSingleton;

/*!
 @brief Return true if the given extension has a registered MIME type.
 @param extension A file extension without the leading '.'
 @return True iff there is an extension entry in the map.
 */
- (jboolean)hasExtensionWithNSString:(NSString *)extension;

/*!
 @brief Return true if the given MIME type has an entry in the map.
 @param mimeType A MIME type (i.e. text/plain)
 @return True iff there is a mimeType entry in the map.
 */
- (jboolean)hasMimeTypeWithNSString:(NSString *)mimeType;

@end

J2OBJC_EMPTY_STATIC_INIT(ADMimeTypeMap)

FOUNDATION_EXPORT NSString *ADMimeTypeMap_getFileExtensionFromUrlWithNSString_(NSString *url);

FOUNDATION_EXPORT ADMimeTypeMap *ADMimeTypeMap_getSingleton(void);

J2OBJC_TYPE_LITERAL_HEADER(ADMimeTypeMap)

@compatibility_alias RAndroidWebkitMimeTypeMap ADMimeTypeMap;

#endif

#pragma pop_macro("INCLUDE_ALL_MimeTypeMap")
