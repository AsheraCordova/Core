//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\stub\r\android\view\WindowManager.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_WindowManager")
#ifdef RESTRICT_WindowManager
#define INCLUDE_ALL_WindowManager 0
#else
#define INCLUDE_ALL_WindowManager 1
#endif
#undef RESTRICT_WindowManager

#if !defined (ADWindowManager_) && (INCLUDE_ALL_WindowManager || defined(INCLUDE_ADWindowManager))
#define ADWindowManager_

@class ADView;
@class ADWindowManager_LayoutParams;

@protocol ADWindowManager < JavaObject >

- (void)addViewWithADView:(ADView *)decorView
withADWindowManager_LayoutParams:(ADWindowManager_LayoutParams *)p;

@end

J2OBJC_EMPTY_STATIC_INIT(ADWindowManager)

J2OBJC_TYPE_LITERAL_HEADER(ADWindowManager)

#define RAndroidViewWindowManager ADWindowManager


#endif

#if !defined (ADWindowManager_LayoutParams_) && (INCLUDE_ALL_WindowManager || defined(INCLUDE_ADWindowManager_LayoutParams))
#define ADWindowManager_LayoutParams_

#define RESTRICT_RelativeLayout 1
#define INCLUDE_ADRelativeLayout_LayoutParams 1
#include "RelativeLayout.h"

@class ADView;
@class ADViewGroup_LayoutParams;
@class JavaLangBoolean;
@class JavaLangInteger;
@class NSString;
@protocol ADIBinder;

@interface ADWindowManager_LayoutParams : ADRelativeLayout_LayoutParams {
 @public
  id accessibilityIdOfAnchor_;
  NSString *accessibilityTitle_;
  NSString *packageName_;
  int32_t flags_;
  int32_t type_;
  id<ADIBinder> token_;
  int32_t format_;
  int32_t windowAnimations_;
  int32_t softInputMode_;
  int32_t privateFlags_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(int32_t)w
                    withInt:(int32_t)h;

- (void)setSurfaceInsetsWithADView:(ADView *)mBackgroundView
                       withBoolean:(bool)b
                       withBoolean:(bool)c;

- (void)setTitleWithNSString:(NSString *)string;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithADRelativeLayout_LayoutParams:(ADRelativeLayout_LayoutParams *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithADViewGroup_LayoutParams:(ADViewGroup_LayoutParams *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADWindowManager_LayoutParams)

J2OBJC_FIELD_SETTER(ADWindowManager_LayoutParams, accessibilityIdOfAnchor_, id)
J2OBJC_FIELD_SETTER(ADWindowManager_LayoutParams, accessibilityTitle_, NSString *)
J2OBJC_FIELD_SETTER(ADWindowManager_LayoutParams, packageName_, NSString *)
J2OBJC_FIELD_SETTER(ADWindowManager_LayoutParams, token_, id<ADIBinder>)

inline int32_t ADWindowManager_LayoutParams_get_PRIVATE_FLAG_WILL_NOT_REPLACE_ON_RELAUNCH(void);
#define ADWindowManager_LayoutParams_PRIVATE_FLAG_WILL_NOT_REPLACE_ON_RELAUNCH 32768
J2OBJC_STATIC_FIELD_CONSTANT(ADWindowManager_LayoutParams, PRIVATE_FLAG_WILL_NOT_REPLACE_ON_RELAUNCH, int32_t)

inline int32_t ADWindowManager_LayoutParams_get_PRIVATE_FLAG_LAYOUT_CHILD_WINDOW_IN_PARENT_FRAME(void);
#define ADWindowManager_LayoutParams_PRIVATE_FLAG_LAYOUT_CHILD_WINDOW_IN_PARENT_FRAME 65536
J2OBJC_STATIC_FIELD_CONSTANT(ADWindowManager_LayoutParams, PRIVATE_FLAG_LAYOUT_CHILD_WINDOW_IN_PARENT_FRAME, int32_t)

inline int32_t ADWindowManager_LayoutParams_get_FLAG_FULLSCREEN(void);
#define ADWindowManager_LayoutParams_FLAG_FULLSCREEN 0
J2OBJC_STATIC_FIELD_CONSTANT(ADWindowManager_LayoutParams, FLAG_FULLSCREEN, int32_t)

inline int32_t ADWindowManager_LayoutParams_get_FLAG_FORCE_NOT_FULLSCREEN(void);
#define ADWindowManager_LayoutParams_FLAG_FORCE_NOT_FULLSCREEN 0
J2OBJC_STATIC_FIELD_CONSTANT(ADWindowManager_LayoutParams, FLAG_FORCE_NOT_FULLSCREEN, int32_t)

inline int32_t ADWindowManager_LayoutParams_get_SOFT_INPUT_STATE_UNCHANGED(void);
#define ADWindowManager_LayoutParams_SOFT_INPUT_STATE_UNCHANGED 0
J2OBJC_STATIC_FIELD_CONSTANT(ADWindowManager_LayoutParams, SOFT_INPUT_STATE_UNCHANGED, int32_t)

inline int32_t ADWindowManager_LayoutParams_get_TYPE_APPLICATION_PANEL(void);
#define ADWindowManager_LayoutParams_TYPE_APPLICATION_PANEL 0
J2OBJC_STATIC_FIELD_CONSTANT(ADWindowManager_LayoutParams, TYPE_APPLICATION_PANEL, int32_t)

FOUNDATION_EXPORT void ADWindowManager_LayoutParams_initWithInt_withInt_(ADWindowManager_LayoutParams *self, int32_t w, int32_t h);

FOUNDATION_EXPORT ADWindowManager_LayoutParams *new_ADWindowManager_LayoutParams_initWithInt_withInt_(int32_t w, int32_t h) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADWindowManager_LayoutParams *create_ADWindowManager_LayoutParams_initWithInt_withInt_(int32_t w, int32_t h);

FOUNDATION_EXPORT void ADWindowManager_LayoutParams_init(ADWindowManager_LayoutParams *self);

FOUNDATION_EXPORT ADWindowManager_LayoutParams *new_ADWindowManager_LayoutParams_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADWindowManager_LayoutParams *create_ADWindowManager_LayoutParams_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ADWindowManager_LayoutParams)


#endif

#pragma pop_macro("INCLUDE_ALL_WindowManager")
