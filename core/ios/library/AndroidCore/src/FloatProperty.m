//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\util\FloatProperty.java
//

#define J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION 1




#include "FloatProperty.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "Property.h"
#include "java/lang/Float.h"




#pragma clang diagnostic error "-Wreturn-type"
#pragma clang diagnostic ignored "-Wswitch"


#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation ADFloatProperty

- (instancetype)initWithNSString:(NSString *)name {
  ADFloatProperty_initWithNSString_(self, name);
  return self;
}

- (void)setValueWithId:(id)object
             withFloat:(float)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setWithId:(id)object
           withId:(JavaLangFloat *)value {
  [self setValueWithId:object withFloat:[((JavaLangFloat *) nil_chk(value)) floatValue]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 1, 2, -1, 3, -1, -1 },
    { NULL, "V", 0x11, 4, 5, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(setValueWithId:withFloat:);
  methods[2].selector = @selector(setWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "setValue", "LNSObject;F", "(TT;F)V", "set", "LNSObject;LJavaLangFloat;", "(TT;Ljava/lang/Float;)V", "<T:Ljava/lang/Object;>Lr/android/util/Property<TT;Ljava/lang/Float;>;" };
  static const J2ObjcClassInfo _ADFloatProperty = { "FloatProperty", "r.android.util", ptrTable, methods, NULL, 7, 0x401, 3, 0, -1, -1, -1, 7, -1 };
  return &_ADFloatProperty;
}

@end

void ADFloatProperty_initWithNSString_(ADFloatProperty *self, NSString *name) {
  ADProperty_initWithIOSClass_withNSString_(self, JavaLangFloat_class_(), name);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADFloatProperty)

J2OBJC_NAME_MAPPING(ADFloatProperty, "r.android.util", "AD")
