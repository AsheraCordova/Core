//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\net\UriCodec.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_UriCodec")
#ifdef RESTRICT_UriCodec
#define INCLUDE_ALL_UriCodec 0
#else
#define INCLUDE_ALL_UriCodec 1
#endif
#undef RESTRICT_UriCodec

#if !defined (ADUriCodec_) && (INCLUDE_ALL_UriCodec || defined(INCLUDE_ADUriCodec))
#define ADUriCodec_

@class JavaLangBoolean;
@class JavaNioCharsetCharset;
@class NSString;

/*!
 @brief Decodes application/x-www-form-urlencoded content.
 */
@interface ADUriCodec : NSObject

#pragma mark Public

/*!
 @brief Decode a string according to the rules of this decoder
 .
 - if <code>convertPlus == true</code> all ‘+’ chars in the decoded output are converted to ‘ ‘
    (white space)
  - if <code>throwOnFailure == true</code>, an <code>IllegalArgumentException</code> is thrown for
    invalid inputs. Else, U+FFFd is emitted to the output in place of invalid input octets.
 */
+ (NSString *)decodeWithNSString:(NSString *)s
                     withBoolean:(bool)convertPlus
       withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset
                     withBoolean:(bool)throwOnFailure;

@end

J2OBJC_EMPTY_STATIC_INIT(ADUriCodec)

FOUNDATION_EXPORT NSString *ADUriCodec_decodeWithNSString_withBoolean_withJavaNioCharsetCharset_withBoolean_(NSString *s, bool convertPlus, JavaNioCharsetCharset *charset, bool throwOnFailure);

J2OBJC_TYPE_LITERAL_HEADER(ADUriCodec)

@compatibility_alias RAndroidNetUriCodec ADUriCodec;


#endif

#pragma pop_macro("INCLUDE_ALL_UriCodec")
