//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\com\android\internal\util\Preconditions.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Preconditions")
#ifdef RESTRICT_Preconditions
#define INCLUDE_ALL_Preconditions 0
#else
#define INCLUDE_ALL_Preconditions 1
#endif
#undef RESTRICT_Preconditions

#if !defined (ADPreconditions_) && (INCLUDE_ALL_Preconditions || defined(INCLUDE_ADPreconditions))
#define ADPreconditions_

@class JavaLangFloat;
@class JavaLangInteger;
@class NSString;

@interface ADPreconditions : NSObject

#pragma mark Public

- (instancetype)init;

+ (float)checkArgumentInRangeWithFloat:(float)value
                             withFloat:(float)lower
                             withFloat:(float)upper
                          withNSString:(NSString *)valueName;

+ (int32_t)checkArgumentInRangeWithInt:(int32_t)value
                               withInt:(int32_t)lower
                               withInt:(int32_t)upper
                          withNSString:(NSString *)valueName;

+ (int32_t)checkArgumentNonnegativeWithInt:(int32_t)value;

+ (int32_t)checkArgumentNonnegativeWithInt:(int32_t)value
                              withNSString:(NSString *)errorMessage;

@end

J2OBJC_EMPTY_STATIC_INIT(ADPreconditions)

FOUNDATION_EXPORT void ADPreconditions_init(ADPreconditions *self);

FOUNDATION_EXPORT ADPreconditions *new_ADPreconditions_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADPreconditions *create_ADPreconditions_init(void);

FOUNDATION_EXPORT float ADPreconditions_checkArgumentInRangeWithFloat_withFloat_withFloat_withNSString_(float value, float lower, float upper, NSString *valueName);

FOUNDATION_EXPORT int32_t ADPreconditions_checkArgumentInRangeWithInt_withInt_withInt_withNSString_(int32_t value, int32_t lower, int32_t upper, NSString *valueName);

FOUNDATION_EXPORT int32_t ADPreconditions_checkArgumentNonnegativeWithInt_withNSString_(int32_t value, NSString *errorMessage);

FOUNDATION_EXPORT int32_t ADPreconditions_checkArgumentNonnegativeWithInt_(int32_t value);

J2OBJC_TYPE_LITERAL_HEADER(ADPreconditions)

@compatibility_alias RComAndroidInternalUtilPreconditions ADPreconditions;


#endif

#pragma pop_macro("INCLUDE_ALL_Preconditions")
