//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\animation\Animator.java
//

#include "AnimationHandler.h"
#include "Animator.h"
#include "ConstantState.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "LongArray.h"
#include "TimeInterpolator.h"
#include "ValueAnimator.h"
#include "java/lang/AssertionError.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/IllegalStateException.h"
#include "java/util/ArrayList.h"

@class ADAnimator_AnimatorConstantState;
@class ADResources;
@class ADResources_Theme;


#pragma clang diagnostic ignored "-Wprotocol"
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ADAnimator () {
 @public
  /*!
   @brief If this animator is inflated from a constant state, keep a reference to it so that
  ConstantState will not be garbage collected until this animator is collected
   */
  ADAnimator_AnimatorConstantState *mConstantState_;
  /*!
   @brief A cache of the values in a list.Used so that when calling the list, we have a copy
  of it in case the list is modified while iterating.
   The array can be reused to avoid
  allocation on every notification.
   */
  IOSObjectArray *mCachedList_;
}

@end

J2OBJC_FIELD_SETTER(ADAnimator, mConstantState_, ADAnimator_AnimatorConstantState *)
J2OBJC_FIELD_SETTER(ADAnimator, mCachedList_, IOSObjectArray *)

/*!
 @brief backing field for backgroundPauseDelay property.This could be simply a hardcoded
  value in AnimationHandler, but it is useful to be able to change the value in tests.
 */
inline jlong ADAnimator_get_sBackgroundPauseDelay(void);
inline jlong ADAnimator_set_sBackgroundPauseDelay(jlong value);
inline jlong *ADAnimator_getRef_sBackgroundPauseDelay(void);
static jlong ADAnimator_sBackgroundPauseDelay = 1000;
J2OBJC_STATIC_FIELD_PRIMITIVE(ADAnimator, sBackgroundPauseDelay, jlong)

@interface ADAnimator_AnimatorListener : NSObject

@end

@interface ADAnimator_AnimatorPauseListener : NSObject

@end

/*!
 @brief Creates a <code>ConstantState</code> which holds changing configurations information associated
  with the given Animator.
 <p>
  When <code>newInstance()</code> is called, default implementation clones the Animator.
 */
@interface ADAnimator_AnimatorConstantState : ADConstantState {
 @public
  ADAnimator *mAnimator_;
  jint mChangingConf_;
}

- (instancetype)initWithADAnimator:(ADAnimator *)animator;

- (jint)getChangingConfigurations;

- (ADAnimator *)newInstance OBJC_METHOD_FAMILY_NONE;

- (ADAnimator *)newInstanceWithADResources:(ADResources *)arg0
                     withADResources_Theme:(ADResources_Theme *)arg1 OBJC_METHOD_FAMILY_NONE;

- (ADAnimator *)newInstanceWithADResources:(ADResources *)arg0 OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADAnimator_AnimatorConstantState)

J2OBJC_FIELD_SETTER(ADAnimator_AnimatorConstantState, mAnimator_, ADAnimator *)

__attribute__((unused)) static void ADAnimator_AnimatorConstantState_initWithADAnimator_(ADAnimator_AnimatorConstantState *self, ADAnimator *animator);

__attribute__((unused)) static ADAnimator_AnimatorConstantState *new_ADAnimator_AnimatorConstantState_initWithADAnimator_(ADAnimator *animator) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADAnimator_AnimatorConstantState *create_ADAnimator_AnimatorConstantState_initWithADAnimator_(ADAnimator *animator);

J2OBJC_TYPE_LITERAL_HEADER(ADAnimator_AnimatorConstantState)

@interface ADAnimator_AnimatorCaller_$Lambda$1 : NSObject < ADAnimator_AnimatorCaller >

- (void)callWithId:(id<ADAnimator_AnimatorListener>)a
            withId:(ADAnimator *)b
       withBoolean:(jboolean)c;

@end

J2OBJC_STATIC_INIT(ADAnimator_AnimatorCaller_$Lambda$1)

inline ADAnimator_AnimatorCaller_$Lambda$1 *ADAnimator_AnimatorCaller_$Lambda$1_get_instance(void);
static ADAnimator_AnimatorCaller_$Lambda$1 *ADAnimator_AnimatorCaller_$Lambda$1_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADAnimator_AnimatorCaller_$Lambda$1, instance, ADAnimator_AnimatorCaller_$Lambda$1 *)

__attribute__((unused)) static void ADAnimator_AnimatorCaller_$Lambda$1_init(ADAnimator_AnimatorCaller_$Lambda$1 *self);

__attribute__((unused)) static ADAnimator_AnimatorCaller_$Lambda$1 *new_ADAnimator_AnimatorCaller_$Lambda$1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADAnimator_AnimatorCaller_$Lambda$1 *create_ADAnimator_AnimatorCaller_$Lambda$1_init(void);

@interface ADAnimator_AnimatorCaller_$Lambda$2 : NSObject < ADAnimator_AnimatorCaller >

- (void)callWithId:(id<ADAnimator_AnimatorListener>)a
            withId:(ADAnimator *)b
       withBoolean:(jboolean)c;

@end

J2OBJC_STATIC_INIT(ADAnimator_AnimatorCaller_$Lambda$2)

inline ADAnimator_AnimatorCaller_$Lambda$2 *ADAnimator_AnimatorCaller_$Lambda$2_get_instance(void);
static ADAnimator_AnimatorCaller_$Lambda$2 *ADAnimator_AnimatorCaller_$Lambda$2_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADAnimator_AnimatorCaller_$Lambda$2, instance, ADAnimator_AnimatorCaller_$Lambda$2 *)

__attribute__((unused)) static void ADAnimator_AnimatorCaller_$Lambda$2_init(ADAnimator_AnimatorCaller_$Lambda$2 *self);

__attribute__((unused)) static ADAnimator_AnimatorCaller_$Lambda$2 *new_ADAnimator_AnimatorCaller_$Lambda$2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADAnimator_AnimatorCaller_$Lambda$2 *create_ADAnimator_AnimatorCaller_$Lambda$2_init(void);

@interface ADAnimator_AnimatorCaller_$Lambda$3 : NSObject < ADAnimator_AnimatorCaller >

- (void)callWithId:(id<ADAnimator_AnimatorListener>)listener
            withId:(ADAnimator *)animator
       withBoolean:(jboolean)isReverse;

@end

J2OBJC_STATIC_INIT(ADAnimator_AnimatorCaller_$Lambda$3)

inline ADAnimator_AnimatorCaller_$Lambda$3 *ADAnimator_AnimatorCaller_$Lambda$3_get_instance(void);
static ADAnimator_AnimatorCaller_$Lambda$3 *ADAnimator_AnimatorCaller_$Lambda$3_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADAnimator_AnimatorCaller_$Lambda$3, instance, ADAnimator_AnimatorCaller_$Lambda$3 *)

__attribute__((unused)) static void ADAnimator_AnimatorCaller_$Lambda$3_init(ADAnimator_AnimatorCaller_$Lambda$3 *self);

__attribute__((unused)) static ADAnimator_AnimatorCaller_$Lambda$3 *new_ADAnimator_AnimatorCaller_$Lambda$3_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADAnimator_AnimatorCaller_$Lambda$3 *create_ADAnimator_AnimatorCaller_$Lambda$3_init(void);

@interface ADAnimator_AnimatorCaller_$Lambda$4 : NSObject < ADAnimator_AnimatorCaller >

- (void)callWithId:(id<ADAnimator_AnimatorListener>)listener
            withId:(ADAnimator *)animator
       withBoolean:(jboolean)isReverse;

@end

J2OBJC_STATIC_INIT(ADAnimator_AnimatorCaller_$Lambda$4)

inline ADAnimator_AnimatorCaller_$Lambda$4 *ADAnimator_AnimatorCaller_$Lambda$4_get_instance(void);
static ADAnimator_AnimatorCaller_$Lambda$4 *ADAnimator_AnimatorCaller_$Lambda$4_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADAnimator_AnimatorCaller_$Lambda$4, instance, ADAnimator_AnimatorCaller_$Lambda$4 *)

__attribute__((unused)) static void ADAnimator_AnimatorCaller_$Lambda$4_init(ADAnimator_AnimatorCaller_$Lambda$4 *self);

__attribute__((unused)) static ADAnimator_AnimatorCaller_$Lambda$4 *new_ADAnimator_AnimatorCaller_$Lambda$4_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADAnimator_AnimatorCaller_$Lambda$4 *create_ADAnimator_AnimatorCaller_$Lambda$4_init(void);

@interface ADAnimator_AnimatorCaller_$Lambda$5 : NSObject < ADAnimator_AnimatorCaller >

- (void)callWithId:(id<ADAnimator_AnimatorPauseListener>)listener
            withId:(ADAnimator *)animator
       withBoolean:(jboolean)isReverse;

@end

J2OBJC_STATIC_INIT(ADAnimator_AnimatorCaller_$Lambda$5)

inline ADAnimator_AnimatorCaller_$Lambda$5 *ADAnimator_AnimatorCaller_$Lambda$5_get_instance(void);
static ADAnimator_AnimatorCaller_$Lambda$5 *ADAnimator_AnimatorCaller_$Lambda$5_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADAnimator_AnimatorCaller_$Lambda$5, instance, ADAnimator_AnimatorCaller_$Lambda$5 *)

__attribute__((unused)) static void ADAnimator_AnimatorCaller_$Lambda$5_init(ADAnimator_AnimatorCaller_$Lambda$5 *self);

__attribute__((unused)) static ADAnimator_AnimatorCaller_$Lambda$5 *new_ADAnimator_AnimatorCaller_$Lambda$5_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADAnimator_AnimatorCaller_$Lambda$5 *create_ADAnimator_AnimatorCaller_$Lambda$5_init(void);

@interface ADAnimator_AnimatorCaller_$Lambda$6 : NSObject < ADAnimator_AnimatorCaller >

- (void)callWithId:(id<ADAnimator_AnimatorPauseListener>)listener
            withId:(ADAnimator *)animator
       withBoolean:(jboolean)isReverse;

@end

J2OBJC_STATIC_INIT(ADAnimator_AnimatorCaller_$Lambda$6)

inline ADAnimator_AnimatorCaller_$Lambda$6 *ADAnimator_AnimatorCaller_$Lambda$6_get_instance(void);
static ADAnimator_AnimatorCaller_$Lambda$6 *ADAnimator_AnimatorCaller_$Lambda$6_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADAnimator_AnimatorCaller_$Lambda$6, instance, ADAnimator_AnimatorCaller_$Lambda$6 *)

__attribute__((unused)) static void ADAnimator_AnimatorCaller_$Lambda$6_init(ADAnimator_AnimatorCaller_$Lambda$6 *self);

__attribute__((unused)) static ADAnimator_AnimatorCaller_$Lambda$6 *new_ADAnimator_AnimatorCaller_$Lambda$6_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADAnimator_AnimatorCaller_$Lambda$6 *create_ADAnimator_AnimatorCaller_$Lambda$6_init(void);

@interface ADAnimator_AnimatorCaller_$Lambda$7 : NSObject < ADAnimator_AnimatorCaller >

- (void)callWithId:(id<ADValueAnimator_AnimatorUpdateListener>)listener
            withId:(ADValueAnimator *)animator
       withBoolean:(jboolean)isReverse;

@end

J2OBJC_STATIC_INIT(ADAnimator_AnimatorCaller_$Lambda$7)

inline ADAnimator_AnimatorCaller_$Lambda$7 *ADAnimator_AnimatorCaller_$Lambda$7_get_instance(void);
static ADAnimator_AnimatorCaller_$Lambda$7 *ADAnimator_AnimatorCaller_$Lambda$7_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADAnimator_AnimatorCaller_$Lambda$7, instance, ADAnimator_AnimatorCaller_$Lambda$7 *)

__attribute__((unused)) static void ADAnimator_AnimatorCaller_$Lambda$7_init(ADAnimator_AnimatorCaller_$Lambda$7 *self);

__attribute__((unused)) static ADAnimator_AnimatorCaller_$Lambda$7 *new_ADAnimator_AnimatorCaller_$Lambda$7_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADAnimator_AnimatorCaller_$Lambda$7 *create_ADAnimator_AnimatorCaller_$Lambda$7_init(void);

@implementation ADAnimator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADAnimator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)setBackgroundPauseDelayWithLong:(jlong)value {
  ADAnimator_setBackgroundPauseDelayWithLong_(value);
}

+ (jlong)getBackgroundPauseDelay {
  return ADAnimator_getBackgroundPauseDelay();
}

+ (void)setAnimatorPausingEnabledWithBoolean:(jboolean)enable {
  ADAnimator_setAnimatorPausingEnabledWithBoolean_(enable);
}

- (void)start {
}

- (void)cancel {
}

- (void)end {
}

- (void)pause {
  if (([self isStarted] || mStartListenersCalled_) && !mPaused_) {
    mPaused_ = true;
    [self notifyPauseListenersWithADAnimator_AnimatorCaller:JreLoadStatic(ADAnimator_AnimatorCaller, ON_PAUSE)];
  }
}

- (void)resume {
  if (mPaused_) {
    mPaused_ = false;
    [self notifyPauseListenersWithADAnimator_AnimatorCaller:JreLoadStatic(ADAnimator_AnimatorCaller, ON_RESUME)];
  }
}

- (jboolean)isPaused {
  return mPaused_;
}

- (jlong)getStartDelay {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setStartDelayWithLong:(jlong)startDelay {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (ADAnimator *)setDurationWithLong:(jlong)duration {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)getDuration {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)getTotalDuration {
  jlong duration = [self getDuration];
  if (duration == ADAnimator_DURATION_INFINITE) {
    return ADAnimator_DURATION_INFINITE;
  }
  else {
    return [self getStartDelay] + duration;
  }
}

- (void)setInterpolatorWithADTimeInterpolator:(id<ADTimeInterpolator>)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id<ADTimeInterpolator>)getInterpolator {
  return nil;
}

- (jboolean)isRunning {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isStarted {
  return [self isRunning];
}

- (void)addListenerWithADAnimator_AnimatorListener:(id<ADAnimator_AnimatorListener>)listener {
  if (mListeners_ == nil) {
    JreStrongAssignAndConsume(&mListeners_, new_JavaUtilArrayList_init());
  }
  [mListeners_ addWithId:listener];
}

- (void)removeListenerWithADAnimator_AnimatorListener:(id<ADAnimator_AnimatorListener>)listener {
  if (mListeners_ == nil) {
    return;
  }
  [mListeners_ removeWithId:listener];
  if ([((JavaUtilArrayList *) nil_chk(mListeners_)) size] == 0) {
    JreStrongAssign(&mListeners_, nil);
  }
}

- (JavaUtilArrayList *)getListeners {
  return mListeners_;
}

- (void)addPauseListenerWithADAnimator_AnimatorPauseListener:(id<ADAnimator_AnimatorPauseListener>)listener {
  if (mPauseListeners_ == nil) {
    JreStrongAssignAndConsume(&mPauseListeners_, new_JavaUtilArrayList_init());
  }
  [mPauseListeners_ addWithId:listener];
}

- (void)removePauseListenerWithADAnimator_AnimatorPauseListener:(id<ADAnimator_AnimatorPauseListener>)listener {
  if (mPauseListeners_ == nil) {
    return;
  }
  [mPauseListeners_ removeWithId:listener];
  if ([((JavaUtilArrayList *) nil_chk(mPauseListeners_)) size] == 0) {
    JreStrongAssign(&mPauseListeners_, nil);
  }
}

- (void)removeAllListeners {
  if (mListeners_ != nil) {
    [mListeners_ clear];
    JreStrongAssign(&mListeners_, nil);
  }
  if (mPauseListeners_ != nil) {
    [mPauseListeners_ clear];
    JreStrongAssign(&mPauseListeners_, nil);
  }
}

- (jint)getChangingConfigurations {
  return mChangingConfigurations_;
}

- (void)setChangingConfigurationsWithInt:(jint)configs {
  mChangingConfigurations_ = configs;
}

- (void)appendChangingConfigurationsWithInt:(jint)configs {
  mChangingConfigurations_ |= configs;
}

- (ADConstantState *)createConstantState {
  return create_ADAnimator_AnimatorConstantState_initWithADAnimator_(self);
}

- (ADAnimator *)java_clone {
  @try {
    ADAnimator *anim = (ADAnimator *) cast_chk([super java_clone], [ADAnimator class]);
    if (mListeners_ != nil) {
      JreStrongAssignAndConsume(&((ADAnimator *) nil_chk(anim))->mListeners_, new_JavaUtilArrayList_initWithJavaUtilCollection_(mListeners_));
    }
    if (mPauseListeners_ != nil) {
      JreStrongAssignAndConsume(&((ADAnimator *) nil_chk(anim))->mPauseListeners_, new_JavaUtilArrayList_initWithJavaUtilCollection_(mPauseListeners_));
    }
    JreStrongAssign(&((ADAnimator *) nil_chk(anim))->mCachedList_, nil);
    anim->mStartListenersCalled_ = false;
    return anim;
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw create_JavaLangAssertionError_init();
  }
}

- (void)setupStartValues {
}

- (void)setupEndValues {
}

- (void)setTargetWithId:(id)target {
}

- (jboolean)canReverse {
  return false;
}

- (void)reverse {
  @throw create_JavaLangIllegalStateException_initWithNSString_(@"Reverse is not supported");
}

- (jboolean)pulseAnimationFrameWithLong:(jlong)frameTime {
  return false;
}

- (void)startWithoutPulsingWithBoolean:(jboolean)inReverse {
  if (inReverse) {
    [self reverse];
  }
  else {
    [self start];
  }
}

- (void)skipToEndValueWithBoolean:(jboolean)inReverse {
}

- (jboolean)isInitialized {
  return true;
}

- (void)animateValuesInRangeWithLong:(jlong)currentPlayTime
                            withLong:(jlong)lastPlayTime {
}

- (void)animateSkipToEndsWithLong:(jlong)currentPlayTime
                         withLong:(jlong)lastPlayTime {
}

- (void)getStartAndEndTimesWithADLongArray:(ADLongArray *)times
                                  withLong:(jlong)offset {
  jlong startTime = offset + [self getStartDelay];
  if ([((ADLongArray *) nil_chk(times)) indexOfWithLong:startTime] < 0) {
    [times addWithLong:startTime];
  }
  jlong duration = [self getTotalDuration];
  if (duration != ADAnimator_DURATION_INFINITE) {
    jlong endTime = duration + offset;
    if ([times indexOfWithLong:endTime] < 0) {
      [times addWithLong:endTime];
    }
  }
}

- (void)notifyListenersWithADAnimator_AnimatorCaller:(id<ADAnimator_AnimatorCaller>)notification
                                         withBoolean:(jboolean)isReverse {
  [self callOnListWithJavaUtilArrayList:mListeners_ withADAnimator_AnimatorCaller:notification withId:self withBoolean:isReverse];
}

- (void)notifyPauseListenersWithADAnimator_AnimatorCaller:(id<ADAnimator_AnimatorCaller>)notification {
  [self callOnListWithJavaUtilArrayList:mPauseListeners_ withADAnimator_AnimatorCaller:notification withId:self withBoolean:false];
}

- (void)notifyStartListenersWithBoolean:(jboolean)isReversing {
  jboolean startListenersCalled = mStartListenersCalled_;
  mStartListenersCalled_ = true;
  if (mListeners_ != nil && !startListenersCalled) {
    [self notifyListenersWithADAnimator_AnimatorCaller:JreLoadStatic(ADAnimator_AnimatorCaller, ON_START) withBoolean:isReversing];
  }
}

- (void)notifyEndListenersWithBoolean:(jboolean)isReversing {
  jboolean startListenersCalled = mStartListenersCalled_;
  mStartListenersCalled_ = false;
  if (mListeners_ != nil && startListenersCalled) {
    [self notifyListenersWithADAnimator_AnimatorCaller:JreLoadStatic(ADAnimator_AnimatorCaller, ON_END) withBoolean:isReversing];
  }
}

- (void)callOnListWithJavaUtilArrayList:(JavaUtilArrayList *)list
          withADAnimator_AnimatorCaller:(id<ADAnimator_AnimatorCaller>)call
                                 withId:(id)animator
                            withBoolean:(jboolean)isReverse {
  jint size = list == nil ? 0 : [list size];
  if (size > 0) {
    IOSObjectArray *array;
    if (mCachedList_ == nil || mCachedList_->size_ < size) {
      array = [IOSObjectArray arrayWithLength:size type:NSObject_class_()];
    }
    else {
      array = mCachedList_;
      JreStrongAssign(&mCachedList_, nil);
    }
    [((JavaUtilArrayList *) nil_chk(list)) toArrayWithNSObjectArray:array];
    for (jint i = 0; i < size; i++) {
      id item = IOSObjectArray_Get(array, i);
      [((id<ADAnimator_AnimatorCaller>) nil_chk(call)) callWithId:item withId:animator withBoolean:isReverse];
      IOSObjectArray_Set(array, i, nil);
    }
    JreStrongAssign(&mCachedList_, array);
  }
}

- (void)setAllowRunningAsynchronouslyWithBoolean:(jboolean)mayRunAsync {
}

- (void)dealloc {
  RELEASE_(mListeners_);
  RELEASE_(mPauseListeners_);
  RELEASE_(mConstantState_);
  RELEASE_(mCachedList_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 4, 1, -1, -1, -1, -1 },
    { NULL, "LADAnimator;", 0x401, 5, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 6, 7, -1, -1, -1, -1 },
    { NULL, "LADTimeInterpolator;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 9, -1, -1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x1, -1, -1, -1, 11, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 16, -1, -1, -1, -1 },
    { NULL, "LADConstantState;", 0x1, -1, -1, -1, 18, -1, -1 },
    { NULL, "LADAnimator;", 0x1, 19, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 22, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 23, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 24, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 25, 26, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 27, 26, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 28, 29, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 30, 31, -1, 32, -1, -1 },
    { NULL, "V", 0x0, 33, 34, -1, 35, -1, -1 },
    { NULL, "V", 0x0, 36, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 37, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 38, 39, -1, 40, -1, -1 },
    { NULL, "V", 0x1, 41, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setBackgroundPauseDelayWithLong:);
  methods[2].selector = @selector(getBackgroundPauseDelay);
  methods[3].selector = @selector(setAnimatorPausingEnabledWithBoolean:);
  methods[4].selector = @selector(start);
  methods[5].selector = @selector(cancel);
  methods[6].selector = @selector(end);
  methods[7].selector = @selector(pause);
  methods[8].selector = @selector(resume);
  methods[9].selector = @selector(isPaused);
  methods[10].selector = @selector(getStartDelay);
  methods[11].selector = @selector(setStartDelayWithLong:);
  methods[12].selector = @selector(setDurationWithLong:);
  methods[13].selector = @selector(getDuration);
  methods[14].selector = @selector(getTotalDuration);
  methods[15].selector = @selector(setInterpolatorWithADTimeInterpolator:);
  methods[16].selector = @selector(getInterpolator);
  methods[17].selector = @selector(isRunning);
  methods[18].selector = @selector(isStarted);
  methods[19].selector = @selector(addListenerWithADAnimator_AnimatorListener:);
  methods[20].selector = @selector(removeListenerWithADAnimator_AnimatorListener:);
  methods[21].selector = @selector(getListeners);
  methods[22].selector = @selector(addPauseListenerWithADAnimator_AnimatorPauseListener:);
  methods[23].selector = @selector(removePauseListenerWithADAnimator_AnimatorPauseListener:);
  methods[24].selector = @selector(removeAllListeners);
  methods[25].selector = @selector(getChangingConfigurations);
  methods[26].selector = @selector(setChangingConfigurationsWithInt:);
  methods[27].selector = @selector(appendChangingConfigurationsWithInt:);
  methods[28].selector = @selector(createConstantState);
  methods[29].selector = @selector(java_clone);
  methods[30].selector = @selector(setupStartValues);
  methods[31].selector = @selector(setupEndValues);
  methods[32].selector = @selector(setTargetWithId:);
  methods[33].selector = @selector(canReverse);
  methods[34].selector = @selector(reverse);
  methods[35].selector = @selector(pulseAnimationFrameWithLong:);
  methods[36].selector = @selector(startWithoutPulsingWithBoolean:);
  methods[37].selector = @selector(skipToEndValueWithBoolean:);
  methods[38].selector = @selector(isInitialized);
  methods[39].selector = @selector(animateValuesInRangeWithLong:withLong:);
  methods[40].selector = @selector(animateSkipToEndsWithLong:withLong:);
  methods[41].selector = @selector(getStartAndEndTimesWithADLongArray:withLong:);
  methods[42].selector = @selector(notifyListenersWithADAnimator_AnimatorCaller:withBoolean:);
  methods[43].selector = @selector(notifyPauseListenersWithADAnimator_AnimatorCaller:);
  methods[44].selector = @selector(notifyStartListenersWithBoolean:);
  methods[45].selector = @selector(notifyEndListenersWithBoolean:);
  methods[46].selector = @selector(callOnListWithJavaUtilArrayList:withADAnimator_AnimatorCaller:withId:withBoolean:);
  methods[47].selector = @selector(setAllowRunningAsynchronouslyWithBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DURATION_INFINITE", "J", .constantValue.asLong = ADAnimator_DURATION_INFINITE, 0x19, -1, -1, -1, -1 },
    { "mListeners_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x0, -1, -1, 42, -1 },
    { "mPauseListeners_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x0, -1, -1, 43, -1 },
    { "mPaused_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mChangingConfigurations_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mConstantState_", "LADAnimator_AnimatorConstantState;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sBackgroundPauseDelay", "J", .constantValue.asLong = 0, 0xa, -1, 44, -1, -1 },
    { "mCachedList_", "[LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mStartListenersCalled_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setBackgroundPauseDelay", "J", "setAnimatorPausingEnabled", "Z", "setStartDelay", "setDuration", "setInterpolator", "LADTimeInterpolator;", "addListener", "LADAnimator_AnimatorListener;", "removeListener", "()Ljava/util/ArrayList<Lr/android/animation/Animator$AnimatorListener;>;", "addPauseListener", "LADAnimator_AnimatorPauseListener;", "removePauseListener", "setChangingConfigurations", "I", "appendChangingConfigurations", "()Lr/android/content/res/ConstantState<Lr/android/animation/Animator;>;", "clone", "setTarget", "LNSObject;", "pulseAnimationFrame", "startWithoutPulsing", "skipToEndValue", "animateValuesInRange", "JJ", "animateSkipToEnds", "getStartAndEndTimes", "LADLongArray;J", "notifyListeners", "LADAnimator_AnimatorCaller;Z", "(Lr/android/animation/Animator$AnimatorCaller<Lr/android/animation/Animator$AnimatorListener;Lr/android/animation/Animator;>;Z)V", "notifyPauseListeners", "LADAnimator_AnimatorCaller;", "(Lr/android/animation/Animator$AnimatorCaller<Lr/android/animation/Animator$AnimatorPauseListener;Lr/android/animation/Animator;>;)V", "notifyStartListeners", "notifyEndListeners", "callOnList", "LJavaUtilArrayList;LADAnimator_AnimatorCaller;LNSObject;Z", "<T:Ljava/lang/Object;A:Ljava/lang/Object;>(Ljava/util/ArrayList<TT;>;Lr/android/animation/Animator$AnimatorCaller<TT;TA;>;TA;Z)V", "setAllowRunningAsynchronously", "Ljava/util/ArrayList<Lr/android/animation/Animator$AnimatorListener;>;", "Ljava/util/ArrayList<Lr/android/animation/Animator$AnimatorPauseListener;>;", &ADAnimator_sBackgroundPauseDelay, "LADAnimator_AnimatorListener;LADAnimator_AnimatorPauseListener;LADAnimator_AnimatorConstantState;LADAnimator_AnimatorCaller;" };
  static const J2ObjcClassInfo _ADAnimator = { "Animator", "r.android.animation", ptrTable, methods, fields, 7, 0x401, 48, 9, -1, 45, -1, -1, -1 };
  return &_ADAnimator;
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self java_clone] retain];
}

@end

void ADAnimator_init(ADAnimator *self) {
  NSObject_init(self);
  JreStrongAssign(&self->mListeners_, nil);
  JreStrongAssign(&self->mPauseListeners_, nil);
  self->mPaused_ = false;
  self->mChangingConfigurations_ = 0;
  self->mStartListenersCalled_ = false;
}

void ADAnimator_setBackgroundPauseDelayWithLong_(jlong value) {
  ADAnimator_initialize();
  ADAnimator_sBackgroundPauseDelay = value;
}

jlong ADAnimator_getBackgroundPauseDelay() {
  ADAnimator_initialize();
  return ADAnimator_sBackgroundPauseDelay;
}

void ADAnimator_setAnimatorPausingEnabledWithBoolean_(jboolean enable) {
  ADAnimator_initialize();
  ADAnimationHandler_setAnimatorPausingEnabledWithBoolean_(enable);
  ADAnimationHandler_setOverrideAnimatorPausingSystemPropertyWithBoolean_(!enable);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADAnimator)

@implementation ADAnimator_AnimatorListener

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 4, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 5, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(onAnimationStartWithADAnimator:withBoolean:);
  methods[1].selector = @selector(onAnimationEndWithADAnimator:withBoolean:);
  methods[2].selector = @selector(onAnimationStartWithADAnimator:);
  methods[3].selector = @selector(onAnimationEndWithADAnimator:);
  methods[4].selector = @selector(onAnimationCancelWithADAnimator:);
  methods[5].selector = @selector(onAnimationRepeatWithADAnimator:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onAnimationStart", "LADAnimator;Z", "onAnimationEnd", "LADAnimator;", "onAnimationCancel", "onAnimationRepeat" };
  static const J2ObjcClassInfo _ADAnimator_AnimatorListener = { "AnimatorListener", "r.android.animation", ptrTable, methods, NULL, 7, 0x609, 6, 0, 3, -1, -1, -1, -1 };
  return &_ADAnimator_AnimatorListener;
}

@end

void ADAnimator_AnimatorListener_onAnimationStartWithADAnimator_withBoolean_(id<ADAnimator_AnimatorListener> self, ADAnimator *animation, jboolean isReverse) {
  ADAnimator_AnimatorListener_initialize();
  [self onAnimationStartWithADAnimator:animation];
}

void ADAnimator_AnimatorListener_onAnimationEndWithADAnimator_withBoolean_(id<ADAnimator_AnimatorListener> self, ADAnimator *animation, jboolean isReverse) {
  ADAnimator_AnimatorListener_initialize();
  [self onAnimationEndWithADAnimator:animation];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADAnimator_AnimatorListener)

@implementation ADAnimator_AnimatorPauseListener

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(onAnimationPauseWithADAnimator:);
  methods[1].selector = @selector(onAnimationResumeWithADAnimator:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onAnimationPause", "LADAnimator;", "onAnimationResume" };
  static const J2ObjcClassInfo _ADAnimator_AnimatorPauseListener = { "AnimatorPauseListener", "r.android.animation", ptrTable, methods, NULL, 7, 0x609, 2, 0, 1, -1, -1, -1, -1 };
  return &_ADAnimator_AnimatorPauseListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADAnimator_AnimatorPauseListener)

@implementation ADAnimator_AnimatorConstantState

- (instancetype)initWithADAnimator:(ADAnimator *)animator {
  ADAnimator_AnimatorConstantState_initWithADAnimator_(self, animator);
  return self;
}

- (jint)getChangingConfigurations {
  return mChangingConf_;
}

- (ADAnimator *)newInstance {
  ADAnimator *clone = [((ADAnimator *) nil_chk(mAnimator_)) java_clone];
  JreStrongAssign(&((ADAnimator *) nil_chk(clone))->mConstantState_, self);
  return clone;
}

- (void)dealloc {
  RELEASE_(mAnimator_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADAnimator;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADAnimator:);
  methods[1].selector = @selector(getChangingConfigurations);
  methods[2].selector = @selector(newInstance);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mAnimator_", "LADAnimator;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "mChangingConf_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADAnimator;", "Lr/android/content/res/ConstantState<Lr/android/animation/Animator;>;" };
  static const J2ObjcClassInfo _ADAnimator_AnimatorConstantState = { "AnimatorConstantState", "r.android.animation", ptrTable, methods, fields, 7, 0xa, 3, 2, 0, -1, -1, 1, -1 };
  return &_ADAnimator_AnimatorConstantState;
}

@end

void ADAnimator_AnimatorConstantState_initWithADAnimator_(ADAnimator_AnimatorConstantState *self, ADAnimator *animator) {
  ADConstantState_init(self);
  JreStrongAssign(&self->mAnimator_, animator);
  JreStrongAssign(&((ADAnimator *) nil_chk(self->mAnimator_))->mConstantState_, self);
  self->mChangingConf_ = [self->mAnimator_ getChangingConfigurations];
}

ADAnimator_AnimatorConstantState *new_ADAnimator_AnimatorConstantState_initWithADAnimator_(ADAnimator *animator) {
  J2OBJC_NEW_IMPL(ADAnimator_AnimatorConstantState, initWithADAnimator_, animator)
}

ADAnimator_AnimatorConstantState *create_ADAnimator_AnimatorConstantState_initWithADAnimator_(ADAnimator *animator) {
  J2OBJC_CREATE_IMPL(ADAnimator_AnimatorConstantState, initWithADAnimator_, animator)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADAnimator_AnimatorConstantState)

J2OBJC_INITIALIZED_DEFN(ADAnimator_AnimatorCaller)

id<ADAnimator_AnimatorCaller> ADAnimator_AnimatorCaller_ON_START;
id<ADAnimator_AnimatorCaller> ADAnimator_AnimatorCaller_ON_END;
id<ADAnimator_AnimatorCaller> ADAnimator_AnimatorCaller_ON_CANCEL;
id<ADAnimator_AnimatorCaller> ADAnimator_AnimatorCaller_ON_REPEAT;
id<ADAnimator_AnimatorCaller> ADAnimator_AnimatorCaller_ON_PAUSE;
id<ADAnimator_AnimatorCaller> ADAnimator_AnimatorCaller_ON_RESUME;
id<ADAnimator_AnimatorCaller> ADAnimator_AnimatorCaller_ON_UPDATE;

@implementation ADAnimator_AnimatorCaller

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(callWithId:withId:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ON_START", "LADAnimator_AnimatorCaller;", .constantValue.asLong = 0, 0x19, -1, 3, 4, -1 },
    { "ON_END", "LADAnimator_AnimatorCaller;", .constantValue.asLong = 0, 0x19, -1, 5, 4, -1 },
    { "ON_CANCEL", "LADAnimator_AnimatorCaller;", .constantValue.asLong = 0, 0x19, -1, 6, 4, -1 },
    { "ON_REPEAT", "LADAnimator_AnimatorCaller;", .constantValue.asLong = 0, 0x19, -1, 7, 4, -1 },
    { "ON_PAUSE", "LADAnimator_AnimatorCaller;", .constantValue.asLong = 0, 0x19, -1, 8, 9, -1 },
    { "ON_RESUME", "LADAnimator_AnimatorCaller;", .constantValue.asLong = 0, 0x19, -1, 10, 9, -1 },
    { "ON_UPDATE", "LADAnimator_AnimatorCaller;", .constantValue.asLong = 0, 0x19, -1, 11, 12, -1 },
  };
  static const void *ptrTable[] = { "call", "LNSObject;LNSObject;Z", "(TT;TA;Z)V", &ADAnimator_AnimatorCaller_ON_START, "Lr/android/animation/Animator$AnimatorCaller<Lr/android/animation/Animator$AnimatorListener;Lr/android/animation/Animator;>;", &ADAnimator_AnimatorCaller_ON_END, &ADAnimator_AnimatorCaller_ON_CANCEL, &ADAnimator_AnimatorCaller_ON_REPEAT, &ADAnimator_AnimatorCaller_ON_PAUSE, "Lr/android/animation/Animator$AnimatorCaller<Lr/android/animation/Animator$AnimatorPauseListener;Lr/android/animation/Animator;>;", &ADAnimator_AnimatorCaller_ON_RESUME, &ADAnimator_AnimatorCaller_ON_UPDATE, "Lr/android/animation/Animator$AnimatorCaller<Lr/android/animation/ValueAnimator$AnimatorUpdateListener;Lr/android/animation/ValueAnimator;>;", "LADAnimator;", "<T:Ljava/lang/Object;A:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _ADAnimator_AnimatorCaller = { "AnimatorCaller", "r.android.animation", ptrTable, methods, fields, 7, 0x608, 1, 7, 13, -1, -1, 14, -1 };
  return &_ADAnimator_AnimatorCaller;
}

+ (void)initialize {
  if (self == [ADAnimator_AnimatorCaller class]) {
    JreStrongAssign(&ADAnimator_AnimatorCaller_ON_START, JreLoadStatic(ADAnimator_AnimatorCaller_$Lambda$1, instance));
    JreStrongAssign(&ADAnimator_AnimatorCaller_ON_END, JreLoadStatic(ADAnimator_AnimatorCaller_$Lambda$2, instance));
    JreStrongAssign(&ADAnimator_AnimatorCaller_ON_CANCEL, JreLoadStatic(ADAnimator_AnimatorCaller_$Lambda$3, instance));
    JreStrongAssign(&ADAnimator_AnimatorCaller_ON_REPEAT, JreLoadStatic(ADAnimator_AnimatorCaller_$Lambda$4, instance));
    JreStrongAssign(&ADAnimator_AnimatorCaller_ON_PAUSE, JreLoadStatic(ADAnimator_AnimatorCaller_$Lambda$5, instance));
    JreStrongAssign(&ADAnimator_AnimatorCaller_ON_RESUME, JreLoadStatic(ADAnimator_AnimatorCaller_$Lambda$6, instance));
    JreStrongAssign(&ADAnimator_AnimatorCaller_ON_UPDATE, JreLoadStatic(ADAnimator_AnimatorCaller_$Lambda$7, instance));
    J2OBJC_SET_INITIALIZED(ADAnimator_AnimatorCaller)
  }
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ADAnimator_AnimatorCaller)

J2OBJC_INITIALIZED_DEFN(ADAnimator_AnimatorCaller_$Lambda$1)

@implementation ADAnimator_AnimatorCaller_$Lambda$1

- (void)callWithId:(id<ADAnimator_AnimatorListener>)a
            withId:(ADAnimator *)b
       withBoolean:(jboolean)c {
  [((id<ADAnimator_AnimatorListener>) nil_chk(a)) onAnimationStartWithADAnimator:b withBoolean:c];
}

+ (void)initialize {
  if (self == [ADAnimator_AnimatorCaller_$Lambda$1 class]) {
    JreStrongAssignAndConsume(&ADAnimator_AnimatorCaller_$Lambda$1_instance, new_ADAnimator_AnimatorCaller_$Lambda$1_init());
    J2OBJC_SET_INITIALIZED(ADAnimator_AnimatorCaller_$Lambda$1)
  }
}

@end

void ADAnimator_AnimatorCaller_$Lambda$1_init(ADAnimator_AnimatorCaller_$Lambda$1 *self) {
  NSObject_init(self);
}

ADAnimator_AnimatorCaller_$Lambda$1 *new_ADAnimator_AnimatorCaller_$Lambda$1_init() {
  J2OBJC_NEW_IMPL(ADAnimator_AnimatorCaller_$Lambda$1, init)
}

ADAnimator_AnimatorCaller_$Lambda$1 *create_ADAnimator_AnimatorCaller_$Lambda$1_init() {
  J2OBJC_CREATE_IMPL(ADAnimator_AnimatorCaller_$Lambda$1, init)
}

J2OBJC_INITIALIZED_DEFN(ADAnimator_AnimatorCaller_$Lambda$2)

@implementation ADAnimator_AnimatorCaller_$Lambda$2

- (void)callWithId:(id<ADAnimator_AnimatorListener>)a
            withId:(ADAnimator *)b
       withBoolean:(jboolean)c {
  [((id<ADAnimator_AnimatorListener>) nil_chk(a)) onAnimationEndWithADAnimator:b withBoolean:c];
}

+ (void)initialize {
  if (self == [ADAnimator_AnimatorCaller_$Lambda$2 class]) {
    JreStrongAssignAndConsume(&ADAnimator_AnimatorCaller_$Lambda$2_instance, new_ADAnimator_AnimatorCaller_$Lambda$2_init());
    J2OBJC_SET_INITIALIZED(ADAnimator_AnimatorCaller_$Lambda$2)
  }
}

@end

void ADAnimator_AnimatorCaller_$Lambda$2_init(ADAnimator_AnimatorCaller_$Lambda$2 *self) {
  NSObject_init(self);
}

ADAnimator_AnimatorCaller_$Lambda$2 *new_ADAnimator_AnimatorCaller_$Lambda$2_init() {
  J2OBJC_NEW_IMPL(ADAnimator_AnimatorCaller_$Lambda$2, init)
}

ADAnimator_AnimatorCaller_$Lambda$2 *create_ADAnimator_AnimatorCaller_$Lambda$2_init() {
  J2OBJC_CREATE_IMPL(ADAnimator_AnimatorCaller_$Lambda$2, init)
}

J2OBJC_INITIALIZED_DEFN(ADAnimator_AnimatorCaller_$Lambda$3)

@implementation ADAnimator_AnimatorCaller_$Lambda$3

- (void)callWithId:(id<ADAnimator_AnimatorListener>)listener
            withId:(ADAnimator *)animator
       withBoolean:(jboolean)isReverse {
  [((id<ADAnimator_AnimatorListener>) nil_chk(listener)) onAnimationCancelWithADAnimator:animator];
}

+ (void)initialize {
  if (self == [ADAnimator_AnimatorCaller_$Lambda$3 class]) {
    JreStrongAssignAndConsume(&ADAnimator_AnimatorCaller_$Lambda$3_instance, new_ADAnimator_AnimatorCaller_$Lambda$3_init());
    J2OBJC_SET_INITIALIZED(ADAnimator_AnimatorCaller_$Lambda$3)
  }
}

@end

void ADAnimator_AnimatorCaller_$Lambda$3_init(ADAnimator_AnimatorCaller_$Lambda$3 *self) {
  NSObject_init(self);
}

ADAnimator_AnimatorCaller_$Lambda$3 *new_ADAnimator_AnimatorCaller_$Lambda$3_init() {
  J2OBJC_NEW_IMPL(ADAnimator_AnimatorCaller_$Lambda$3, init)
}

ADAnimator_AnimatorCaller_$Lambda$3 *create_ADAnimator_AnimatorCaller_$Lambda$3_init() {
  J2OBJC_CREATE_IMPL(ADAnimator_AnimatorCaller_$Lambda$3, init)
}

J2OBJC_INITIALIZED_DEFN(ADAnimator_AnimatorCaller_$Lambda$4)

@implementation ADAnimator_AnimatorCaller_$Lambda$4

- (void)callWithId:(id<ADAnimator_AnimatorListener>)listener
            withId:(ADAnimator *)animator
       withBoolean:(jboolean)isReverse {
  [((id<ADAnimator_AnimatorListener>) nil_chk(listener)) onAnimationRepeatWithADAnimator:animator];
}

+ (void)initialize {
  if (self == [ADAnimator_AnimatorCaller_$Lambda$4 class]) {
    JreStrongAssignAndConsume(&ADAnimator_AnimatorCaller_$Lambda$4_instance, new_ADAnimator_AnimatorCaller_$Lambda$4_init());
    J2OBJC_SET_INITIALIZED(ADAnimator_AnimatorCaller_$Lambda$4)
  }
}

@end

void ADAnimator_AnimatorCaller_$Lambda$4_init(ADAnimator_AnimatorCaller_$Lambda$4 *self) {
  NSObject_init(self);
}

ADAnimator_AnimatorCaller_$Lambda$4 *new_ADAnimator_AnimatorCaller_$Lambda$4_init() {
  J2OBJC_NEW_IMPL(ADAnimator_AnimatorCaller_$Lambda$4, init)
}

ADAnimator_AnimatorCaller_$Lambda$4 *create_ADAnimator_AnimatorCaller_$Lambda$4_init() {
  J2OBJC_CREATE_IMPL(ADAnimator_AnimatorCaller_$Lambda$4, init)
}

J2OBJC_INITIALIZED_DEFN(ADAnimator_AnimatorCaller_$Lambda$5)

@implementation ADAnimator_AnimatorCaller_$Lambda$5

- (void)callWithId:(id<ADAnimator_AnimatorPauseListener>)listener
            withId:(ADAnimator *)animator
       withBoolean:(jboolean)isReverse {
  [((id<ADAnimator_AnimatorPauseListener>) nil_chk(listener)) onAnimationPauseWithADAnimator:animator];
}

+ (void)initialize {
  if (self == [ADAnimator_AnimatorCaller_$Lambda$5 class]) {
    JreStrongAssignAndConsume(&ADAnimator_AnimatorCaller_$Lambda$5_instance, new_ADAnimator_AnimatorCaller_$Lambda$5_init());
    J2OBJC_SET_INITIALIZED(ADAnimator_AnimatorCaller_$Lambda$5)
  }
}

@end

void ADAnimator_AnimatorCaller_$Lambda$5_init(ADAnimator_AnimatorCaller_$Lambda$5 *self) {
  NSObject_init(self);
}

ADAnimator_AnimatorCaller_$Lambda$5 *new_ADAnimator_AnimatorCaller_$Lambda$5_init() {
  J2OBJC_NEW_IMPL(ADAnimator_AnimatorCaller_$Lambda$5, init)
}

ADAnimator_AnimatorCaller_$Lambda$5 *create_ADAnimator_AnimatorCaller_$Lambda$5_init() {
  J2OBJC_CREATE_IMPL(ADAnimator_AnimatorCaller_$Lambda$5, init)
}

J2OBJC_INITIALIZED_DEFN(ADAnimator_AnimatorCaller_$Lambda$6)

@implementation ADAnimator_AnimatorCaller_$Lambda$6

- (void)callWithId:(id<ADAnimator_AnimatorPauseListener>)listener
            withId:(ADAnimator *)animator
       withBoolean:(jboolean)isReverse {
  [((id<ADAnimator_AnimatorPauseListener>) nil_chk(listener)) onAnimationResumeWithADAnimator:animator];
}

+ (void)initialize {
  if (self == [ADAnimator_AnimatorCaller_$Lambda$6 class]) {
    JreStrongAssignAndConsume(&ADAnimator_AnimatorCaller_$Lambda$6_instance, new_ADAnimator_AnimatorCaller_$Lambda$6_init());
    J2OBJC_SET_INITIALIZED(ADAnimator_AnimatorCaller_$Lambda$6)
  }
}

@end

void ADAnimator_AnimatorCaller_$Lambda$6_init(ADAnimator_AnimatorCaller_$Lambda$6 *self) {
  NSObject_init(self);
}

ADAnimator_AnimatorCaller_$Lambda$6 *new_ADAnimator_AnimatorCaller_$Lambda$6_init() {
  J2OBJC_NEW_IMPL(ADAnimator_AnimatorCaller_$Lambda$6, init)
}

ADAnimator_AnimatorCaller_$Lambda$6 *create_ADAnimator_AnimatorCaller_$Lambda$6_init() {
  J2OBJC_CREATE_IMPL(ADAnimator_AnimatorCaller_$Lambda$6, init)
}

J2OBJC_INITIALIZED_DEFN(ADAnimator_AnimatorCaller_$Lambda$7)

@implementation ADAnimator_AnimatorCaller_$Lambda$7

- (void)callWithId:(id<ADValueAnimator_AnimatorUpdateListener>)listener
            withId:(ADValueAnimator *)animator
       withBoolean:(jboolean)isReverse {
  [((id<ADValueAnimator_AnimatorUpdateListener>) nil_chk(listener)) onAnimationUpdateWithADValueAnimator:animator];
}

+ (void)initialize {
  if (self == [ADAnimator_AnimatorCaller_$Lambda$7 class]) {
    JreStrongAssignAndConsume(&ADAnimator_AnimatorCaller_$Lambda$7_instance, new_ADAnimator_AnimatorCaller_$Lambda$7_init());
    J2OBJC_SET_INITIALIZED(ADAnimator_AnimatorCaller_$Lambda$7)
  }
}

@end

void ADAnimator_AnimatorCaller_$Lambda$7_init(ADAnimator_AnimatorCaller_$Lambda$7 *self) {
  NSObject_init(self);
}

ADAnimator_AnimatorCaller_$Lambda$7 *new_ADAnimator_AnimatorCaller_$Lambda$7_init() {
  J2OBJC_NEW_IMPL(ADAnimator_AnimatorCaller_$Lambda$7, init)
}

ADAnimator_AnimatorCaller_$Lambda$7 *create_ADAnimator_AnimatorCaller_$Lambda$7_init() {
  J2OBJC_CREATE_IMPL(ADAnimator_AnimatorCaller_$Lambda$7, init)
}
