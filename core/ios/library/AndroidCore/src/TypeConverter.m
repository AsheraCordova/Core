//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\animation\TypeConverter.java
//

#define J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION 1




#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "TypeConverter.h"




#pragma clang diagnostic error "-Wreturn-type"
#pragma clang diagnostic ignored "-Wswitch"


@interface ADTypeConverter () {
 @public
  IOSClass *mFromClass_;
  IOSClass *mToClass_;
}

@end

J2OBJC_FIELD_SETTER(ADTypeConverter, mFromClass_, IOSClass *)
J2OBJC_FIELD_SETTER(ADTypeConverter, mToClass_, IOSClass *)

@implementation ADTypeConverter

- (instancetype)initWithIOSClass:(IOSClass *)fromClass
                    withIOSClass:(IOSClass *)toClass {
  ADTypeConverter_initWithIOSClass_withIOSClass_(self, fromClass, toClass);
  return self;
}

- (IOSClass *)getTargetType {
  return mToClass_;
}

- (IOSClass *)getSourceType {
  return mFromClass_;
}

- (id)convertWithId:(id)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)dealloc {
  RELEASE_(mFromClass_);
  RELEASE_(mToClass_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LIOSClass;", 0x0, -1, -1, -1, 2, -1, -1 },
    { NULL, "LIOSClass;", 0x0, -1, -1, -1, 3, -1, -1 },
    { NULL, "LNSObject;", 0x401, 4, 5, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withIOSClass:);
  methods[1].selector = @selector(getTargetType);
  methods[2].selector = @selector(getSourceType);
  methods[3].selector = @selector(convertWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mFromClass_", "LIOSClass;", .constantValue.asLong = 0, 0x2, -1, -1, 7, -1 },
    { "mToClass_", "LIOSClass;", .constantValue.asLong = 0, 0x2, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;LIOSClass;", "(Ljava/lang/Class<TT;>;Ljava/lang/Class<TV;>;)V", "()Ljava/lang/Class<TV;>;", "()Ljava/lang/Class<TT;>;", "convert", "LNSObject;", "(TT;)TV;", "Ljava/lang/Class<TT;>;", "Ljava/lang/Class<TV;>;", "<T:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _ADTypeConverter = { "TypeConverter", "r.android.animation", ptrTable, methods, fields, 7, 0x401, 4, 2, -1, -1, -1, 9, -1 };
  return &_ADTypeConverter;
}

@end

void ADTypeConverter_initWithIOSClass_withIOSClass_(ADTypeConverter *self, IOSClass *fromClass, IOSClass *toClass) {
  NSObject_init(self);
  JreStrongAssign(&self->mFromClass_, fromClass);
  JreStrongAssign(&self->mToClass_, toClass);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADTypeConverter)

J2OBJC_NAME_MAPPING(ADTypeConverter, "r.android.animation", "AD")
