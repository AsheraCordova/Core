//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\stub\r\android\view\LayoutInflater.java
//

#define J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION 1




#include "Context.h"
#include "J2ObjC_source.h"
#include "LayoutInflater.h"
#include "PluginInvoker.h"
#include "View.h"
#include "ViewGroup.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"




#pragma clang diagnostic error "-Wreturn-type"
#pragma clang diagnostic ignored "-Wswitch"


@implementation ADLayoutInflater

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADLayoutInflater_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (ADLayoutInflater *)fromWithADContext:(ADContext *)context {
  return ADLayoutInflater_fromWithADContext_(context);
}

- (ADView *)inflateWithInt:(int32_t)layout
           withADViewGroup:(ADViewGroup *)parent
               withBoolean:(bool)b {
  return nil;
}

- (ADView *)inflateWithNSString:(NSString *)layout
                withADViewGroup:(ADViewGroup *)parent
                    withBoolean:(bool)b {
  return [((ADViewGroup *) nil_chk(parent)) inflateViewWithNSString:layout];
}

+ (void)recurseSetWithADViewGroup:(ADViewGroup *)parent
       withADView_OnClickListener:(id<ADView_OnClickListener>)onClickListener {
  ADLayoutInflater_recurseSetWithADViewGroup_withADView_OnClickListener_(parent, onClickListener);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LADLayoutInflater;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LADView;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LADView;", 0x1, 2, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(fromWithADContext:);
  methods[2].selector = @selector(inflateWithInt:withADViewGroup:withBoolean:);
  methods[3].selector = @selector(inflateWithNSString:withADViewGroup:withBoolean:);
  methods[4].selector = @selector(recurseSetWithADViewGroup:withADView_OnClickListener:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "from", "LADContext;", "inflate", "ILADViewGroup;Z", "LNSString;LADViewGroup;Z", "recurseSet", "LADViewGroup;LADView_OnClickListener;" };
  static const J2ObjcClassInfo _ADLayoutInflater = { "LayoutInflater", "r.android.view", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, -1, -1, -1, -1 };
  return &_ADLayoutInflater;
}

@end

void ADLayoutInflater_init(ADLayoutInflater *self) {
  NSObject_init(self);
}

ADLayoutInflater *new_ADLayoutInflater_init() {
  J2OBJC_NEW_IMPL(ADLayoutInflater, init)
}

ADLayoutInflater *create_ADLayoutInflater_init() {
  J2OBJC_CREATE_IMPL(ADLayoutInflater, init)
}

ADLayoutInflater *ADLayoutInflater_fromWithADContext_(ADContext *context) {
  ADLayoutInflater_initialize();
  return create_ADLayoutInflater_init();
}

void ADLayoutInflater_recurseSetWithADViewGroup_withADView_OnClickListener_(ADViewGroup *parent, id<ADView_OnClickListener> onClickListener) {
  ADLayoutInflater_initialize();
  if ([((NSString *) nil_chk(ASPluginInvoker_getOS())) java_equalsIgnoreCase:@"swt"]) {
    for (int32_t i = 0; i < [((ADViewGroup *) nil_chk(parent)) getChildCount]; i++) {
      ADView *child = JreRetainedLocalValue([parent getChildAtWithInt:i]);
      [((ADView *) nil_chk(child)) setMyAttributeWithNSString:@"onClick" withId:onClickListener];
      if ([child isKindOfClass:[ADViewGroup class]]) {
        ADLayoutInflater_recurseSetWithADViewGroup_withADView_OnClickListener_((ADViewGroup *) child, onClickListener);
      }
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADLayoutInflater)

J2OBJC_NAME_MAPPING(ADLayoutInflater, "r.android.view", "AD")
