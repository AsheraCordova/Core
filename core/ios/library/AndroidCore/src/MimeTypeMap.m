//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\java\r\android\webkit\MimeTypeMap.java
//

#define J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION 1




#include "J2ObjC_source.h"
#include "MimeTypeMap.h"
#include "java/lang/Boolean.h"
#include "java/lang/Character.h"
#include "java/lang/Integer.h"
#include "java/util/HashMap.h"
#include "java/util/regex/Pattern.h"


@class NSString;


#pragma clang diagnostic error "-Wreturn-type"
#pragma clang diagnostic ignored "-Wswitch"


@interface ADMimeTypeMap () {
 @public
  /*!
   @brief MIME-type to file extension mapping:
   */
  JavaUtilHashMap *mMimeTypeToExtensionMap_;
  /*!
   @brief File extension to MIME type mapping:
   */
  JavaUtilHashMap *mExtensionToMimeTypeMap_;
}

/*!
 @brief Creates a new MIME-type map.
 */
- (instancetype)init;

/*!
 @brief Load an entry into the map.This does not check if the item already
  exists, it trusts the caller!
 */
- (void)loadEntryWithNSString:(NSString *)mimeType
                 withNSString:(NSString *)extension;

+ (NSString *)mimeTypeFromExtensionWithNSString:(NSString *)extension;

@end

J2OBJC_FIELD_SETTER(ADMimeTypeMap, mMimeTypeToExtensionMap_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ADMimeTypeMap, mExtensionToMimeTypeMap_, JavaUtilHashMap *)

/*!
 @brief Singleton MIME-type map instance:
 */
inline ADMimeTypeMap *ADMimeTypeMap_get_sMimeTypeMap(void);
inline ADMimeTypeMap *ADMimeTypeMap_set_sMimeTypeMap(ADMimeTypeMap *value);
static ADMimeTypeMap *ADMimeTypeMap_sMimeTypeMap;
J2OBJC_STATIC_FIELD_OBJ(ADMimeTypeMap, sMimeTypeMap, ADMimeTypeMap *)

__attribute__((unused)) static void ADMimeTypeMap_init(ADMimeTypeMap *self);

__attribute__((unused)) static ADMimeTypeMap *new_ADMimeTypeMap_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ADMimeTypeMap *create_ADMimeTypeMap_init(void);

__attribute__((unused)) static void ADMimeTypeMap_loadEntryWithNSString_withNSString_(ADMimeTypeMap *self, NSString *mimeType, NSString *extension);

__attribute__((unused)) static NSString *ADMimeTypeMap_mimeTypeFromExtensionWithNSString_(NSString *extension);

@implementation ADMimeTypeMap

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADMimeTypeMap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NSString *)getFileExtensionFromUrlWithNSString:(NSString *)url {
  return ADMimeTypeMap_getFileExtensionFromUrlWithNSString_(url);
}

- (void)loadEntryWithNSString:(NSString *)mimeType
                 withNSString:(NSString *)extension {
  ADMimeTypeMap_loadEntryWithNSString_withNSString_(self, mimeType, extension);
}

- (bool)hasMimeTypeWithNSString:(NSString *)mimeType {
  if (mimeType != nil && [mimeType java_length] > 0) {
    return [((JavaUtilHashMap *) nil_chk(mMimeTypeToExtensionMap_)) containsKeyWithId:mimeType];
  }
  return false;
}

- (NSString *)getMimeTypeFromExtensionWithNSString:(NSString *)extension {
  if (extension != nil && [extension java_length] > 0) {
    return [((JavaUtilHashMap *) nil_chk(mExtensionToMimeTypeMap_)) getWithId:extension];
  }
  return nil;
}

+ (NSString *)mimeTypeFromExtensionWithNSString:(NSString *)extension {
  return ADMimeTypeMap_mimeTypeFromExtensionWithNSString_(extension);
}

- (bool)hasExtensionWithNSString:(NSString *)extension {
  if (extension != nil && [extension java_length] > 0) {
    return [((JavaUtilHashMap *) nil_chk(mExtensionToMimeTypeMap_)) containsKeyWithId:extension];
  }
  return false;
}

- (NSString *)getExtensionFromMimeTypeWithNSString:(NSString *)mimeType {
  if (mimeType != nil && [mimeType java_length] > 0) {
    return [((JavaUtilHashMap *) nil_chk(mMimeTypeToExtensionMap_)) getWithId:mimeType];
  }
  return nil;
}

+ (ADMimeTypeMap *)getSingleton {
  return ADMimeTypeMap_getSingleton();
}

- (void)dealloc {
  RELEASE_(mMimeTypeToExtensionMap_);
  RELEASE_(mExtensionToMimeTypeMap_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 6, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 8, 1, -1, -1, -1, -1 },
    { NULL, "LADMimeTypeMap;", 0x9, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getFileExtensionFromUrlWithNSString:);
  methods[2].selector = @selector(loadEntryWithNSString:withNSString:);
  methods[3].selector = @selector(hasMimeTypeWithNSString:);
  methods[4].selector = @selector(getMimeTypeFromExtensionWithNSString:);
  methods[5].selector = @selector(mimeTypeFromExtensionWithNSString:);
  methods[6].selector = @selector(hasExtensionWithNSString:);
  methods[7].selector = @selector(getExtensionFromMimeTypeWithNSString:);
  methods[8].selector = @selector(getSingleton);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sMimeTypeMap", "LADMimeTypeMap;", .constantValue.asLong = 0, 0xa, -1, 9, -1, -1 },
    { "mMimeTypeToExtensionMap_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x2, -1, -1, 10, -1 },
    { "mExtensionToMimeTypeMap_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x2, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "getFileExtensionFromUrl", "LNSString;", "loadEntry", "LNSString;LNSString;", "hasMimeType", "getMimeTypeFromExtension", "mimeTypeFromExtension", "hasExtension", "getExtensionFromMimeType", &ADMimeTypeMap_sMimeTypeMap, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _ADMimeTypeMap = { "MimeTypeMap", "r.android.webkit", ptrTable, methods, fields, 7, 0x1, 9, 3, -1, -1, -1, -1, -1 };
  return &_ADMimeTypeMap;
}

@end

void ADMimeTypeMap_init(ADMimeTypeMap *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->mMimeTypeToExtensionMap_, new_JavaUtilHashMap_init());
  JreStrongAssignAndConsume(&self->mExtensionToMimeTypeMap_, new_JavaUtilHashMap_init());
}

ADMimeTypeMap *new_ADMimeTypeMap_init() {
  J2OBJC_NEW_IMPL(ADMimeTypeMap, init)
}

ADMimeTypeMap *create_ADMimeTypeMap_init() {
  J2OBJC_CREATE_IMPL(ADMimeTypeMap, init)
}

NSString *ADMimeTypeMap_getFileExtensionFromUrlWithNSString_(NSString *url) {
  ADMimeTypeMap_initialize();
  if (url != nil && [url java_length] > 0) {
    int32_t query = [url java_lastIndexOf:'?'];
    if (query > 0) {
      url = [url java_substring:0 endIndex:query];
    }
    int32_t filenamePos = [((NSString *) nil_chk(url)) java_lastIndexOf:'/'];
    NSString *filename = 0 <= filenamePos ? [url java_substring:filenamePos + 1] : url;
    if ([filename java_length] > 0 && JavaUtilRegexPattern_matchesWithNSString_withJavaLangCharSequence_(@"[a-zA-Z_0-9\\.\\-\\(\\)\\%]+", filename)) {
      int32_t dotPos = [filename java_lastIndexOf:'.'];
      if (0 <= dotPos) {
        return [filename java_substring:dotPos + 1];
      }
    }
  }
  return @"";
}

void ADMimeTypeMap_loadEntryWithNSString_withNSString_(ADMimeTypeMap *self, NSString *mimeType, NSString *extension) {
  if (![((JavaUtilHashMap *) nil_chk(self->mMimeTypeToExtensionMap_)) containsKeyWithId:mimeType]) {
    [((JavaUtilHashMap *) nil_chk(self->mMimeTypeToExtensionMap_)) putWithId:mimeType withId:extension];
  }
  [((JavaUtilHashMap *) nil_chk(self->mExtensionToMimeTypeMap_)) putWithId:extension withId:mimeType];
}

NSString *ADMimeTypeMap_mimeTypeFromExtensionWithNSString_(NSString *extension) {
  ADMimeTypeMap_initialize();
  return [((ADMimeTypeMap *) nil_chk(ADMimeTypeMap_getSingleton())) getMimeTypeFromExtensionWithNSString:extension];
}

ADMimeTypeMap *ADMimeTypeMap_getSingleton() {
  ADMimeTypeMap_initialize();
  if (ADMimeTypeMap_sMimeTypeMap == nil) {
    JreStrongAssignAndConsume(&ADMimeTypeMap_sMimeTypeMap, new_ADMimeTypeMap_init());
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(ADMimeTypeMap_sMimeTypeMap, @"application/andrew-inset", @"ez");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/dsptype", @"tsp");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/futuresplash", @"spl");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/hta", @"hta");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/mac-binhex40", @"hqx");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/mac-compactpro", @"cpt");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/mathematica", @"nb");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/msaccess", @"mdb");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/oda", @"oda");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/ogg", @"ogg");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/pdf", @"pdf");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/pgp-keys", @"key");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/pgp-signature", @"pgp");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/pics-rules", @"prf");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/rar", @"rar");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/rdf+xml", @"rdf");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/rss+xml", @"rss");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/zip", @"zip");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.android.package-archive", @"apk");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.cinderella", @"cdy");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.ms-pki.stl", @"stl");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.oasis.opendocument.database", @"odb");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.oasis.opendocument.formula", @"odf");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.oasis.opendocument.graphics", @"odg");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.oasis.opendocument.graphics-template", @"otg");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.oasis.opendocument.image", @"odi");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.oasis.opendocument.spreadsheet", @"ods");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.oasis.opendocument.spreadsheet-template", @"ots");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.oasis.opendocument.text", @"odt");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.oasis.opendocument.text-master", @"odm");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.oasis.opendocument.text-template", @"ott");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.oasis.opendocument.text-web", @"oth");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/msword", @"doc");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/msword", @"dot");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.openxmlformats-officedocument.wordprocessingml.document", @"docx");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.openxmlformats-officedocument.wordprocessingml.template", @"dotx");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.ms-excel", @"xls");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.ms-excel", @"xlt");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", @"xlsx");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.openxmlformats-officedocument.spreadsheetml.template", @"xltx");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.ms-powerpoint", @"ppt");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.ms-powerpoint", @"pot");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.ms-powerpoint", @"pps");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.openxmlformats-officedocument.presentationml.presentation", @"pptx");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.openxmlformats-officedocument.presentationml.template", @"potx");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.openxmlformats-officedocument.presentationml.slideshow", @"ppsx");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.rim.cod", @"cod");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.smaf", @"mmf");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.stardivision.calc", @"sdc");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.stardivision.draw", @"sda");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.stardivision.impress", @"sdd");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.stardivision.impress", @"sdp");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.stardivision.math", @"smf");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.stardivision.writer", @"sdw");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.stardivision.writer", @"vor");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.stardivision.writer-global", @"sgl");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.sun.xml.calc", @"sxc");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.sun.xml.calc.template", @"stc");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.sun.xml.draw", @"sxd");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.sun.xml.draw.template", @"std");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.sun.xml.impress", @"sxi");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.sun.xml.impress.template", @"sti");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.sun.xml.math", @"sxm");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.sun.xml.writer", @"sxw");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.sun.xml.writer.global", @"sxg");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.sun.xml.writer.template", @"stw");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/vnd.visio", @"vsd");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-abiword", @"abw");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-apple-diskimage", @"dmg");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-bcpio", @"bcpio");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-bittorrent", @"torrent");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-cdf", @"cdf");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-cdlink", @"vcd");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-chess-pgn", @"pgn");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-cpio", @"cpio");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-debian-package", @"deb");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-debian-package", @"udeb");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-director", @"dcr");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-director", @"dir");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-director", @"dxr");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-dms", @"dms");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-doom", @"wad");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-dvi", @"dvi");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-flac", @"flac");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-font", @"pfa");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-font", @"pfb");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-font", @"gsf");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-font", @"pcf");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-font", @"pcf.Z");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-freemind", @"mm");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-futuresplash", @"spl");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-gnumeric", @"gnumeric");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-go-sgf", @"sgf");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-graphing-calculator", @"gcf");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-gtar", @"gtar");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-gtar", @"tgz");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-gtar", @"taz");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-hdf", @"hdf");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-ica", @"ica");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-internet-signup", @"ins");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-internet-signup", @"isp");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-iphone", @"iii");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-iso9660-image", @"iso");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-jmol", @"jmz");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-kchart", @"chrt");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-killustrator", @"kil");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-koan", @"skp");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-koan", @"skd");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-koan", @"skt");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-koan", @"skm");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-kpresenter", @"kpr");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-kpresenter", @"kpt");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-kspread", @"ksp");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-kword", @"kwd");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-kword", @"kwt");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-latex", @"latex");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-lha", @"lha");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-lzh", @"lzh");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-lzx", @"lzx");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-maker", @"frm");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-maker", @"maker");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-maker", @"frame");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-maker", @"fb");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-maker", @"book");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-maker", @"fbdoc");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-mif", @"mif");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-ms-wmd", @"wmd");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-ms-wmz", @"wmz");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-msi", @"msi");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-ns-proxy-autoconfig", @"pac");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-nwc", @"nwc");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-object", @"o");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-oz-application", @"oza");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-pkcs12", @"p12");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-pkcs7-certreqresp", @"p7r");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-pkcs7-crl", @"crl");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-quicktimeplayer", @"qtl");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-shar", @"shar");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-shockwave-flash", @"swf");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-stuffit", @"sit");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-sv4cpio", @"sv4cpio");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-sv4crc", @"sv4crc");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-tar", @"tar");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-texinfo", @"texinfo");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-texinfo", @"texi");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-troff", @"t");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-troff", @"roff");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-troff-man", @"man");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-ustar", @"ustar");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-wais-source", @"src");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-wingz", @"wz");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-webarchive", @"webarchive");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-x509-ca-cert", @"crt");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-x509-user-cert", @"crt");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-xcf", @"xcf");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/x-xfig", @"fig");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"application/xhtml+xml", @"xhtml");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/3gpp", @"3gpp");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/basic", @"snd");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/midi", @"mid");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/midi", @"midi");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/midi", @"kar");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/mpeg", @"mpga");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/mpeg", @"mpega");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/mpeg", @"mp2");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/mpeg", @"mp3");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/mpeg", @"m4a");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/mpegurl", @"m3u");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/prs.sid", @"sid");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/x-aiff", @"aif");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/x-aiff", @"aiff");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/x-aiff", @"aifc");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/x-gsm", @"gsm");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/x-mpegurl", @"m3u");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/x-ms-wma", @"wma");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/x-ms-wax", @"wax");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/x-pn-realaudio", @"ra");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/x-pn-realaudio", @"rm");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/x-pn-realaudio", @"ram");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/x-realaudio", @"ra");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/x-scpls", @"pls");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/x-sd2", @"sd2");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"audio/x-wav", @"wav");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/bmp", @"bmp");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/gif", @"gif");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/ico", @"cur");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/ico", @"ico");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/ief", @"ief");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/jpeg", @"jpeg");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/jpeg", @"jpg");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/jpeg", @"jpe");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/pcx", @"pcx");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/png", @"png");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/svg+xml", @"svg");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/svg+xml", @"svgz");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/tiff", @"tiff");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/tiff", @"tif");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/vnd.djvu", @"djvu");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/vnd.djvu", @"djv");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/vnd.wap.wbmp", @"wbmp");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/x-cmu-raster", @"ras");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/x-coreldraw", @"cdr");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/x-coreldrawpattern", @"pat");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/x-coreldrawtemplate", @"cdt");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/x-corelphotopaint", @"cpt");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/x-icon", @"ico");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/x-jg", @"art");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/x-jng", @"jng");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/x-ms-bmp", @"bmp");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/x-photoshop", @"psd");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/x-portable-anymap", @"pnm");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/x-portable-bitmap", @"pbm");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/x-portable-graymap", @"pgm");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/x-portable-pixmap", @"ppm");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/x-rgb", @"rgb");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/x-xbitmap", @"xbm");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/x-xpixmap", @"xpm");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"image/x-xwindowdump", @"xwd");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"model/iges", @"igs");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"model/iges", @"iges");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"model/mesh", @"msh");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"model/mesh", @"mesh");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"model/mesh", @"silo");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/calendar", @"ics");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/calendar", @"icz");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/comma-separated-values", @"csv");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/css", @"css");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/html", @"htm");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/html", @"html");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/h323", @"323");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/iuls", @"uls");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/mathml", @"mml");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/plain", @"txt");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/plain", @"asc");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/plain", @"text");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/plain", @"diff");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/plain", @"po");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/richtext", @"rtx");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/rtf", @"rtf");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/texmacs", @"ts");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/text", @"phps");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/tab-separated-values", @"tsv");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/xml", @"xml");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-bibtex", @"bib");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-boo", @"boo");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-c++hdr", @"h++");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-c++hdr", @"hpp");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-c++hdr", @"hxx");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-c++hdr", @"hh");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-c++src", @"c++");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-c++src", @"cpp");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-c++src", @"cxx");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-chdr", @"h");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-component", @"htc");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-csh", @"csh");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-csrc", @"c");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-dsrc", @"d");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-haskell", @"hs");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-java", @"java");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-literate-haskell", @"lhs");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-moc", @"moc");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-pascal", @"p");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-pascal", @"pas");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-pcs-gcd", @"gcd");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-setext", @"etx");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-tcl", @"tcl");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-tex", @"tex");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-tex", @"ltx");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-tex", @"sty");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-tex", @"cls");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-vcalendar", @"vcs");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"text/x-vcard", @"vcf");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/3gpp", @"3gpp");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/3gpp", @"3gp");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/3gpp", @"3g2");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/dl", @"dl");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/dv", @"dif");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/dv", @"dv");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/fli", @"fli");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/m4v", @"m4v");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/mpeg", @"mpeg");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/mpeg", @"mpg");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/mpeg", @"mpe");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/mp4", @"mp4");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/mpeg", @"VOB");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/quicktime", @"qt");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/quicktime", @"mov");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/vnd.mpegurl", @"mxu");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/x-la-asf", @"lsf");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/x-la-asf", @"lsx");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/x-mng", @"mng");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/x-ms-asf", @"asf");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/x-ms-asf", @"asx");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/x-ms-wm", @"wm");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/x-ms-wmv", @"wmv");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/x-ms-wmx", @"wmx");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/x-ms-wvx", @"wvx");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/x-msvideo", @"avi");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"video/x-sgi-movie", @"movie");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"x-conference/x-cooltalk", @"ice");
    ADMimeTypeMap_loadEntryWithNSString_withNSString_(nil_chk(ADMimeTypeMap_sMimeTypeMap), @"x-epoc/x-sisx-app", @"sisx");
  }
  return ADMimeTypeMap_sMimeTypeMap;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADMimeTypeMap)

J2OBJC_NAME_MAPPING(ADMimeTypeMap, "r.android.webkit", "AD")
