//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroid\src\main\stub\r\android\graphics\Path.java
//

#include "BezierPath.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Path.h"


@interface ADPath () {
 @public
  ADBezierPath *path_;
}

@end

J2OBJC_FIELD_SETTER(ADPath, path_, ADBezierPath *)

@implementation ADPath

- (instancetype)initWithADBezierPath:(ADBezierPath *)path {
  ADPath_initWithADBezierPath_(self, path);
  return self;
}

- (jboolean)isEmpty {
  return false;
}

- (IOSFloatArray *)approximateWithFloat:(jfloat)error {
  return [((ADBezierPath *) nil_chk(path_)) approximateWithFloat:error];
}

+ (ADPath *)createPathFromPathDataWithNSString:(NSString *)pathData {
  return ADPath_createPathFromPathDataWithNSString_(pathData);
}

- (void)dealloc {
  RELEASE_(path_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[F", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LADPath;", 0x9, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithADBezierPath:);
  methods[1].selector = @selector(isEmpty);
  methods[2].selector = @selector(approximateWithFloat:);
  methods[3].selector = @selector(createPathFromPathDataWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "path_", "LADBezierPath;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LADBezierPath;", "approximate", "F", "createPathFromPathData", "LNSString;", "LADPath_PathParser;" };
  static const J2ObjcClassInfo _ADPath = { "Path", "r.android.graphics", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, 5, -1, -1, -1 };
  return &_ADPath;
}

@end

void ADPath_initWithADBezierPath_(ADPath *self, ADBezierPath *path) {
  NSObject_init(self);
  JreStrongAssign(&self->path_, path);
}

ADPath *new_ADPath_initWithADBezierPath_(ADBezierPath *path) {
  J2OBJC_NEW_IMPL(ADPath, initWithADBezierPath_, path)
}

ADPath *create_ADPath_initWithADBezierPath_(ADBezierPath *path) {
  J2OBJC_CREATE_IMPL(ADPath, initWithADBezierPath_, path)
}

ADPath *ADPath_createPathFromPathDataWithNSString_(NSString *pathData) {
  ADPath_initialize();
  ADBezierPath *path = create_ADBezierPath_init();
  [path parsePathStringWithNSString:pathData];
  return create_ADPath_initWithADBezierPath_(path);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADPath)

@implementation ADPath_PathParser

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADPath_PathParser_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LADPath;" };
  static const J2ObjcClassInfo _ADPath_PathParser = { "PathParser", "r.android.graphics", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_ADPath_PathParser;
}

@end

void ADPath_PathParser_init(ADPath_PathParser *self) {
  NSObject_init(self);
}

ADPath_PathParser *new_ADPath_PathParser_init() {
  J2OBJC_NEW_IMPL(ADPath_PathParser, init)
}

ADPath_PathParser *create_ADPath_PathParser_init() {
  J2OBJC_CREATE_IMPL(ADPath_PathParser, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADPath_PathParser)
