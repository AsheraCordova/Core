//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\Plugin_HtmlParser\src\com\ashera\parser\html\HtmlParserPlugin.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_HtmlParserPlugin")
#ifdef RESTRICT_HtmlParserPlugin
#define INCLUDE_ALL_HtmlParserPlugin 0
#else
#define INCLUDE_ALL_HtmlParserPlugin 1
#endif
#undef RESTRICT_HtmlParserPlugin

#if !defined (ASHtmlParserPlugin_) && (INCLUDE_ALL_HtmlParserPlugin || defined(INCLUDE_ASHtmlParserPlugin))
#define ASHtmlParserPlugin_

#define RESTRICT_IPlugin 1
#define INCLUDE_ASIPlugin 1
#include "IPlugin.h"

#define RESTRICT_IHtmlParser 1
#define INCLUDE_ASIHtmlParser 1
#include "IHtmlParser.h"

@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@class NSString;
@protocol ASHasWidgets;
@protocol ASIFragment;
@protocol ASIWidget;

@interface ASHtmlParserPlugin : NSObject < ASIPlugin, ASIHtmlParser >

#pragma mark Public

- (instancetype)init;

- (void)addToCurrentParentWithId:(id)handler
                   withASIWidget:(id<ASIWidget>)widget;

- (id)getHandlerWithASHasWidgets:(id<ASHasWidgets>)parent
                         withInt:(int32_t)index
                 withASIFragment:(id<ASIFragment>)fragment;

- (NSString *)getName;

- (void)handlerEndWithId:(id)handler
           withASIWidget:(id<ASIWidget>)widget;

- (id<ASIWidget>)handlerStartWithId:(id)handler
                      withASIWidget:(id<ASIWidget>)widget
                            withInt:(int32_t)index;

- (id)invokeWithNSString:(NSString *)name
       withNSObjectArray:(IOSObjectArray *)args;

- (id<ASIWidget>)parseWithNSString:(NSString *)html
                       withBoolean:(bool)template_
                   withASIFragment:(id<ASIFragment>)fragment;

- (id<ASIWidget>)parseFileWithNSString:(NSString *)fileName
                           withBoolean:(bool)template_
                       withASIFragment:(id<ASIFragment>)fragment;

- (id<ASIWidget>)parseFragmentWithNSString:(NSString *)fileNameOrHtml
                               withBoolean:(bool)template_
                           withASIFragment:(id<ASIFragment>)fragment;

- (void)parseIncludeWithASHasWidgets:(id<ASHasWidgets>)parent
                        withNSString:(NSString *)fileName
                        withNSString:(NSString *)componentId
                         withBoolean:(bool)template_
                     withASIFragment:(id<ASIFragment>)fragment;

- (id<ASIWidget>)parseWithParentWithNSString:(NSString *)html
                                 withBoolean:(bool)template_
                            withASHasWidgets:(id<ASHasWidgets>)parent
                             withASIFragment:(id<ASIFragment>)fragment;

- (NSString *)xml2jsonWithNSString:(NSString *)xml
                   withASIFragment:(id<ASIFragment>)fragment;

@end

J2OBJC_EMPTY_STATIC_INIT(ASHtmlParserPlugin)

FOUNDATION_EXPORT void ASHtmlParserPlugin_init(ASHtmlParserPlugin *self);

FOUNDATION_EXPORT ASHtmlParserPlugin *new_ASHtmlParserPlugin_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ASHtmlParserPlugin *create_ASHtmlParserPlugin_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ASHtmlParserPlugin)

@compatibility_alias ComAsheraParserHtmlHtmlParserPlugin ASHtmlParserPlugin;


#endif

#pragma pop_macro("INCLUDE_ALL_HtmlParserPlugin")
