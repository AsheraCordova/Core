//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\SWTAndroidX-core\src\main\java\androidx\core\view\NestedScrollingParent3.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NestedScrollingParent3")
#ifdef RESTRICT_NestedScrollingParent3
#define INCLUDE_ALL_NestedScrollingParent3 0
#else
#define INCLUDE_ALL_NestedScrollingParent3 1
#endif
#undef RESTRICT_NestedScrollingParent3

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ADXNestedScrollingParent3_) && (INCLUDE_ALL_NestedScrollingParent3 || defined(INCLUDE_ADXNestedScrollingParent3))
#define ADXNestedScrollingParent3_

#define RESTRICT_NestedScrollingParent2 1
#define INCLUDE_ADXNestedScrollingParent2 1
#include "NestedScrollingParent2.h"

@class ADView;
@class IOSIntArray;
@class JavaLangInteger;

/*!
 @brief This interface should be implemented by <code>ViewGroup</code> subclasses
  that wish to support scrolling operations delegated by a nested child view.
 <p>Classes implementing this interface should create a final instance of a 
 <code>NestedScrollingParentHelper</code> as a field and delegate any View or ViewGroup methods
  to the <code>NestedScrollingParentHelper</code> methods of the same signature.</p>
  
 <p>Views invoking nested scrolling functionality should always do so from the relevant 
 <code>ViewCompat</code>, <code>ViewGroupCompat</code> or <code>ViewParentCompat</code> compatibility
  shim static methods. This ensures interoperability with nested scrolling views on all versions
  of Android.</p>
 */
@protocol ADXNestedScrollingParent3 < ADXNestedScrollingParent2, JavaObject >

/*!
 @brief React to a nested scroll in progress.
 <p>This method will be called when the ViewParent's current nested scrolling child view
  dispatches a nested scroll event. To receive calls to this method the ViewParent must have
  previously returned <code>true</code> for a call to 
 <code>onStartNestedScroll(View, View, int, int)</code>.
  
 <p>Both the consumed and unconsumed portions of the scroll distance are reported to the
  ViewParent. An implementation may choose to use the consumed portion to match or chase scroll
  position of multiple child elements, for example. The unconsumed portion may be used to
  allow continuous dragging of multiple scrolling or draggable elements, such as scrolling
  a list within a vertical drawer where the drawer begins dragging once the edge of inner
  scrolling content is reached. 
 <p>This method is called when a nested scrolling child invokes 
 <code>NestedScrollingChild3.dispatchNestedScroll(int, int, int, int, int[], int, int[])</code>} or
  one of methods it overloads. 
 <p>An implementation must report how many pixels of the the x and y scroll distances were
  consumed by this nested scrolling parent by adding the consumed distances to the 
 <code>consumed</code> parameter. If this View also implements <code>NestedScrollingChild3</code>,
  <code>consumed</code> should also be passed up to it's nested scrolling parent so that the
  parent may also add any scroll distance it consumes. Index 0 corresponds to dx and index 1
  corresponds to dy.
 @param target The descendant view controlling the nested scroll
 @param dxConsumed Horizontal scroll distance in pixels already consumed by target
 @param dyConsumed Vertical scroll distance in pixels already consumed by target
 @param dxUnconsumed Horizontal scroll distance in pixels not consumed by target
 @param dyUnconsumed Vertical scroll distance in pixels not consumed by target
 @param type the type of input which cause this scroll event
 @param consumed Output. Upon this method returning, will contain the scroll                  distances consumed by this nested scrolling parent and the scroll distances
                   consumed by any other parent up the view hierarchy
 - seealso: NestedScrollingChild3#dispatchNestedScroll(int, int, int, int, int[], int, int[])
 */
- (void)onNestedScrollWithADView:(ADView *)target
                         withInt:(int32_t)dxConsumed
                         withInt:(int32_t)dyConsumed
                         withInt:(int32_t)dxUnconsumed
                         withInt:(int32_t)dyUnconsumed
                         withInt:(int32_t)type
                    withIntArray:(IOSIntArray *)consumed;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXNestedScrollingParent3)

J2OBJC_TYPE_LITERAL_HEADER(ADXNestedScrollingParent3)

#define AndroidxCoreViewNestedScrollingParent3 ADXNestedScrollingParent3


#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_NestedScrollingParent3")
