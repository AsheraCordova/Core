//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\AndroidJMaterial\src\main\java\com\google\android\material\animation\MaterialAnimationUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_MaterialAnimationUtils")
#ifdef RESTRICT_MaterialAnimationUtils
#define INCLUDE_ALL_MaterialAnimationUtils 0
#else
#define INCLUDE_ALL_MaterialAnimationUtils 1
#endif
#undef RESTRICT_MaterialAnimationUtils

#if !defined (ADXMaterialAnimationUtils_) && (INCLUDE_ALL_MaterialAnimationUtils || defined(INCLUDE_ADXMaterialAnimationUtils))
#define ADXMaterialAnimationUtils_

@protocol ADTimeInterpolator;

/*!
 @brief Utility class for animations containing Material interpolators.
 */
@interface ADXMaterialAnimationUtils : NSObject

#pragma mark Public

- (instancetype)init;

/*!
 @brief Linear interpolation between <code>startValue</code> and <code>endValue</code> by <code>fraction</code>.
 */
+ (jfloat)lerpWithFloat:(jfloat)startValue
              withFloat:(jfloat)endValue
              withFloat:(jfloat)fraction;

/*!
 @brief Linear interpolation between <code>outputMin</code> and <code>outputMax</code> when <code>value</code> is
  between <code>inputMin</code> and <code>inputMax</code>.
 <p>Note that <code>value</code> will be coerced into <code>inputMin</code> and <code>inputMax</code>.This
  function can handle input and output ranges that span positive and negative numbers.
 */
+ (jfloat)lerpWithFloat:(jfloat)outputMin
              withFloat:(jfloat)outputMax
              withFloat:(jfloat)inputMin
              withFloat:(jfloat)inputMax
              withFloat:(jfloat)value;

/*!
 @brief Linear interpolation between <code>startValue</code> and <code>endValue</code> by <code>fraction</code>.
 */
+ (jint)lerpWithInt:(jint)startValue
            withInt:(jint)endValue
          withFloat:(jfloat)fraction;

@end

J2OBJC_STATIC_INIT(ADXMaterialAnimationUtils)

inline id<ADTimeInterpolator> ADXMaterialAnimationUtils_get_LINEAR_INTERPOLATOR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<ADTimeInterpolator> ADXMaterialAnimationUtils_LINEAR_INTERPOLATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXMaterialAnimationUtils, LINEAR_INTERPOLATOR, id<ADTimeInterpolator>)

inline id<ADTimeInterpolator> ADXMaterialAnimationUtils_get_FAST_OUT_SLOW_IN_INTERPOLATOR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<ADTimeInterpolator> ADXMaterialAnimationUtils_FAST_OUT_SLOW_IN_INTERPOLATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXMaterialAnimationUtils, FAST_OUT_SLOW_IN_INTERPOLATOR, id<ADTimeInterpolator>)

inline id<ADTimeInterpolator> ADXMaterialAnimationUtils_get_FAST_OUT_LINEAR_IN_INTERPOLATOR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<ADTimeInterpolator> ADXMaterialAnimationUtils_FAST_OUT_LINEAR_IN_INTERPOLATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXMaterialAnimationUtils, FAST_OUT_LINEAR_IN_INTERPOLATOR, id<ADTimeInterpolator>)

inline id<ADTimeInterpolator> ADXMaterialAnimationUtils_get_LINEAR_OUT_SLOW_IN_INTERPOLATOR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<ADTimeInterpolator> ADXMaterialAnimationUtils_LINEAR_OUT_SLOW_IN_INTERPOLATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXMaterialAnimationUtils, LINEAR_OUT_SLOW_IN_INTERPOLATOR, id<ADTimeInterpolator>)

inline id<ADTimeInterpolator> ADXMaterialAnimationUtils_get_DECELERATE_INTERPOLATOR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<ADTimeInterpolator> ADXMaterialAnimationUtils_DECELERATE_INTERPOLATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXMaterialAnimationUtils, DECELERATE_INTERPOLATOR, id<ADTimeInterpolator>)

FOUNDATION_EXPORT void ADXMaterialAnimationUtils_init(ADXMaterialAnimationUtils *self);

FOUNDATION_EXPORT ADXMaterialAnimationUtils *new_ADXMaterialAnimationUtils_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXMaterialAnimationUtils *create_ADXMaterialAnimationUtils_init(void);

FOUNDATION_EXPORT jfloat ADXMaterialAnimationUtils_lerpWithFloat_withFloat_withFloat_(jfloat startValue, jfloat endValue, jfloat fraction);

FOUNDATION_EXPORT jint ADXMaterialAnimationUtils_lerpWithInt_withInt_withFloat_(jint startValue, jint endValue, jfloat fraction);

FOUNDATION_EXPORT jfloat ADXMaterialAnimationUtils_lerpWithFloat_withFloat_withFloat_withFloat_withFloat_(jfloat outputMin, jfloat outputMax, jfloat inputMin, jfloat inputMax, jfloat value);

J2OBJC_TYPE_LITERAL_HEADER(ADXMaterialAnimationUtils)

@compatibility_alias ComGoogleAndroidMaterialAnimationMaterialAnimationUtils ADXMaterialAnimationUtils;

#endif

#pragma pop_macro("INCLUDE_ALL_MaterialAnimationUtils")
