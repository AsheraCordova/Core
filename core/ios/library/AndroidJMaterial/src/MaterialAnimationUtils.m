//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\AndroidJMaterial\src\main\java\com\google\android\material\animation\MaterialAnimationUtils.java
//

#define J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION 1




#include "DecelerateInterpolator.h"
#include "FastOutLinearInInterpolator.h"
#include "FastOutSlowInInterpolator.h"
#include "J2ObjC_source.h"
#include "LinearInterpolator.h"
#include "LinearOutSlowInInterpolator.h"
#include "MaterialAnimationUtils.h"
#include "TimeInterpolator.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"




#pragma clang diagnostic error "-Wreturn-type"
#pragma clang diagnostic ignored "-Wswitch"


J2OBJC_INITIALIZED_DEFN(ADXMaterialAnimationUtils)

id<ADTimeInterpolator> ADXMaterialAnimationUtils_LINEAR_INTERPOLATOR;
id<ADTimeInterpolator> ADXMaterialAnimationUtils_FAST_OUT_SLOW_IN_INTERPOLATOR;
id<ADTimeInterpolator> ADXMaterialAnimationUtils_FAST_OUT_LINEAR_IN_INTERPOLATOR;
id<ADTimeInterpolator> ADXMaterialAnimationUtils_LINEAR_OUT_SLOW_IN_INTERPOLATOR;
id<ADTimeInterpolator> ADXMaterialAnimationUtils_DECELERATE_INTERPOLATOR;

@implementation ADXMaterialAnimationUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ADXMaterialAnimationUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (float)lerpWithFloat:(float)startValue
             withFloat:(float)endValue
             withFloat:(float)fraction {
  return ADXMaterialAnimationUtils_lerpWithFloat_withFloat_withFloat_(startValue, endValue, fraction);
}

+ (int32_t)lerpWithInt:(int32_t)startValue
               withInt:(int32_t)endValue
             withFloat:(float)fraction {
  return ADXMaterialAnimationUtils_lerpWithInt_withInt_withFloat_(startValue, endValue, fraction);
}

+ (float)lerpWithFloat:(float)outputMin
             withFloat:(float)outputMax
             withFloat:(float)inputMin
             withFloat:(float)inputMax
             withFloat:(float)value {
  return ADXMaterialAnimationUtils_lerpWithFloat_withFloat_withFloat_withFloat_withFloat_(outputMin, outputMax, inputMin, inputMax, value);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, "F", 0x9, 0, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(lerpWithFloat:withFloat:withFloat:);
  methods[2].selector = @selector(lerpWithInt:withInt:withFloat:);
  methods[3].selector = @selector(lerpWithFloat:withFloat:withFloat:withFloat:withFloat:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LINEAR_INTERPOLATOR", "LADTimeInterpolator;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "FAST_OUT_SLOW_IN_INTERPOLATOR", "LADTimeInterpolator;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "FAST_OUT_LINEAR_IN_INTERPOLATOR", "LADTimeInterpolator;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "LINEAR_OUT_SLOW_IN_INTERPOLATOR", "LADTimeInterpolator;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "DECELERATE_INTERPOLATOR", "LADTimeInterpolator;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
  };
  static const void *ptrTable[] = { "lerp", "FFF", "IIF", "FFFFF", &ADXMaterialAnimationUtils_LINEAR_INTERPOLATOR, &ADXMaterialAnimationUtils_FAST_OUT_SLOW_IN_INTERPOLATOR, &ADXMaterialAnimationUtils_FAST_OUT_LINEAR_IN_INTERPOLATOR, &ADXMaterialAnimationUtils_LINEAR_OUT_SLOW_IN_INTERPOLATOR, &ADXMaterialAnimationUtils_DECELERATE_INTERPOLATOR };
  static const J2ObjcClassInfo _ADXMaterialAnimationUtils = { "MaterialAnimationUtils", "com.google.android.material.animation", ptrTable, methods, fields, 7, 0x1, 4, 5, -1, -1, -1, -1, -1 };
  return &_ADXMaterialAnimationUtils;
}

+ (void)initialize {
  if (self == [ADXMaterialAnimationUtils class]) {
    JreStrongAssignAndConsume(&ADXMaterialAnimationUtils_LINEAR_INTERPOLATOR, new_ADLinearInterpolator_init());
    JreStrongAssignAndConsume(&ADXMaterialAnimationUtils_FAST_OUT_SLOW_IN_INTERPOLATOR, new_ADXFastOutSlowInInterpolator_init());
    JreStrongAssignAndConsume(&ADXMaterialAnimationUtils_FAST_OUT_LINEAR_IN_INTERPOLATOR, new_ADXFastOutLinearInInterpolator_init());
    JreStrongAssignAndConsume(&ADXMaterialAnimationUtils_LINEAR_OUT_SLOW_IN_INTERPOLATOR, new_ADXLinearOutSlowInInterpolator_init());
    JreStrongAssignAndConsume(&ADXMaterialAnimationUtils_DECELERATE_INTERPOLATOR, new_ADDecelerateInterpolator_init());
    J2OBJC_SET_INITIALIZED(ADXMaterialAnimationUtils)
  }
}

@end

void ADXMaterialAnimationUtils_init(ADXMaterialAnimationUtils *self) {
  NSObject_init(self);
}

ADXMaterialAnimationUtils *new_ADXMaterialAnimationUtils_init() {
  J2OBJC_NEW_IMPL(ADXMaterialAnimationUtils, init)
}

ADXMaterialAnimationUtils *create_ADXMaterialAnimationUtils_init() {
  J2OBJC_CREATE_IMPL(ADXMaterialAnimationUtils, init)
}

float ADXMaterialAnimationUtils_lerpWithFloat_withFloat_withFloat_(float startValue, float endValue, float fraction) {
  ADXMaterialAnimationUtils_initialize();
  return startValue + (fraction * (endValue - startValue));
}

int32_t ADXMaterialAnimationUtils_lerpWithInt_withInt_withFloat_(int32_t startValue, int32_t endValue, float fraction) {
  ADXMaterialAnimationUtils_initialize();
  return startValue + JavaLangMath_roundWithFloat_(fraction * (endValue - startValue));
}

float ADXMaterialAnimationUtils_lerpWithFloat_withFloat_withFloat_withFloat_withFloat_(float outputMin, float outputMax, float inputMin, float inputMax, float value) {
  ADXMaterialAnimationUtils_initialize();
  if (value <= inputMin) {
    return outputMin;
  }
  if (value >= inputMax) {
    return outputMax;
  }
  return ADXMaterialAnimationUtils_lerpWithFloat_withFloat_withFloat_(outputMin, outputMax, (value - inputMin) / (inputMax - inputMin));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ADXMaterialAnimationUtils)

J2OBJC_NAME_MAPPING(ADXMaterialAnimationUtils, "com.google.android.material.animation", "ADX")
