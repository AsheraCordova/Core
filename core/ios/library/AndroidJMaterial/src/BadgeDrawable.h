//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-javafx-widget\AndroidJMaterial\src\main\java\com\google\android\material\badge\BadgeDrawable.java
//

#import <Foundation/Foundation.h>
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_BadgeDrawable")
#ifdef RESTRICT_BadgeDrawable
#define INCLUDE_ALL_BadgeDrawable 0
#else
#define INCLUDE_ALL_BadgeDrawable 1
#endif
#undef RESTRICT_BadgeDrawable

#if !defined (ADXBadgeDrawable_) && (INCLUDE_ALL_BadgeDrawable || defined(INCLUDE_ADXBadgeDrawable))
#define ADXBadgeDrawable_

#define RESTRICT_Drawable 1
#define INCLUDE_ADDrawable 1
#include "Drawable.h"

@class ADContext;
@class ADFrameLayout;
@class ADRect;
@class ADView;
@class ADViewGroup;
@class ADXBadgeState_State;
@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@class NSString;

@interface ADXBadgeDrawable : ADDrawable

#pragma mark Public

- (instancetype)initWithADContext:(ADContext *)context
          withADXBadgeState_State:(ADXBadgeState_State *)savedState;

+ (ADXBadgeDrawable *)createWithADContext:(ADContext *)context;

- (int32_t)getAlpha;

- (id)getAttributeWithNSString:(NSString *)key;

- (ADRect *)getBounds;

- (ADFrameLayout *)getCustomBadgeParent;

- (int32_t)getHorizontalOffset;

- (int32_t)getMaxCharacterCount;

- (int32_t)getMaxNumber;

- (int32_t)getMinimumHeight;

- (int32_t)getMinimumWidth;

- (int32_t)getNumber;

- (IOSObjectArray *)getSimulatedWidgetAttrs;

- (NSString *)getSimulatedWidgetGroupName;

- (NSString *)getSimulatedWidgetLocalName;

- (NSString *)getText;

- (NSString *)getTextAppearanceResource;

- (bool)hasNumber;

- (bool)hasText;

- (void)setAdditionalHorizontalOffsetWithInt:(int32_t)px;

- (void)setAdditionalVerticalOffsetWithInt:(int32_t)px;

- (void)setAlphaWithInt:(int32_t)alpha;

- (void)setBackgroundColorWithInt:(int32_t)backgroundColor;

- (void)setBadgeGravityWithInt:(int32_t)gravity;

- (void)setBadgeTextColorWithInt:(int32_t)badgeTextColor;

- (void)setHorizontalOffsetWithInt:(int32_t)px;

- (void)setHorizontalOffsetWithoutTextWithInt:(int32_t)px;

- (void)setHorizontalOffsetWithTextWithInt:(int32_t)px;

- (void)setMaxCharacterCountWithInt:(int32_t)maxCharacterCount;

- (void)setNumberWithInt:(int32_t)number;

- (void)setTextAppearanceResourceWithNSString:(NSString *)textAppearanceResource;

- (void)setVerticalOffsetWithInt:(int32_t)px;

- (void)setVerticalOffsetWithoutTextWithInt:(int32_t)px;

- (void)setVerticalOffsetWithTextWithInt:(int32_t)px;

- (void)setVisibleWithBoolean:(bool)visible;

- (void)updateBadgeCoordinatesWithADView:(ADView *)anchorView;

- (void)updateBadgeCoordinatesWithADView:(ADView *)anchorView
                       withADFrameLayout:(ADFrameLayout *)customBadgeParent;

- (void)updateBadgeCoordinatesWithADView:(ADView *)anchorView
                         withADViewGroup:(ADViewGroup *)customBadgeParent;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXBadgeDrawable)

inline int32_t ADXBadgeDrawable_get_TOP_END(void);
#define ADXBadgeDrawable_TOP_END 8388661
J2OBJC_STATIC_FIELD_CONSTANT(ADXBadgeDrawable, TOP_END, int32_t)

inline int32_t ADXBadgeDrawable_get_TOP_START(void);
#define ADXBadgeDrawable_TOP_START 8388659
J2OBJC_STATIC_FIELD_CONSTANT(ADXBadgeDrawable, TOP_START, int32_t)

inline int32_t ADXBadgeDrawable_get_BOTTOM_END(void);
#define ADXBadgeDrawable_BOTTOM_END 8388693
J2OBJC_STATIC_FIELD_CONSTANT(ADXBadgeDrawable, BOTTOM_END, int32_t)

inline int32_t ADXBadgeDrawable_get_BOTTOM_START(void);
#define ADXBadgeDrawable_BOTTOM_START 8388691
J2OBJC_STATIC_FIELD_CONSTANT(ADXBadgeDrawable, BOTTOM_START, int32_t)

inline NSString *ADXBadgeDrawable_get_DEFAULT_EXCEED_MAX_BADGE_NUMBER_SUFFIX(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXBadgeDrawable_DEFAULT_EXCEED_MAX_BADGE_NUMBER_SUFFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXBadgeDrawable, DEFAULT_EXCEED_MAX_BADGE_NUMBER_SUFFIX, NSString *)

inline NSString *ADXBadgeDrawable_get_DEFAULT_EXCEED_MAX_BADGE_TEXT_SUFFIX(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ADXBadgeDrawable_DEFAULT_EXCEED_MAX_BADGE_TEXT_SUFFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ADXBadgeDrawable, DEFAULT_EXCEED_MAX_BADGE_TEXT_SUFFIX, NSString *)

inline int32_t ADXBadgeDrawable_get_OFFSET_ALIGNMENT_MODE_EDGE(void);
#define ADXBadgeDrawable_OFFSET_ALIGNMENT_MODE_EDGE 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXBadgeDrawable, OFFSET_ALIGNMENT_MODE_EDGE, int32_t)

inline int32_t ADXBadgeDrawable_get_OFFSET_ALIGNMENT_MODE_LEGACY(void);
#define ADXBadgeDrawable_OFFSET_ALIGNMENT_MODE_LEGACY 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXBadgeDrawable, OFFSET_ALIGNMENT_MODE_LEGACY, int32_t)

inline int32_t ADXBadgeDrawable_get_BADGE_FIXED_EDGE_START(void);
#define ADXBadgeDrawable_BADGE_FIXED_EDGE_START 0
J2OBJC_STATIC_FIELD_CONSTANT(ADXBadgeDrawable, BADGE_FIXED_EDGE_START, int32_t)

inline int32_t ADXBadgeDrawable_get_BADGE_FIXED_EDGE_END(void);
#define ADXBadgeDrawable_BADGE_FIXED_EDGE_END 1
J2OBJC_STATIC_FIELD_CONSTANT(ADXBadgeDrawable, BADGE_FIXED_EDGE_END, int32_t)

inline int32_t ADXBadgeDrawable_get_BADGE_RADIUS_NOT_SPECIFIED(void);
#define ADXBadgeDrawable_BADGE_RADIUS_NOT_SPECIFIED -1
J2OBJC_STATIC_FIELD_CONSTANT(ADXBadgeDrawable, BADGE_RADIUS_NOT_SPECIFIED, int32_t)

inline int32_t ADXBadgeDrawable_get_BADGE_CONTENT_NOT_TRUNCATED(void);
#define ADXBadgeDrawable_BADGE_CONTENT_NOT_TRUNCATED -2
J2OBJC_STATIC_FIELD_CONSTANT(ADXBadgeDrawable, BADGE_CONTENT_NOT_TRUNCATED, int32_t)

FOUNDATION_EXPORT ADXBadgeDrawable *ADXBadgeDrawable_createWithADContext_(ADContext *context);

FOUNDATION_EXPORT void ADXBadgeDrawable_initWithADContext_withADXBadgeState_State_(ADXBadgeDrawable *self, ADContext *context, ADXBadgeState_State *savedState);

FOUNDATION_EXPORT ADXBadgeDrawable *new_ADXBadgeDrawable_initWithADContext_withADXBadgeState_State_(ADContext *context, ADXBadgeState_State *savedState) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXBadgeDrawable *create_ADXBadgeDrawable_initWithADContext_withADXBadgeState_State_(ADContext *context, ADXBadgeState_State *savedState);

J2OBJC_TYPE_LITERAL_HEADER(ADXBadgeDrawable)

@compatibility_alias ComGoogleAndroidMaterialBadgeBadgeDrawable ADXBadgeDrawable;


#endif

#if !defined (ADXBadgeDrawable_MaterialShapeDrawable_) && (INCLUDE_ALL_BadgeDrawable || defined(INCLUDE_ADXBadgeDrawable_MaterialShapeDrawable))
#define ADXBadgeDrawable_MaterialShapeDrawable_

#define RESTRICT_Drawable 1
#define INCLUDE_ADDrawable 1
#include "Drawable.h"

@class ADColorStateList;
@class ADXBadgeDrawable;
@class JavaLangFloat;

@interface ADXBadgeDrawable_MaterialShapeDrawable : ADDrawable

#pragma mark Public

- (float)getCornerSize;

- (ADColorStateList *)getFillColor;

- (void)setCornerSizeWithFloat:(float)cornerSize;

- (void)setFillColorWithADColorStateList:(ADColorStateList *)backgroundColorStateList;

#pragma mark Package-Private

- (instancetype)initWithADXBadgeDrawable:(ADXBadgeDrawable *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXBadgeDrawable_MaterialShapeDrawable)

FOUNDATION_EXPORT void ADXBadgeDrawable_MaterialShapeDrawable_initWithADXBadgeDrawable_(ADXBadgeDrawable_MaterialShapeDrawable *self, ADXBadgeDrawable *outer$);

FOUNDATION_EXPORT ADXBadgeDrawable_MaterialShapeDrawable *new_ADXBadgeDrawable_MaterialShapeDrawable_initWithADXBadgeDrawable_(ADXBadgeDrawable *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXBadgeDrawable_MaterialShapeDrawable *create_ADXBadgeDrawable_MaterialShapeDrawable_initWithADXBadgeDrawable_(ADXBadgeDrawable *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ADXBadgeDrawable_MaterialShapeDrawable)


#endif

#if !defined (ADXBadgeDrawable_TextPaint_) && (INCLUDE_ALL_BadgeDrawable || defined(INCLUDE_ADXBadgeDrawable_TextPaint))
#define ADXBadgeDrawable_TextPaint_

@class ADXBadgeDrawable;
@class JavaLangInteger;

@interface ADXBadgeDrawable_TextPaint : NSObject

#pragma mark Public

- (int32_t)getColor;

- (void)setAlphaWithInt:(int32_t)alpha;

- (void)setColorWithInt:(int32_t)badgeTextColor;

#pragma mark Package-Private

- (instancetype)initWithADXBadgeDrawable:(ADXBadgeDrawable *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXBadgeDrawable_TextPaint)

FOUNDATION_EXPORT void ADXBadgeDrawable_TextPaint_initWithADXBadgeDrawable_(ADXBadgeDrawable_TextPaint *self, ADXBadgeDrawable *outer$);

FOUNDATION_EXPORT ADXBadgeDrawable_TextPaint *new_ADXBadgeDrawable_TextPaint_initWithADXBadgeDrawable_(ADXBadgeDrawable *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXBadgeDrawable_TextPaint *create_ADXBadgeDrawable_TextPaint_initWithADXBadgeDrawable_(ADXBadgeDrawable *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ADXBadgeDrawable_TextPaint)


#endif

#if !defined (ADXBadgeDrawable_TextDrawableHelper_) && (INCLUDE_ALL_BadgeDrawable || defined(INCLUDE_ADXBadgeDrawable_TextDrawableHelper))
#define ADXBadgeDrawable_TextDrawableHelper_

@class ADXBadgeDrawable;
@class ADXBadgeDrawable_TextPaint;
@class JavaLangBoolean;
@class JavaLangFloat;
@class NSString;

@interface ADXBadgeDrawable_TextDrawableHelper : NSObject

#pragma mark Public

- (float)getTextHeightWithNSString:(NSString *)badgeContent;

- (ADXBadgeDrawable_TextPaint *)getTextPaint;

- (float)getTextWidthWithNSString:(NSString *)badgeContent;

- (void)setTextSizeDirtyWithBoolean:(bool)b;

#pragma mark Package-Private

- (instancetype)initWithADXBadgeDrawable:(ADXBadgeDrawable *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ADXBadgeDrawable_TextDrawableHelper)

FOUNDATION_EXPORT void ADXBadgeDrawable_TextDrawableHelper_initWithADXBadgeDrawable_(ADXBadgeDrawable_TextDrawableHelper *self, ADXBadgeDrawable *outer$);

FOUNDATION_EXPORT ADXBadgeDrawable_TextDrawableHelper *new_ADXBadgeDrawable_TextDrawableHelper_initWithADXBadgeDrawable_(ADXBadgeDrawable *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ADXBadgeDrawable_TextDrawableHelper *create_ADXBadgeDrawable_TextDrawableHelper_initWithADXBadgeDrawable_(ADXBadgeDrawable *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ADXBadgeDrawable_TextDrawableHelper)


#endif

#pragma pop_macro("INCLUDE_ALL_BadgeDrawable")
