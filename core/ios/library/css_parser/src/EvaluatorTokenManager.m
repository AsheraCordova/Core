//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\css_parser\src\com\ashera\css\EvaluatorTokenManager.java
//

#define J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION 1




#include "EvaluatorTokenManager.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JavaCharStream.h"
#include "Token.h"
#include "TokenMgrError.h"
#include "java/io/IOException.h"
#include "java/io/PrintStream.h"
#include "java/lang/Boolean.h"
#include "java/lang/Character.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/System.h"




#pragma clang diagnostic error "-Wreturn-type"
#pragma clang diagnostic ignored "-Wswitch"


@interface CSSEvaluatorTokenManager () {
 @public
  IOSIntArray *jjrounds_;
  IOSIntArray *jjstateSet_;
}

- (int32_t)jjStopStringLiteralDfa_0WithInt:(int32_t)pos
                                  withLong:(int64_t)active0;

- (int32_t)jjStartNfa_0WithInt:(int32_t)pos
                      withLong:(int64_t)active0;

- (int32_t)jjStopAtPosWithInt:(int32_t)pos
                      withInt:(int32_t)kind;

- (int32_t)jjMoveStringLiteralDfa0_0;

- (int32_t)jjMoveStringLiteralDfa1_0WithLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa2_0WithLong:(int64_t)old0
                                    withLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa3_0WithLong:(int64_t)old0
                                    withLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa4_0WithLong:(int64_t)old0
                                    withLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa5_0WithLong:(int64_t)old0
                                    withLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa6_0WithLong:(int64_t)old0
                                    withLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa7_0WithLong:(int64_t)old0
                                    withLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa8_0WithLong:(int64_t)old0
                                    withLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa9_0WithLong:(int64_t)old0
                                    withLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa10_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa11_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa12_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa13_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa14_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa15_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa16_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa17_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa18_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa19_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa20_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa21_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0;

- (int32_t)jjMoveStringLiteralDfa22_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0;

- (int32_t)jjMoveNfa_0WithInt:(int32_t)startState
                      withInt:(int32_t)curPos;

- (void)jjCheckNAddWithInt:(int32_t)state;

- (void)jjAddStatesWithInt:(int32_t)start
                   withInt:(int32_t)end;

- (void)jjCheckNAddTwoStatesWithInt:(int32_t)state1
                            withInt:(int32_t)state2;

- (void)ReInitRounds;

@end

J2OBJC_FIELD_SETTER(CSSEvaluatorTokenManager, jjrounds_, IOSIntArray *)
J2OBJC_FIELD_SETTER(CSSEvaluatorTokenManager, jjstateSet_, IOSIntArray *)

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(CSSEvaluatorTokenManager *self, int32_t pos, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(CSSEvaluatorTokenManager *self, int32_t pos, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjStopAtPosWithInt_withInt_(CSSEvaluatorTokenManager *self, int32_t pos, int32_t kind);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa0_0(CSSEvaluatorTokenManager *self);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa1_0WithLong_(CSSEvaluatorTokenManager *self, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa2_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa3_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa4_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa5_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa6_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa7_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa8_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa9_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa10_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa11_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa12_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa13_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa14_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa15_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa16_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa17_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa18_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa19_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa20_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa21_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa22_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0);

__attribute__((unused)) static int32_t CSSEvaluatorTokenManager_jjMoveNfa_0WithInt_withInt_(CSSEvaluatorTokenManager *self, int32_t startState, int32_t curPos);

__attribute__((unused)) static void CSSEvaluatorTokenManager_jjCheckNAddWithInt_(CSSEvaluatorTokenManager *self, int32_t state);

__attribute__((unused)) static void CSSEvaluatorTokenManager_jjAddStatesWithInt_withInt_(CSSEvaluatorTokenManager *self, int32_t start, int32_t end);

__attribute__((unused)) static void CSSEvaluatorTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(CSSEvaluatorTokenManager *self, int32_t state1, int32_t state2);

__attribute__((unused)) static void CSSEvaluatorTokenManager_ReInitRounds(CSSEvaluatorTokenManager *self);

J2OBJC_INITIALIZED_DEFN(CSSEvaluatorTokenManager)

IOSIntArray *CSSEvaluatorTokenManager_jjnextStates;
IOSObjectArray *CSSEvaluatorTokenManager_jjstrLiteralImages;
IOSObjectArray *CSSEvaluatorTokenManager_lexStateNames;
IOSLongArray *CSSEvaluatorTokenManager_jjtoToken;
IOSLongArray *CSSEvaluatorTokenManager_jjtoSkip;

@implementation CSSEvaluatorTokenManager

- (void)setDebugStreamWithJavaIoPrintStream:(JavaIoPrintStream *)ds {
  JreStrongAssign(&debugStream_, ds);
}

- (int32_t)jjStopStringLiteralDfa_0WithInt:(int32_t)pos
                                  withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, pos, active0);
}

- (int32_t)jjStartNfa_0WithInt:(int32_t)pos
                      withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, pos, active0);
}

- (int32_t)jjStopAtPosWithInt:(int32_t)pos
                      withInt:(int32_t)kind {
  return CSSEvaluatorTokenManager_jjStopAtPosWithInt_withInt_(self, pos, kind);
}

- (int32_t)jjMoveStringLiteralDfa0_0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa0_0(self);
}

- (int32_t)jjMoveStringLiteralDfa1_0WithLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa1_0WithLong_(self, active0);
}

- (int32_t)jjMoveStringLiteralDfa2_0WithLong:(int64_t)old0
                                    withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa2_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveStringLiteralDfa3_0WithLong:(int64_t)old0
                                    withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa3_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveStringLiteralDfa4_0WithLong:(int64_t)old0
                                    withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa4_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveStringLiteralDfa5_0WithLong:(int64_t)old0
                                    withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa5_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveStringLiteralDfa6_0WithLong:(int64_t)old0
                                    withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa6_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveStringLiteralDfa7_0WithLong:(int64_t)old0
                                    withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa7_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveStringLiteralDfa8_0WithLong:(int64_t)old0
                                    withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa8_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveStringLiteralDfa9_0WithLong:(int64_t)old0
                                    withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa9_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveStringLiteralDfa10_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa10_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveStringLiteralDfa11_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa11_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveStringLiteralDfa12_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa12_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveStringLiteralDfa13_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa13_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveStringLiteralDfa14_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa14_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveStringLiteralDfa15_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa15_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveStringLiteralDfa16_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa16_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveStringLiteralDfa17_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa17_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveStringLiteralDfa18_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa18_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveStringLiteralDfa19_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa19_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveStringLiteralDfa20_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa20_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveStringLiteralDfa21_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa21_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveStringLiteralDfa22_0WithLong:(int64_t)old0
                                     withLong:(int64_t)active0 {
  return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa22_0WithLong_withLong_(self, old0, active0);
}

- (int32_t)jjMoveNfa_0WithInt:(int32_t)startState
                      withInt:(int32_t)curPos {
  return CSSEvaluatorTokenManager_jjMoveNfa_0WithInt_withInt_(self, startState, curPos);
}

- (CSSToken *)jjFillToken {
  __unused CSSToken *t;
  __unused NSString *curTokenImage;
  __unused int32_t beginLine;
  __unused int32_t endLine;
  __unused int32_t beginColumn;
  __unused int32_t endColumn;
  __unused NSString *im = IOSObjectArray_Get(nil_chk(CSSEvaluatorTokenManager_jjstrLiteralImages), jjmatchedKind_);
  curTokenImage = (im == nil) ? [((CSSJavaCharStream *) nil_chk(input_stream_)) GetImage] : im;
  beginLine = [((CSSJavaCharStream *) nil_chk(input_stream_)) getBeginLine];
  beginColumn = [((CSSJavaCharStream *) nil_chk(input_stream_)) getBeginColumn];
  endLine = [((CSSJavaCharStream *) nil_chk(input_stream_)) getEndLine];
  endColumn = [((CSSJavaCharStream *) nil_chk(input_stream_)) getEndColumn];
  t = CSSToken_newTokenWithInt_withNSString_(jjmatchedKind_, curTokenImage);
  ((CSSToken *) nil_chk(t))->beginLine_ = beginLine;
  t->endLine_ = endLine;
  t->beginColumn_ = beginColumn;
  t->endColumn_ = endColumn;
  return t;
}

- (CSSToken *)getNextToken {
  __unused CSSToken *matchedToken;
  __unused int32_t curPos = 0;
  for (; ; ) {
    {
      @try {
        curChar_ = [((CSSJavaCharStream *) nil_chk(input_stream_)) BeginToken];
      }
      @catch (JavaIoIOException *e) {
        jjmatchedKind_ = 0;
        jjmatchedPos_ = -1;
        matchedToken = [self jjFillToken];
        return matchedToken;
      }
      @try {
        [((CSSJavaCharStream *) nil_chk(input_stream_)) backupWithInt:0];
        while (curChar_ <= 32 && ((int64_t) 0x100002600LL & (JreLShift64(1LL, curChar_))) != 0LL) curChar_ = [((CSSJavaCharStream *) nil_chk(input_stream_)) BeginToken];
      }
      @catch (JavaIoIOException *e1) {
        goto continue_EOFLoop;
      }
      jjmatchedKind_ = (int32_t) 0x7fffffff;
      jjmatchedPos_ = 0;
      curPos = CSSEvaluatorTokenManager_jjMoveStringLiteralDfa0_0(self);
      if (jjmatchedKind_ != (int32_t) 0x7fffffff) {
        if (jjmatchedPos_ + 1 < curPos) [((CSSJavaCharStream *) nil_chk(input_stream_)) backupWithInt:curPos - jjmatchedPos_ - 1];
        if ((IOSLongArray_Get(nil_chk(CSSEvaluatorTokenManager_jjtoToken), JreRShift32(jjmatchedKind_, 6)) & (JreLShift64(1LL, (jjmatchedKind_ & 077)))) != 0LL) {
          matchedToken = [self jjFillToken];
          return matchedToken;
        }
        else {
          goto continue_EOFLoop;
        }
      }
      __unused int32_t error_line = [((CSSJavaCharStream *) nil_chk(input_stream_)) getEndLine];
      __unused int32_t error_column = [((CSSJavaCharStream *) nil_chk(input_stream_)) getEndColumn];
      __unused NSString *error_after = nil;
      __unused bool EOFSeen = false;
      @try {
        [((CSSJavaCharStream *) nil_chk(input_stream_)) readChar];
        [((CSSJavaCharStream *) nil_chk(input_stream_)) backupWithInt:1];
      }
      @catch (JavaIoIOException *e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? @"" : [((CSSJavaCharStream *) nil_chk(input_stream_)) GetImage];
        if (curChar_ == 0x000a || curChar_ == 0x000d) {
          error_line++;
          error_column = 0;
        }
        else error_column++;
      }
      if (!EOFSeen) {
        [((CSSJavaCharStream *) nil_chk(input_stream_)) backupWithInt:1];
        error_after = curPos <= 1 ? @"" : [((CSSJavaCharStream *) nil_chk(input_stream_)) GetImage];
      }
      @throw create_CSSTokenMgrError_initPackagePrivateWithBoolean_withInt_withInt_withInt_withNSString_withChar_withInt_(EOFSeen, curLexState_, error_line, error_column, error_after, curChar_, CSSTokenMgrError_LEXICAL_ERROR);
    }
    continue_EOFLoop: ;
  }
}

- (void)jjCheckNAddWithInt:(int32_t)state {
  CSSEvaluatorTokenManager_jjCheckNAddWithInt_(self, state);
}

- (void)jjAddStatesWithInt:(int32_t)start
                   withInt:(int32_t)end {
  CSSEvaluatorTokenManager_jjAddStatesWithInt_withInt_(self, start, end);
}

- (void)jjCheckNAddTwoStatesWithInt:(int32_t)state1
                            withInt:(int32_t)state2 {
  CSSEvaluatorTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, state1, state2);
}

- (instancetype)initPackagePrivateWithCSSJavaCharStream:(CSSJavaCharStream *)stream {
  CSSEvaluatorTokenManager_initPackagePrivateWithCSSJavaCharStream_(self, stream);
  return self;
}

- (instancetype)initPackagePrivateWithCSSJavaCharStream:(CSSJavaCharStream *)stream
                                                withInt:(int32_t)lexState {
  CSSEvaluatorTokenManager_initPackagePrivateWithCSSJavaCharStream_withInt_(self, stream, lexState);
  return self;
}

- (void)ReInitWithCSSJavaCharStream:(CSSJavaCharStream *)stream {
  jjmatchedPos_ = jjnewStateCnt_ = 0;
  curLexState_ = defaultLexState_;
  JreStrongAssign(&input_stream_, stream);
  CSSEvaluatorTokenManager_ReInitRounds(self);
}

- (void)ReInitRounds {
  CSSEvaluatorTokenManager_ReInitRounds(self);
}

- (void)ReInitWithCSSJavaCharStream:(CSSJavaCharStream *)stream
                            withInt:(int32_t)lexState {
  [self ReInitWithCSSJavaCharStream:stream];
  [self SwitchToWithInt:lexState];
}

- (void)SwitchToWithInt:(int32_t)lexState {
  if (lexState >= 1 || lexState < 0) @throw create_CSSTokenMgrError_initPackagePrivateWithNSString_withInt_(JreStrcat("$I$", @"Error: Ignoring invalid lexical state : ", lexState, @". State unchanged."), CSSTokenMgrError_INVALID_LEXICAL_STATE);
  else curLexState_ = lexState;
}

- (void)dealloc {
  RELEASE_(debugStream_);
  RELEASE_(input_stream_);
  RELEASE_(jjrounds_);
  RELEASE_(jjstateSet_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 4, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 11, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 12, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 13, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 14, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 15, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 16, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 17, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 18, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 19, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 20, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 21, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 22, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 23, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 24, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 25, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 26, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 27, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 28, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 29, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 30, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 31, 6, -1, -1, -1, -1 },
    { NULL, "LCSSToken;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCSSToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 32, 33, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 34, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 35, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 36, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 37, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 38, 36, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 38, 37, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 39, 33, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(setDebugStreamWithJavaIoPrintStream:);
  methods[1].selector = @selector(jjStopStringLiteralDfa_0WithInt:withLong:);
  methods[2].selector = @selector(jjStartNfa_0WithInt:withLong:);
  methods[3].selector = @selector(jjStopAtPosWithInt:withInt:);
  methods[4].selector = @selector(jjMoveStringLiteralDfa0_0);
  methods[5].selector = @selector(jjMoveStringLiteralDfa1_0WithLong:);
  methods[6].selector = @selector(jjMoveStringLiteralDfa2_0WithLong:withLong:);
  methods[7].selector = @selector(jjMoveStringLiteralDfa3_0WithLong:withLong:);
  methods[8].selector = @selector(jjMoveStringLiteralDfa4_0WithLong:withLong:);
  methods[9].selector = @selector(jjMoveStringLiteralDfa5_0WithLong:withLong:);
  methods[10].selector = @selector(jjMoveStringLiteralDfa6_0WithLong:withLong:);
  methods[11].selector = @selector(jjMoveStringLiteralDfa7_0WithLong:withLong:);
  methods[12].selector = @selector(jjMoveStringLiteralDfa8_0WithLong:withLong:);
  methods[13].selector = @selector(jjMoveStringLiteralDfa9_0WithLong:withLong:);
  methods[14].selector = @selector(jjMoveStringLiteralDfa10_0WithLong:withLong:);
  methods[15].selector = @selector(jjMoveStringLiteralDfa11_0WithLong:withLong:);
  methods[16].selector = @selector(jjMoveStringLiteralDfa12_0WithLong:withLong:);
  methods[17].selector = @selector(jjMoveStringLiteralDfa13_0WithLong:withLong:);
  methods[18].selector = @selector(jjMoveStringLiteralDfa14_0WithLong:withLong:);
  methods[19].selector = @selector(jjMoveStringLiteralDfa15_0WithLong:withLong:);
  methods[20].selector = @selector(jjMoveStringLiteralDfa16_0WithLong:withLong:);
  methods[21].selector = @selector(jjMoveStringLiteralDfa17_0WithLong:withLong:);
  methods[22].selector = @selector(jjMoveStringLiteralDfa18_0WithLong:withLong:);
  methods[23].selector = @selector(jjMoveStringLiteralDfa19_0WithLong:withLong:);
  methods[24].selector = @selector(jjMoveStringLiteralDfa20_0WithLong:withLong:);
  methods[25].selector = @selector(jjMoveStringLiteralDfa21_0WithLong:withLong:);
  methods[26].selector = @selector(jjMoveStringLiteralDfa22_0WithLong:withLong:);
  methods[27].selector = @selector(jjMoveNfa_0WithInt:withInt:);
  methods[28].selector = @selector(jjFillToken);
  methods[29].selector = @selector(getNextToken);
  methods[30].selector = @selector(jjCheckNAddWithInt:);
  methods[31].selector = @selector(jjAddStatesWithInt:withInt:);
  methods[32].selector = @selector(jjCheckNAddTwoStatesWithInt:withInt:);
  methods[33].selector = @selector(initPackagePrivateWithCSSJavaCharStream:);
  methods[34].selector = @selector(initPackagePrivateWithCSSJavaCharStream:withInt:);
  methods[35].selector = @selector(ReInitWithCSSJavaCharStream:);
  methods[36].selector = @selector(ReInitRounds);
  methods[37].selector = @selector(ReInitWithCSSJavaCharStream:withInt:);
  methods[38].selector = @selector(SwitchToWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "debugStream_", "LJavaIoPrintStream;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "jjnextStates", "[I", .constantValue.asLong = 0, 0x18, -1, 40, -1, -1 },
    { "jjstrLiteralImages", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 41, -1, -1 },
    { "curLexState_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "defaultLexState_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjnewStateCnt_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjround_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjmatchedPos_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjmatchedKind_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "lexStateNames", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 42, -1, -1 },
    { "jjtoToken", "[J", .constantValue.asLong = 0, 0x18, -1, 43, -1, -1 },
    { "jjtoSkip", "[J", .constantValue.asLong = 0, 0x18, -1, 44, -1, -1 },
    { "input_stream_", "LCSSJavaCharStream;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "jjrounds_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "jjstateSet_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "curChar_", "C", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setDebugStream", "LJavaIoPrintStream;", "jjStopStringLiteralDfa_0", "IJ", "jjStartNfa_0", "jjStopAtPos", "II", "jjMoveStringLiteralDfa1_0", "J", "jjMoveStringLiteralDfa2_0", "JJ", "jjMoveStringLiteralDfa3_0", "jjMoveStringLiteralDfa4_0", "jjMoveStringLiteralDfa5_0", "jjMoveStringLiteralDfa6_0", "jjMoveStringLiteralDfa7_0", "jjMoveStringLiteralDfa8_0", "jjMoveStringLiteralDfa9_0", "jjMoveStringLiteralDfa10_0", "jjMoveStringLiteralDfa11_0", "jjMoveStringLiteralDfa12_0", "jjMoveStringLiteralDfa13_0", "jjMoveStringLiteralDfa14_0", "jjMoveStringLiteralDfa15_0", "jjMoveStringLiteralDfa16_0", "jjMoveStringLiteralDfa17_0", "jjMoveStringLiteralDfa18_0", "jjMoveStringLiteralDfa19_0", "jjMoveStringLiteralDfa20_0", "jjMoveStringLiteralDfa21_0", "jjMoveStringLiteralDfa22_0", "jjMoveNfa_0", "jjCheckNAdd", "I", "jjAddStates", "jjCheckNAddTwoStates", "LCSSJavaCharStream;", "LCSSJavaCharStream;I", "ReInit", "SwitchTo", &CSSEvaluatorTokenManager_jjnextStates, &CSSEvaluatorTokenManager_jjstrLiteralImages, &CSSEvaluatorTokenManager_lexStateNames, &CSSEvaluatorTokenManager_jjtoToken, &CSSEvaluatorTokenManager_jjtoSkip };
  static const J2ObjcClassInfo _CSSEvaluatorTokenManager = { "EvaluatorTokenManager", "com.ashera.css", ptrTable, methods, fields, 7, 0x0, 39, 16, -1, -1, -1, -1, -1 };
  return &_CSSEvaluatorTokenManager;
}

+ (void)initialize {
  if (self == [CSSEvaluatorTokenManager class]) {
    JreStrongAssignAndConsume(&CSSEvaluatorTokenManager_jjnextStates, [IOSIntArray newArrayWithInts:(int32_t[]){ 7, 8 } count:2]);
    JreStrongAssignAndConsume(&CSSEvaluatorTokenManager_jjstrLiteralImages, [IOSObjectArray newArrayWithObjects:(id[]){ @"", nil, nil, nil, nil, nil, nil, nil, nil, @"|", nil, nil, @"{", @"}", @":", @";", nil, @"(", @")" } count:19 type:NSString_class_()]);
    JreStrongAssignAndConsume(&CSSEvaluatorTokenManager_lexStateNames, [IOSObjectArray newArrayWithObjects:(id[]){ @"DEFAULT" } count:1 type:NSString_class_()]);
    JreStrongAssignAndConsume(&CSSEvaluatorTokenManager_jjtoToken, [IOSLongArray newArrayWithLongs:(int64_t[]){ (int64_t) 0x7ffe1LL } count:1]);
    JreStrongAssignAndConsume(&CSSEvaluatorTokenManager_jjtoSkip, [IOSLongArray newArrayWithLongs:(int64_t[]){ (int64_t) 0x1eLL } count:1]);
    J2OBJC_SET_INITIALIZED(CSSEvaluatorTokenManager)
  }
}

@end

int32_t CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(CSSEvaluatorTokenManager *self, int32_t pos, int64_t active0) {
  switch (pos) {
    case 0:
    if ((active0 & (int64_t) 0x20LL) != 0LL) {
      self->jjmatchedKind_ = 11;
      return 5;
    }
    if ((active0 & (int64_t) 0xc0LL) != 0LL) return 5;
    return -1;
    case 1:
    if ((active0 & (int64_t) 0x60LL) != 0LL) {
      self->jjmatchedKind_ = 11;
      self->jjmatchedPos_ = 1;
      return 5;
    }
    return -1;
    case 2:
    if ((active0 & (int64_t) 0x60LL) != 0LL) {
      self->jjmatchedKind_ = 11;
      self->jjmatchedPos_ = 2;
      return 5;
    }
    return -1;
    case 3:
    if ((active0 & (int64_t) 0x20LL) != 0LL) {
      self->jjmatchedKind_ = 11;
      self->jjmatchedPos_ = 3;
      return 5;
    }
    return -1;
    case 4:
    if ((active0 & (int64_t) 0x20LL) != 0LL) {
      self->jjmatchedKind_ = 11;
      self->jjmatchedPos_ = 4;
      return 5;
    }
    return -1;
    case 5:
    if ((active0 & (int64_t) 0x20LL) != 0LL) {
      self->jjmatchedKind_ = 11;
      self->jjmatchedPos_ = 5;
      return 5;
    }
    return -1;
    case 6:
    if ((active0 & (int64_t) 0x20LL) != 0LL) {
      if (self->jjmatchedPos_ < 5) {
        self->jjmatchedKind_ = 11;
        self->jjmatchedPos_ = 5;
      }
      return -1;
    }
    return -1;
    case 7:
    if ((active0 & (int64_t) 0x20LL) != 0LL) {
      if (self->jjmatchedPos_ < 5) {
        self->jjmatchedKind_ = 11;
        self->jjmatchedPos_ = 5;
      }
      return -1;
    }
    return -1;
    case 8:
    if ((active0 & (int64_t) 0x20LL) != 0LL) {
      if (self->jjmatchedPos_ < 5) {
        self->jjmatchedKind_ = 11;
        self->jjmatchedPos_ = 5;
      }
      return -1;
    }
    return -1;
    case 9:
    if ((active0 & (int64_t) 0x20LL) != 0LL) {
      if (self->jjmatchedPos_ < 5) {
        self->jjmatchedKind_ = 11;
        self->jjmatchedPos_ = 5;
      }
      return -1;
    }
    return -1;
    case 10:
    if ((active0 & (int64_t) 0x20LL) != 0LL) {
      if (self->jjmatchedPos_ < 5) {
        self->jjmatchedKind_ = 11;
        self->jjmatchedPos_ = 5;
      }
      return -1;
    }
    return -1;
    case 11:
    if ((active0 & (int64_t) 0x20LL) != 0LL) {
      if (self->jjmatchedPos_ < 5) {
        self->jjmatchedKind_ = 11;
        self->jjmatchedPos_ = 5;
      }
      return -1;
    }
    return -1;
    case 12:
    if ((active0 & (int64_t) 0x20LL) != 0LL) {
      if (self->jjmatchedPos_ < 5) {
        self->jjmatchedKind_ = 11;
        self->jjmatchedPos_ = 5;
      }
      return -1;
    }
    return -1;
    case 13:
    if ((active0 & (int64_t) 0x20LL) != 0LL) {
      if (self->jjmatchedPos_ < 5) {
        self->jjmatchedKind_ = 11;
        self->jjmatchedPos_ = 5;
      }
      return -1;
    }
    return -1;
    case 14:
    if ((active0 & (int64_t) 0x20LL) != 0LL) {
      if (self->jjmatchedPos_ < 5) {
        self->jjmatchedKind_ = 11;
        self->jjmatchedPos_ = 5;
      }
      return -1;
    }
    return -1;
    case 15:
    if ((active0 & (int64_t) 0x20LL) != 0LL) {
      if (self->jjmatchedPos_ < 5) {
        self->jjmatchedKind_ = 11;
        self->jjmatchedPos_ = 5;
      }
      return -1;
    }
    return -1;
    case 16:
    if ((active0 & (int64_t) 0x20LL) != 0LL) {
      if (self->jjmatchedPos_ < 5) {
        self->jjmatchedKind_ = 11;
        self->jjmatchedPos_ = 5;
      }
      return -1;
    }
    return -1;
    case 17:
    if ((active0 & (int64_t) 0x20LL) != 0LL) {
      if (self->jjmatchedPos_ < 5) {
        self->jjmatchedKind_ = 11;
        self->jjmatchedPos_ = 5;
      }
      return -1;
    }
    return -1;
    case 18:
    if ((active0 & (int64_t) 0x20LL) != 0LL) {
      if (self->jjmatchedPos_ < 5) {
        self->jjmatchedKind_ = 11;
        self->jjmatchedPos_ = 5;
      }
      return -1;
    }
    return -1;
    case 19:
    if ((active0 & (int64_t) 0x20LL) != 0LL) {
      if (self->jjmatchedPos_ < 5) {
        self->jjmatchedKind_ = 11;
        self->jjmatchedPos_ = 5;
      }
      return -1;
    }
    return -1;
    case 20:
    if ((active0 & (int64_t) 0x20LL) != 0LL) {
      if (self->jjmatchedPos_ < 5) {
        self->jjmatchedKind_ = 11;
        self->jjmatchedPos_ = 5;
      }
      return -1;
    }
    return -1;
    case 21:
    if ((active0 & (int64_t) 0x20LL) != 0LL) {
      if (self->jjmatchedPos_ < 5) {
        self->jjmatchedKind_ = 11;
        self->jjmatchedPos_ = 5;
      }
      return -1;
    }
    return -1;
    default:
    return -1;
  }
}

int32_t CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(CSSEvaluatorTokenManager *self, int32_t pos, int64_t active0) {
  return CSSEvaluatorTokenManager_jjMoveNfa_0WithInt_withInt_(self, CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, pos, active0), pos + 1);
}

int32_t CSSEvaluatorTokenManager_jjStopAtPosWithInt_withInt_(CSSEvaluatorTokenManager *self, int32_t pos, int32_t kind) {
  self->jjmatchedKind_ = kind;
  self->jjmatchedPos_ = pos;
  return pos + 1;
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa0_0(CSSEvaluatorTokenManager *self) {
  switch (self->curChar_) {
    case 40:
    return CSSEvaluatorTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 17);
    case 41:
    return CSSEvaluatorTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 18);
    case 58:
    return CSSEvaluatorTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 14);
    case 59:
    return CSSEvaluatorTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 15);
    case 64:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa1_0WithLong_(self, (int64_t) 0x20LL);
    case 65:
    case 97:
    self->jjmatchedKind_ = 7;
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa1_0WithLong_(self, (int64_t) 0x40LL);
    case 123:
    return CSSEvaluatorTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 12);
    case 124:
    return CSSEvaluatorTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 9);
    case 125:
    return CSSEvaluatorTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 13);
    default:
    return CSSEvaluatorTokenManager_jjMoveNfa_0WithInt_withInt_(self, 0, 0);
  }
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa1_0WithLong_(CSSEvaluatorTokenManager *self, int64_t active0) {
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 0, active0);
    return 1;
  }
  switch (self->curChar_) {
    case 77:
    case 109:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa2_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    case 78:
    case 110:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa2_0WithLong_withLong_(self, active0, (int64_t) 0x40LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 0, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa2_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 0, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 1, active0);
    return 2;
  }
  switch (self->curChar_) {
    case 68:
    case 100:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa3_0WithLong_withLong_(self, active0, (int64_t) 0x40LL);
    case 69:
    case 101:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa3_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 1, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa3_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 1, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 2, active0);
    return 3;
  }
  switch (self->curChar_) {
    case 32:
    if ((active0 & (int64_t) 0x40LL) != 0LL) return CSSEvaluatorTokenManager_jjStopAtPosWithInt_withInt_(self, 3, 6);
    break;
    case 68:
    case 100:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa4_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 2, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa4_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 2, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 3, active0);
    return 4;
  }
  switch (self->curChar_) {
    case 73:
    case 105:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa5_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 3, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa5_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 3, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 4, active0);
    return 5;
  }
  switch (self->curChar_) {
    case 65:
    case 97:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa6_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 4, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa6_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 4, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 5, active0);
    return 6;
  }
  switch (self->curChar_) {
    case 32:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa7_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 5, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa7_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 5, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 6, active0);
    return 7;
  }
  switch (self->curChar_) {
    case 79:
    case 111:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa8_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 6, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa8_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 6, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 7, active0);
    return 8;
  }
  switch (self->curChar_) {
    case 78:
    case 110:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa9_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 7, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa9_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 7, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 8, active0);
    return 9;
  }
  switch (self->curChar_) {
    case 76:
    case 108:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa10_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 8, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa10_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 8, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 9, active0);
    return 10;
  }
  switch (self->curChar_) {
    case 89:
    case 121:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa11_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 9, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa11_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 9, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 10, active0);
    return 11;
  }
  switch (self->curChar_) {
    case 32:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa12_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 10, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa12_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 10, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 11, active0);
    return 12;
  }
  switch (self->curChar_) {
    case 83:
    case 115:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa13_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 11, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa13_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 11, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 12, active0);
    return 13;
  }
  switch (self->curChar_) {
    case 67:
    case 99:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa14_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 12, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa14_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 12, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 13, active0);
    return 14;
  }
  switch (self->curChar_) {
    case 82:
    case 114:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa15_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 13, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa15_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 13, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 14, active0);
    return 15;
  }
  switch (self->curChar_) {
    case 69:
    case 101:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa16_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 14, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa16_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 14, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 15, active0);
    return 16;
  }
  switch (self->curChar_) {
    case 69:
    case 101:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa17_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 15, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa17_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 15, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 16, active0);
    return 17;
  }
  switch (self->curChar_) {
    case 78:
    case 110:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa18_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 16, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa18_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 16, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 17, active0);
    return 18;
  }
  switch (self->curChar_) {
    case 32:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa19_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 17, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa19_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 17, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 18, active0);
    return 19;
  }
  switch (self->curChar_) {
    case 65:
    case 97:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa20_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 18, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa20_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 18, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 19, active0);
    return 20;
  }
  switch (self->curChar_) {
    case 78:
    case 110:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa21_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 19, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa21_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 19, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 20, active0);
    return 21;
  }
  switch (self->curChar_) {
    case 68:
    case 100:
    return CSSEvaluatorTokenManager_jjMoveStringLiteralDfa22_0WithLong_withLong_(self, active0, (int64_t) 0x20LL);
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 20, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveStringLiteralDfa22_0WithLong_withLong_(CSSEvaluatorTokenManager *self, int64_t old0, int64_t active0) {
  if (((active0 &= old0)) == 0LL) return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 20, old0);
  @try {
    self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    CSSEvaluatorTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 21, active0);
    return 22;
  }
  switch (self->curChar_) {
    case 32:
    if ((active0 & (int64_t) 0x20LL) != 0LL) return CSSEvaluatorTokenManager_jjStopAtPosWithInt_withInt_(self, 22, 5);
    break;
    default:
    break;
  }
  return CSSEvaluatorTokenManager_jjStartNfa_0WithInt_withLong_(self, 21, active0);
}

int32_t CSSEvaluatorTokenManager_jjMoveNfa_0WithInt_withInt_(CSSEvaluatorTokenManager *self, int32_t startState, int32_t curPos) {
  __unused int32_t startsAt = 0;
  self->jjnewStateCnt_ = 9;
  __unused int32_t i = 1;
  *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), 0) = startState;
  __unused int32_t kind = (int32_t) 0x7fffffff;
  for (; ; ) {
    if (++self->jjround_ == (int32_t) 0x7fffffff) CSSEvaluatorTokenManager_ReInitRounds(self);
    if (self->curChar_ < 64) {
      __unused int64_t l = JreLShift64(1LL, self->curChar_);
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 0:
          if (((int64_t) 0x3ff600800000000LL & l) != 0LL) {
            if (kind > 11) kind = 11;
            {
              CSSEvaluatorTokenManager_jjCheckNAddWithInt_(self, 5);
            }
          }
          else if (self->curChar_ == 34) {
            CSSEvaluatorTokenManager_jjCheckNAddWithInt_(self, 7);
          }
          else if (self->curChar_ == 62) {
            CSSEvaluatorTokenManager_jjCheckNAddWithInt_(self, 1);
          }
          else if (self->curChar_ == 60) {
            CSSEvaluatorTokenManager_jjCheckNAddWithInt_(self, 1);
          }
          else if (self->curChar_ == 61) {
            CSSEvaluatorTokenManager_jjCheckNAddWithInt_(self, 1);
          }
          break;
          case 1:
          if (self->curChar_ == 61 && kind > 10) kind = 10;
          break;
          case 2:
          if (self->curChar_ == 61) {
            CSSEvaluatorTokenManager_jjCheckNAddWithInt_(self, 1);
          }
          break;
          case 3:
          if (self->curChar_ == 60) {
            CSSEvaluatorTokenManager_jjCheckNAddWithInt_(self, 1);
          }
          break;
          case 4:
          if (self->curChar_ == 62) {
            CSSEvaluatorTokenManager_jjCheckNAddWithInt_(self, 1);
          }
          break;
          case 5:
          if (((int64_t) 0x3ff600800000000LL & l) == 0LL) break;
          if (kind > 11) kind = 11;
          {
            CSSEvaluatorTokenManager_jjCheckNAddWithInt_(self, 5);
          }
          break;
          case 6:
          if (self->curChar_ == 34) {
            CSSEvaluatorTokenManager_jjCheckNAddWithInt_(self, 7);
          }
          break;
          case 7:
          if (((int64_t) 0x3ffe00900000000LL & l) != 0LL) {
            CSSEvaluatorTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 7, 8);
          }
          break;
          case 8:
          if (self->curChar_ == 34 && kind > 16) kind = 16;
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else if (self->curChar_ < 128) {
      __unused int64_t l = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 0:
          if (((int64_t) 0x7fffffe87ffffffLL & l) != 0LL) {
            if (kind > 11) kind = 11;
            {
              CSSEvaluatorTokenManager_jjCheckNAddWithInt_(self, 5);
            }
          }
          if (((int64_t) 0x40010000400100LL & l) != 0LL) {
            if (kind > 8) kind = 8;
          }
          break;
          case 5:
          if (((int64_t) 0x7fffffe87ffffffLL & l) == 0LL) break;
          if (kind > 11) kind = 11;
          {
            CSSEvaluatorTokenManager_jjCheckNAddWithInt_(self, 5);
          }
          break;
          case 7:
          if (((int64_t) 0x7fffffe87ffffffLL & l) != 0LL) {
            CSSEvaluatorTokenManager_jjAddStatesWithInt_withInt_(self, 0, 1);
          }
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else {
      __unused int32_t hiByte = (JreRShift32(self->curChar_, 8));
      __unused int32_t i1 = JreRShift32(hiByte, 6);
      __unused int64_t l1 = JreLShift64(1LL, (hiByte & 077));
      __unused int32_t i2 = JreRShift32((self->curChar_ & (int32_t) 0xff), 6);
      __unused int64_t l2 = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          default:
          if (i1 == 0 || l1 == 0 || i2 == 0 || l2 == 0) break;
          else break;
        }
      }
      while (i != startsAt);
    }
    if (kind != (int32_t) 0x7fffffff) {
      self->jjmatchedKind_ = kind;
      self->jjmatchedPos_ = curPos;
      kind = (int32_t) 0x7fffffff;
    }
    ++curPos;
    if ((i = self->jjnewStateCnt_) == (startsAt = 9 - (self->jjnewStateCnt_ = startsAt))) return curPos;
    @try {
      self->curChar_ = [((CSSJavaCharStream *) nil_chk(self->input_stream_)) readChar];
    }
    @catch (JavaIoIOException *e) {
      return curPos;
    }
  }
}

void CSSEvaluatorTokenManager_jjCheckNAddWithInt_(CSSEvaluatorTokenManager *self, int32_t state) {
  if (IOSIntArray_Get(nil_chk(self->jjrounds_), state) != self->jjround_) {
    *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), self->jjnewStateCnt_++) = state;
    *IOSIntArray_GetRef(self->jjrounds_, state) = self->jjround_;
  }
}

void CSSEvaluatorTokenManager_jjAddStatesWithInt_withInt_(CSSEvaluatorTokenManager *self, int32_t start, int32_t end) {
  do {
    *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), self->jjnewStateCnt_++) = IOSIntArray_Get(nil_chk(CSSEvaluatorTokenManager_jjnextStates), start);
  }
  while (start++ != end);
}

void CSSEvaluatorTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(CSSEvaluatorTokenManager *self, int32_t state1, int32_t state2) {
  CSSEvaluatorTokenManager_jjCheckNAddWithInt_(self, state1);
  CSSEvaluatorTokenManager_jjCheckNAddWithInt_(self, state2);
}

void CSSEvaluatorTokenManager_initPackagePrivateWithCSSJavaCharStream_(CSSEvaluatorTokenManager *self, CSSJavaCharStream *stream) {
  NSObject_init(self);
  JreStrongAssign(&self->debugStream_, JreLoadStatic(JavaLangSystem, out));
  self->curLexState_ = 0;
  self->defaultLexState_ = 0;
  JreStrongAssignAndConsume(&self->jjrounds_, [IOSIntArray newArrayWithLength:9]);
  JreStrongAssignAndConsume(&self->jjstateSet_, [IOSIntArray newArrayWithLength:2 * 9]);
  JreStrongAssign(&self->input_stream_, stream);
}

CSSEvaluatorTokenManager *new_CSSEvaluatorTokenManager_initPackagePrivateWithCSSJavaCharStream_(CSSJavaCharStream *stream) {
  J2OBJC_NEW_IMPL(CSSEvaluatorTokenManager, initPackagePrivateWithCSSJavaCharStream_, stream)
}

CSSEvaluatorTokenManager *create_CSSEvaluatorTokenManager_initPackagePrivateWithCSSJavaCharStream_(CSSJavaCharStream *stream) {
  J2OBJC_CREATE_IMPL(CSSEvaluatorTokenManager, initPackagePrivateWithCSSJavaCharStream_, stream)
}

void CSSEvaluatorTokenManager_initPackagePrivateWithCSSJavaCharStream_withInt_(CSSEvaluatorTokenManager *self, CSSJavaCharStream *stream, int32_t lexState) {
  NSObject_init(self);
  JreStrongAssign(&self->debugStream_, JreLoadStatic(JavaLangSystem, out));
  self->curLexState_ = 0;
  self->defaultLexState_ = 0;
  JreStrongAssignAndConsume(&self->jjrounds_, [IOSIntArray newArrayWithLength:9]);
  JreStrongAssignAndConsume(&self->jjstateSet_, [IOSIntArray newArrayWithLength:2 * 9]);
  [self ReInitWithCSSJavaCharStream:stream];
  [self SwitchToWithInt:lexState];
}

CSSEvaluatorTokenManager *new_CSSEvaluatorTokenManager_initPackagePrivateWithCSSJavaCharStream_withInt_(CSSJavaCharStream *stream, int32_t lexState) {
  J2OBJC_NEW_IMPL(CSSEvaluatorTokenManager, initPackagePrivateWithCSSJavaCharStream_withInt_, stream, lexState)
}

CSSEvaluatorTokenManager *create_CSSEvaluatorTokenManager_initPackagePrivateWithCSSJavaCharStream_withInt_(CSSJavaCharStream *stream, int32_t lexState) {
  J2OBJC_CREATE_IMPL(CSSEvaluatorTokenManager, initPackagePrivateWithCSSJavaCharStream_withInt_, stream, lexState)
}

void CSSEvaluatorTokenManager_ReInitRounds(CSSEvaluatorTokenManager *self) {
  __unused int32_t i;
  self->jjround_ = (int32_t) 0x80000001;
  for (i = 9; i-- > 0; ) *IOSIntArray_GetRef(nil_chk(self->jjrounds_), i) = -0x7fffffff - 1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CSSEvaluatorTokenManager)
